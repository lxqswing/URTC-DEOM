{"ast":null,"code":"import _Button from \"@ucloud-fe/react-components/lib/components/Button\";\nimport _Row from \"@ucloud-fe/react-components/lib/components/Row\";\nimport _Col from \"@ucloud-fe/react-components/lib/components/Col\";\nimport _Icon from \"@ucloud-fe/react-components/lib/components/Icon\";\nimport _Message from \"@ucloud-fe/react-components/lib/components/Message\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/lixiqing/work/URTC-DEOM/src/pages/home.jsx\";\n\nimport React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport Settings from \"../components/settings\";\nimport Testing from \"../components/testing/index\";\nimport bgImg from \"../common/image/com.png\";\nimport { version } from \"../config/version\";\nimport Querystringify from \"querystringify\";\nimport { isPC, isSafari } from \"../util/index\";\nimport { LoginWrapper } from './home.styles.jsx';\nimport SDK from \"urtc-sdk\";\nimport \"./login.css\";\nconst {\n  isSupportWebRTC\n} = SDK;\nlet Login = (_dec = inject(\"store\"), _dec(_class = observer(_class = (_temp = class Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.joinIn = () => {\n      let roomId = this.state.roomIdValue;\n      let storeSettings = this.props.store.settings;\n      console.log(\"storeSettings,\", storeSettings);\n      let userId = storeSettings.userId;\n      this.props.history.push({\n        pathname: \"/class\",\n        state: {\n          roomId: roomId,\n          userId: userId\n        }\n      });\n      storeSettings.joinRoom({\n        roomId: roomId,\n        userId: userId\n      });\n    };\n\n    this.setting = () => {\n      this.setState({\n        setVisible: true\n      });\n      let storeSettings = this.props.store.settings;\n      storeSettings.settingsActive(true);\n    };\n\n    this.roomId = e => {\n      this.setState({\n        roomIdValue: e.target.value\n      });\n      console.log(e.target.value);\n    };\n\n    this.toggleTesting = flag => {\n      this.setState({\n        testingVisible: flag\n      });\n    };\n\n    let _storeSettings = this.props.store.settings;\n    const query = Querystringify.parse(props.location.search);\n    console.log(\"query\", query);\n    const {\n      roomId: _roomId = \"\",\n      roomType = \"rtc\"\n    } = query;\n\n    if (_roomId) {\n      _storeSettings.joinRoom({\n        roomId: _roomId\n      });\n    }\n\n    if (roomType === \"live\") {\n      _storeSettings.setParamKey(\"roomType\", \"live\");\n\n      _storeSettings.setParamKey(\"userRole\", \"pull\");\n    } //不支持rtc，统一权限改为拉流pull\n\n\n    if (!isSupportWebRTC()) {\n      _storeSettings.setParamKey(\"userRole\", \"pull\");\n    }\n\n    this.state = {\n      loading: false,\n      setVisible: true,\n      roomIdValue: _roomId,\n      testingVisible: false,\n      isPhone: !isPC(),\n      supportRTC: isSupportWebRTC()\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.supportRTC) {\n      _Message.error(\"当前浏览器不支持RTC推流，建议更换Safari 或 Chrome 重试\");\n    }\n  }\n\n  setClose() {\n    this.setState({\n      setVisible: false\n    });\n  }\n\n  render() {\n    const {\n      setVisible,\n      testingVisible,\n      roomIdValue,\n      isPhone\n    } = this.state;\n    console.log(\"isSupportWebRTC\", isSupportWebRTC());\n    return /*#__PURE__*/React.createElement(LoginWrapper, {\n      className: \"login\",\n      width: isPhone ? 300 : 512,\n      isPhone: isPhone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"setting-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header_left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header_Icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header_right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(_Icon, {\n      onClick: this.setting,\n      type: \"cog\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Settings, {\n      visible: setVisible,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(_Row, {\n      getter: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(_Col, {\n      span: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"title-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, \"\\u623F\\u95F4\\u53F7\\u7801\")), /*#__PURE__*/React.createElement(_Col, {\n      span: 4,\n      offset: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, isPhone || isSafari() ? null : /*#__PURE__*/React.createElement(\"p\", {\n      className: \"title-right\",\n      onClick: this.toggleTesting.bind(this, true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    }, \"\\u68C0\\u6D4B\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"title_icon icon__arrow-right\" // type=\"arrow-right\"\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    })), testingVisible && /*#__PURE__*/React.createElement(Testing, {\n      show: testingVisible,\n      close: this.toggleTesting.bind(this, false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: roomIdValue,\n      type: \"text\",\n      className: \"room-id\",\n      onChange: this.roomId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(_Button, {\n      className: \"btn\",\n      styleType: \"primary\",\n      size: \"lg\",\n      onClick: this.joinIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    }, \"加入\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"version-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }, `DEMO : ${version}`))));\n  }\n\n}, _temp)) || _class) || _class);\nexport default Login;","map":{"version":3,"sources":["/Users/lixiqing/work/URTC-DEOM/src/pages/home.jsx"],"names":["React","observer","inject","Settings","Testing","bgImg","version","Querystringify","isPC","isSafari","LoginWrapper","SDK","isSupportWebRTC","Login","Component","constructor","props","joinIn","roomId","state","roomIdValue","storeSettings","store","settings","console","log","userId","history","push","pathname","joinRoom","setting","setState","setVisible","settingsActive","e","target","value","toggleTesting","flag","testingVisible","query","parse","location","search","roomType","setParamKey","loading","isPhone","supportRTC","componentDidMount","error","setClose","render","bind"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { Icon, Row, Col, Button, Message } from \"@ucloud-fe/react-components\";\nimport Settings from \"../components/settings\";\nimport Testing from \"../components/testing/index\";\nimport bgImg from \"../common/image/com.png\";\nimport { version } from \"../config/version\";\nimport Querystringify from \"querystringify\";\nimport { isPC, isSafari } from \"../util/index\";\nimport { LoginWrapper } from './home.styles.jsx';\nimport SDK from \"urtc-sdk\";\nimport \"./login.css\";\nconst { isSupportWebRTC } = SDK;\n\n\n@inject(\"store\")\n@observer\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    let storeSettings = this.props.store.settings;\n    const query = Querystringify.parse(props.location.search);\n    console.log(\"query\", query);\n    const { roomId = \"\", roomType = \"rtc\" } = query;\n    if (roomId) {\n      storeSettings.joinRoom({\n        roomId: roomId,\n      });\n    }\n    if (roomType === \"live\") {\n      storeSettings.setParamKey(\"roomType\", \"live\");\n      storeSettings.setParamKey(\"userRole\", \"pull\");\n    }\n\n    //不支持rtc，统一权限改为拉流pull\n    if (!isSupportWebRTC()) {\n      storeSettings.setParamKey(\"userRole\", \"pull\");\n    }\n\n    this.state = {\n      loading: false,\n      setVisible: true,\n      roomIdValue: roomId,\n      testingVisible: false,\n      isPhone: !isPC(),\n      supportRTC: isSupportWebRTC(),\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.supportRTC) {\n      Message.error(\"当前浏览器不支持RTC推流，建议更换Safari 或 Chrome 重试\");\n    }\n  }\n  joinIn = () => {\n    let roomId = this.state.roomIdValue;\n    let storeSettings = this.props.store.settings;\n\n    console.log(\"storeSettings,\", storeSettings);\n    let userId = storeSettings.userId;\n    this.props.history.push({\n      pathname: \"/class\",\n      state: { roomId: roomId, userId: userId },\n    });\n    storeSettings.joinRoom({\n      roomId: roomId,\n      userId: userId,\n    });\n  };\n\n  setting = () => {\n    this.setState({\n      setVisible: true,\n    });\n    let storeSettings = this.props.store.settings;\n    storeSettings.settingsActive(true);\n  };\n\n  roomId = (e) => {\n    this.setState({\n      roomIdValue: e.target.value,\n    });\n    console.log(e.target.value);\n  };\n\n  setClose() {\n    this.setState({\n      setVisible: false,\n      \n    });\n  }\n\n  toggleTesting = (flag) => {\n    this.setState({\n      testingVisible: flag,\n    });\n  };\n\n  render() {\n    const { setVisible, testingVisible, roomIdValue, isPhone } = this.state;\n    console.log(\"isSupportWebRTC\", isSupportWebRTC());\n    return (\n      <LoginWrapper\n        className=\"login\"\n        width={isPhone ? 300 : 512}\n        isPhone={isPhone}\n      >\n        <div className=\"setting-content\">\n          <div className=\"header\">\n            <div className=\"header_left\">\n              <div className=\"header_Icon\">\n                {/*\n                  <a\n                  href=\"https://www.ucloud.cn/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <img src={bgImg} alt=\"\" />\n                </a>\n                */}\n              </div>\n            </div>\n            <div className=\"header_right\">\n              <Icon onClick={this.setting} type={\"cog\"} />\n              <Settings visible={setVisible} />\n            </div>\n          </div>\n\n          <div className=\"main\">\n            <Row getter={0}>\n              <Col span={5}>\n                <p className=\"title-left\">房间号码</p>\n              </Col>\n              <Col span={4} offset={3}>\n                {(isPhone || isSafari()) ? null : (\n                  <p\n                    className=\"title-right\"\n                    onClick={this.toggleTesting.bind(this, true)}\n                  >\n                    检测{\" \"}\n                    <span\n                      className=\"title_icon icon__arrow-right\"\n                    // type=\"arrow-right\"\n                    />\n                  </p>\n                )}\n\n                {testingVisible && (\n                  <Testing\n                    show={testingVisible}\n                    close={this.toggleTesting.bind(this, false)}\n                  />\n                )}\n              </Col>\n            </Row>\n            <div>\n              <input\n                value={roomIdValue}\n                type=\"text\"\n                className=\"room-id\"\n                onChange={this.roomId}\n              />\n            </div>\n            <div className=\"btn-content\">\n              <Button\n                className=\"btn\"\n                styleType=\"primary\"\n                size=\"lg\"\n                onClick={this.joinIn}\n              >\n                {\"加入\"}\n              </Button>\n            </div>\n          </div>\n          <div className=\"version-wrapper\">\n            <span>{`DEMO : ${version}`}</span>\n          </div>\n        </div>\n      </LoginWrapper>\n    );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}