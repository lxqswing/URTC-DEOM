{"ast":null,"code":"import _Message from \"@ucloud-fe/react-components/lib/components/Message\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/lixiqing/work/URTC-DEOM/src/pages/classRoom.jsx\";\n\n// @ts-nocheck\n\n/* eslint-disable */\nimport React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport \"./classRoom.css\";\nimport \"../common/ucloudicons/dist/css/icon.min.css\";\nimport sdk, { Client } from \"urtc-sdk\";\nimport ClassFooter from \"../components/footer/index\";\nimport ClassHeader from \"../components/header/new\";\nimport ClassVideoWrapper from \"../container/classVideoWrapper/index\";\nimport { getCookie } from \"../util/cookie\";\nlet ClassRoom = (_dec = inject(\"store\"), _dec(_class = observer(_class = (_temp = class ClassRoom extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.startRelay = flag => {\n      this.setState({\n        relayShow: flag\n      });\n    };\n\n    this.publish = () => {\n      const storeData = this.props.store.settings;\n      this.Client.publish({\n        audio: true,\n        video: true,\n        cameraId: storeData.videoInput\n      }, function () {\n        _Message.message( /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 25\n          }\n        }, \"\\u6CA1\\u6709\\u63A8\\u6D41\\u6743\\u9650\"), undefined, () => console.log(\"onClose\"));\n      });\n    };\n\n    this.unPublish = () => {\n      let {\n        lineFlag\n      } = this.state;\n\n      if (lineFlag) {\n        this.Client.unpublish(stream => {\n          _Message.success(\"下麦成功\");\n\n          let {\n            allStream,\n            localStream\n          } = this.state;\n          const idx = allStream.findIndex(item => localStream.sid === item.sid);\n\n          if (idx !== -1) {\n            allStream.splice(idx, 1);\n            console.log('>>>>下', allStream);\n            this.setState({\n              localStream: null,\n              allStream: allStream,\n              lineFlag: false\n            }, () => {\n              this.props.store.common.setAudioMuteStats(false);\n              this.props.store.common.setVideoMuteStats(false);\n              this.getLayoutStream(allStream);\n            });\n          }\n        });\n      } else {\n        this.publish();\n        this.setState({\n          lineFlag: true\n        });\n      }\n    };\n\n    this.getLayoutStream = (arr = [], refreshFlag = true) => {\n      console.log('res', arr);\n\n      if (refreshFlag) {\n        this.stopStreams();\n      }\n\n      const {\n        mainSid\n      } = this.state;\n      let mainArr = [];\n      let remoteArr = [];\n      arr.map(e => {\n        if (e.sid === mainSid) {\n          mainArr.push(e);\n        } else {\n          remoteArr.push(e);\n        }\n      }); //主屏幕没流\n\n      if (mainArr.length == 0 && remoteArr.length >= 1) {\n        mainArr.push(remoteArr[0]);\n        remoteArr.splice(0, 1);\n      }\n\n      this.setState({\n        mainStream: mainArr,\n        remoteStreams: remoteArr\n      }, () => {\n        if (refreshFlag) {\n          this.playStreams();\n        }\n      });\n    };\n\n    this.stopStreams = () => {\n      let {\n        allStream = []\n      } = this.state;\n      let arr = allStream.map(stream => {\n        return new Promise((resolve, reject) => {\n          this.Client.stop(stream.sid, err => {\n            if (!err) {\n              resolve();\n            } else {\n              reject(err);\n            }\n          });\n        });\n      });\n      return Promise.all(arr);\n    };\n\n    this.playStreams = () => {\n      let {\n        allStream = []\n      } = this.state;\n\n      for (let index = 0; index < allStream.length; index++) {\n        const id = allStream[index].sid;\n\n        if (allStream[index].mediaType === \"screen\") {\n          this.Client.play({\n            streamId: id,\n            container: id,\n            fit: \"cover\"\n          }, err => {\n            if (!err) {\n              reject(console.log(\"播放失败\", err, prevId));\n            }\n          });\n        } else {\n          this.Client.play({\n            streamId: id,\n            container: id,\n            fit: \"contain\"\n          }, err => {\n            if (!err) {\n              reject(console.log(\"播放失败\", err, prevId));\n            }\n          });\n        }\n      }\n    };\n\n    this.filterStream = (arr, sid) => {\n      const idx = arr.findIndex(item => sid === item.sid);\n\n      if (idx !== -1) {\n        arr.splice(idx, 1);\n        return arr;\n      }\n    };\n\n    this.state = {\n      loading: false,\n      localStream: null,\n      localCameraSid: \"0\",\n      screenStream: null,\n      videoMute: false,\n      audioMute: false,\n      volumeMute: false,\n      recordVisible: false,\n      uplink: \"\",\n      downlink: \"\",\n      linkColor: \"#fff\",\n      relayShow: false,\n      paramsData: null,\n      roomId: \"\",\n      userName: \"\",\n      volumeData: \"14\",\n      currentVideoItem: \"local\",\n      remoteVolumeData: [],\n      muteRemoteVolume: [],\n      allStream: [],\n      mailSid: null,\n      mainStream: [],\n      remoteStreams: [],\n      lineFlag: true\n    };\n    this.videoChange = this.videoChange.bind(this);\n  }\n\n  componentDidMount() {\n    if (getCookie(\"settingParam\") == undefined) {\n      this.props.history.push(\"/\");\n      return;\n    }\n\n    let param = JSON.parse(getCookie(\"settingParam\"));\n    this.props.store.settings.settingsData(param);\n    this.props.store.settings.joinRoom({\n      roomId: param.roomId\n    });\n    console.log(\"param\", param);\n    let locationState = this.props.location.state;\n\n    if (!locationState) {\n      this.props.history.push(\"/\");\n    } else {\n      this.initURtc(locationState);\n    }\n  }\n\n  initURtc(data) {\n    this.setState({\n      paramsData: data\n    });\n    const storeData = this.props.store.settings;\n    const storeClient = this.props.store.client;\n    let roomId = data.roomId;\n    let userId = this.props.store.settings.userId || data.userId;\n    const AppId = storeData.AppId;\n    const AppKey = storeData.AppKey;\n    const signalLink = storeData.signalLink;\n    this.setState({\n      roomId: roomId,\n      userName: storeData.userName\n    });\n    console.log('sss', storeData);\n    let token = sdk.generateToken(AppId, AppKey, roomId, userId);\n    this.Client = new Client(AppId, token, {\n      type: storeData.roomType,\n      role: storeData.userRole,\n      codec: storeData.videoCodec\n    });\n    storeClient.initClient(this.Client);\n    this.Client.joinRoom(roomId, userId, (e, s) => {\n      _Message.config({\n        duration: 3000,\n        top: 20\n      });\n\n      this.Client.setVideoProfile({\n        profile: storeData.videoProlie\n      });\n\n      if (storeData.userRole !== \"pull\") {\n        this.publish();\n      }\n    });\n    this.Client.on(\"stream-published\", stream => {\n      const {\n        allStream = []\n      } = this.state;\n      allStream.push(stream);\n\n      if (stream.mediaType === \"camera\") {\n        if (this.state.mainStream.length && this.state.mainStream[0].mediaType === \"screen\") {\n          this.setState({\n            localStream: stream,\n            localCameraSid: stream.sid,\n            mainType: \"camera\"\n          }, () => {\n            this.getLayoutStream(allStream);\n          });\n          return;\n        }\n\n        this.setState({\n          mainSid: stream.sid,\n          localStream: stream,\n          localCameraSid: stream.sid,\n          mainType: \"camera\"\n        }, () => {\n          this.getLayoutStream(allStream);\n        });\n      }\n\n      if (stream.mediaType === \"screen\") {\n        let nextId = stream.sid;\n        this.setState({\n          mainSid: nextId\n        }, () => {\n          this.getLayoutStream(allStream);\n        });\n      }\n    });\n    this.Client.on(\"screenshare-stopped\", stream => {\n      console.log(\"screenshare-stopped\", stream);\n      this.Client.unpublish(stream.sid, e => {\n        const {\n          allStream = []\n        } = this.state;\n        let arr = this.filterStream(allStream, stream.sid);\n\n        if (stream.sid == this.state.mailSid) {\n          let targetId = localStream ? localStream.sid : arr.length ? arr[0].sid : null;\n          this.setState({\n            allStream: arr,\n            mainSid: targetId\n          }, () => {\n            this.getLayoutStream(arr);\n          });\n          return;\n        } else {\n          this.setState({\n            allStream: arr\n          }, () => {\n            this.getLayoutStream(arr);\n          });\n          return;\n        }\n      });\n    });\n    this.Client.on(\"stream-reconnected\", streams => {\n      console.log(\"断网重连\", streams);\n      const {\n        previous,\n        current\n      } = streams;\n      const {\n        allStream = []\n      } = this.state;\n      const idx = allStream.findIndex(item => previous.sid === item.sid);\n\n      if (idx !== -1) {\n        allStream.splice(idx, 1);\n        allStream.push(current);\n\n        if (this.state.mainSid === previous.sid) {\n          this.setState({\n            mainSid: current.sid\n          }, () => {\n            this.getLayoutStream(allStream);\n          });\n          return;\n        } else {\n          this.setState({\n            allStream\n          }, () => {\n            this.getLayoutStream(allStream);\n          });\n        }\n      }\n    });\n    this.Client.on(\"stream-subscribed\", stream => {\n      console.log(\"stream-subscribed\", stream);\n      const {\n        allStream = []\n      } = this.state;\n      allStream.push(stream);\n\n      if (stream.mediaType === \"screen\") {\n        let nextId = stream.sid;\n        this.setState({\n          mainSid: nextId\n        }, () => {\n          this.getLayoutStream(allStream);\n        });\n        return;\n      }\n\n      this.setState({\n        allStream: allStream\n      }, () => {\n        this.getLayoutStream(allStream);\n      });\n    });\n    this.Client.on(\"stream-added\", stream => {\n      this.Client.subscribe(stream.sid, e => {\n        console.log(\"subscribe failure \", e);\n      });\n    });\n    this.Client.on(\"stream-removed\", stream => {\n      console.log(\"stream-removed \", stream);\n      const {\n        allStream = []\n      } = this.state;\n      let arr = this.filterStream(allStream, stream.sid);\n      this.setState({\n        allStream: arr\n      }, () => {\n        this.getLayoutStream(arr);\n      });\n    });\n    this.Client.on(\"volume-indicator\", e => {\n      this.setState({\n        remoteVolumeData: e,\n        allStream\n      });\n    });\n    this.Client.on(\"mute-audio\", stream => {\n      let {\n        allStream\n      } = this.state;\n      let newRemote = allStream.map(e => {\n        if (e.sid == stream.sid) {\n          return stream;\n        } else {\n          return e;\n        }\n      });\n      this.setState({\n        allStream: newRemote\n      }, () => {\n        this.getLayoutStream(newRemote, false);\n      });\n    });\n    this.Client.on(\"mute-video\", stream => {\n      let {\n        allStream\n      } = this.state;\n      let newRemote = allStream.map(e => {\n        if (e.sid == stream.sid) {\n          return stream;\n        } else {\n          return e;\n        }\n      });\n      this.setState({\n        allStream: newRemote\n      }, () => {\n        this.getLayoutStream(newRemote, false);\n      });\n    });\n    this.Client.on(\"unmute-video\", stream => {\n      let {\n        allStream\n      } = this.state;\n      let newRemote = allStream.map(e => {\n        if (e.sid == stream.sid) {\n          return stream;\n        } else {\n          return e;\n        }\n      });\n      this.setState({\n        allStream: newRemote\n      }, () => {\n        this.getLayoutStream(newRemote, false);\n      });\n    });\n    this.Client.on(\"unmute-audio\", stream => {\n      let {\n        allStream\n      } = this.state;\n      let newRemote = allStream.map(e => {\n        if (e.sid == stream.sid) {\n          return stream;\n        } else {\n          return e;\n        }\n      });\n      this.setState({\n        allStream: newRemote\n      }, () => {\n        this.getLayoutStream(newRemote, false);\n      });\n    });\n  }\n\n  videoChange(e) {\n    this.setState({\n      mainSid: e.sid\n    }, () => {\n      this.stopStreams();\n      this.getLayoutStream(this.state.allStream);\n    });\n  } // arr 为最新全部流数组, refreshFlag 为是否stop or play全部视频\n\n\n  render() {\n    const {\n      localStream = {\n        sid: 0\n      },\n      paramsData,\n      mainStream,\n      remoteStreams,\n      localCameraSid,\n      lineFlag\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"room_main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ClassHeader, {\n      client: this.Client,\n      sid: localStream && localStream.sid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"video-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"video-cur\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 11\n      }\n    }, mainStream.map((stream, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"video-current\",\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        },\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 17\n        }\n      }, stream.sid == localCameraSid ? /*#__PURE__*/React.createElement(ClassVideoWrapper, {\n        stream: Object.assign({ ...stream,\n          muteVideo: this.props.store.common.localMuteVideo,\n          muteAudio: this.props.store.common.localMuteAudio\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 21\n        }\n      }) : /*#__PURE__*/React.createElement(ClassVideoWrapper, {\n        stream: stream,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 23\n        }\n      }));\n    })), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"video-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 11\n      }\n    }, remoteStreams.map((stream, key) => /*#__PURE__*/React.createElement(\"li\", {\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `video-item`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon__maximize video-change\",\n      title: \"\\u5207\\u6362\\u5230\\u5927\\u5C4F\",\n      onClick: () => this.videoChange(stream),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 19\n      }\n    }), stream.sid == localCameraSid ? /*#__PURE__*/React.createElement(ClassVideoWrapper, {\n      stream: Object.assign({ ...stream,\n        muteVideo: this.props.store.common.localMuteVideo,\n        muteAudio: this.props.store.common.localMuteAudio\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(ClassVideoWrapper, {\n      stream: stream,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 23\n      }\n    })))))), /*#__PURE__*/React.createElement(ClassFooter, {\n      client: this.Client,\n      paramsData: paramsData,\n      sid: localStream && localStream.sid,\n      unPublish: this.unPublish,\n      lineFlag: lineFlag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}, _temp)) || _class) || _class);\nexport default ClassRoom;","map":{"version":3,"sources":["/Users/lixiqing/work/URTC-DEOM/src/pages/classRoom.jsx"],"names":["React","observer","inject","sdk","Client","ClassFooter","ClassHeader","ClassVideoWrapper","getCookie","ClassRoom","Component","constructor","props","startRelay","flag","setState","relayShow","publish","storeData","store","settings","audio","video","cameraId","videoInput","message","undefined","console","log","unPublish","lineFlag","state","unpublish","stream","success","allStream","localStream","idx","findIndex","item","sid","splice","common","setAudioMuteStats","setVideoMuteStats","getLayoutStream","arr","refreshFlag","stopStreams","mainSid","mainArr","remoteArr","map","e","push","length","mainStream","remoteStreams","playStreams","Promise","resolve","reject","stop","err","all","index","id","mediaType","play","streamId","container","fit","prevId","filterStream","loading","localCameraSid","screenStream","videoMute","audioMute","volumeMute","recordVisible","uplink","downlink","linkColor","paramsData","roomId","userName","volumeData","currentVideoItem","remoteVolumeData","muteRemoteVolume","mailSid","videoChange","bind","componentDidMount","history","param","JSON","parse","settingsData","joinRoom","locationState","location","initURtc","data","storeClient","client","userId","AppId","AppKey","signalLink","token","generateToken","type","roomType","role","userRole","codec","videoCodec","initClient","s","config","duration","top","setVideoProfile","profile","videoProlie","on","mainType","nextId","targetId","streams","previous","current","subscribe","newRemote","render","height","width","Object","assign","muteVideo","localMuteVideo","muteAudio","localMuteAudio","key"],"mappings":"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","sourcesContent":["// @ts-nocheck\n/* eslint-disable */\nimport React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport \"./classRoom.css\";\nimport \"../common/ucloudicons/dist/css/icon.min.css\";\nimport sdk, { Client } from \"urtc-sdk\";\nimport { Message } from \"@ucloud-fe/react-components\";\nimport ClassFooter from \"../components/footer/index\";\nimport ClassHeader from \"../components/header/new\";\nimport ClassVideoWrapper from \"../container/classVideoWrapper/index\";\nimport { getCookie } from \"../util/cookie\";\n\n\n@inject(\"store\")\n@observer\nclass ClassRoom extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      localStream: null,\n      localCameraSid: \"0\",\n      screenStream: null,\n      videoMute: false,\n      audioMute: false,\n      volumeMute: false,\n      recordVisible: false,\n      uplink: \"\",\n      downlink: \"\",\n      linkColor: \"#fff\",\n      relayShow: false,\n      paramsData: null,\n      roomId: \"\",\n      userName: \"\",\n      volumeData: \"14\",\n      currentVideoItem: \"local\",\n      remoteVolumeData: [],\n      muteRemoteVolume: [],\n      allStream: [],\n      mailSid: null,\n      mainStream: [],\n      remoteStreams: [],\n      lineFlag: true,\n\n    };\n    this.videoChange = this.videoChange.bind(this);\n  }\n  componentDidMount() {\n    if (getCookie(\"settingParam\") == undefined) {\n      this.props.history.push(\"/\");\n      return\n    }\n    let param = JSON.parse(getCookie(\"settingParam\"));\n    this.props.store.settings.settingsData(param);\n    this.props.store.settings.joinRoom({\n      roomId: param.roomId,\n    });\n    console.log(\"param\", param);\n    let locationState = this.props.location.state;\n    if (!locationState) {\n      this.props.history.push(\"/\");\n    } else {\n      this.initURtc(locationState);\n    }\n  }\n  initURtc(data) {\n    this.setState({\n      paramsData: data,\n    });\n    const storeData = this.props.store.settings;\n    const storeClient = this.props.store.client;\n    let roomId = data.roomId;\n    let userId = this.props.store.settings.userId || data.userId;\n    const AppId = storeData.AppId;\n    const AppKey = storeData.AppKey;\n    const signalLink = storeData.signalLink;\n    this.setState({\n      roomId: roomId,\n      userName: storeData.userName,\n    });\n    console.log('sss', storeData)\n\n    let token = sdk.generateToken(AppId, AppKey, roomId, userId);\n    this.Client = new Client(AppId, token, {\n      type: storeData.roomType,\n      role: storeData.userRole,\n      codec: storeData.videoCodec,\n    });\n    storeClient.initClient(this.Client);\n    this.Client.joinRoom(roomId, userId, (e, s) => {\n      Message.config({\n        duration: 3000,\n        top: 20,\n      });\n      this.Client.setVideoProfile({\n        profile: storeData.videoProlie,\n      });\n\n      if (storeData.userRole !== \"pull\") {\n        this.publish()\n      }\n    });\n    this.Client.on(\"stream-published\", (stream) => {\n      const { allStream = [] } = this.state;\n      allStream.push(stream);\n      if (stream.mediaType === \"camera\") {\n        if (this.state.mainStream.length && this.state.mainStream[0].mediaType === \"screen\") {\n          this.setState(\n            {\n              localStream: stream,\n              localCameraSid: stream.sid,\n              mainType: \"camera\",\n            },\n            () => {\n              this.getLayoutStream(allStream);\n            }\n          );\n          return\n        }\n        this.setState(\n          {\n            mainSid: stream.sid,\n            localStream: stream,\n            localCameraSid: stream.sid,\n            mainType: \"camera\",\n          },\n          () => {\n            this.getLayoutStream(allStream);\n          }\n        );\n      }\n\n      if (stream.mediaType === \"screen\") {\n        let nextId = stream.sid;\n        this.setState(\n          {\n            mainSid: nextId,\n          },\n          () => {\n            this.getLayoutStream(allStream);\n          }\n        );\n      }\n    });\n\n    this.Client.on(\"screenshare-stopped\", (stream) => {\n      console.log(\"screenshare-stopped\", stream);\n      this.Client.unpublish(stream.sid, (e) => {\n        const { allStream = [] } = this.state;\n        let arr = this.filterStream(allStream, stream.sid);\n        if (stream.sid == this.state.mailSid) {\n          let targetId = localStream ? localStream.sid : (arr.length ? arr[0].sid : null)\n          this.setState(\n            {\n              allStream: arr,\n              mainSid: targetId\n            },\n            () => {\n              this.getLayoutStream(arr);\n            }\n          )\n          return\n        } else {\n          this.setState(\n            {\n              allStream: arr,\n            },\n            () => {\n              this.getLayoutStream(arr);\n            }\n          );\n          return\n        }\n      });\n    });\n\n    this.Client.on(\"stream-reconnected\", (streams) => {\n      console.log(\"断网重连\", streams);\n      const { previous, current } = streams;\n      const { allStream = [] } = this.state;\n      const idx = allStream.findIndex((item) => previous.sid === item.sid);\n      if (idx !== -1) {\n        allStream.splice(idx, 1);\n        allStream.push(current);\n        if (this.state.mainSid === previous.sid) {\n          this.setState({\n            mainSid: current.sid,\n          }, () => {\n            this.getLayoutStream(allStream)\n          })\n          return\n        } else {\n          this.setState({\n            allStream,\n          }, () => {\n            this.getLayoutStream(allStream)\n          });\n        }\n\n      }\n    });\n\n    this.Client.on(\"stream-subscribed\", (stream) => {\n      console.log(\"stream-subscribed\", stream);\n\n      const { allStream = [] } = this.state;\n      allStream.push(stream);\n\n      if (stream.mediaType === \"screen\") {\n        let nextId = stream.sid;\n        this.setState(\n          {\n            mainSid: nextId,\n          },\n          () => {\n            this.getLayoutStream(allStream);\n          }\n        );\n        return;\n      }\n      this.setState(\n        {\n          allStream: allStream,\n        },\n        () => {\n          this.getLayoutStream(allStream);\n        }\n      );\n    });\n\n    this.Client.on(\"stream-added\", (stream) => {\n      this.Client.subscribe(stream.sid, (e) => {\n        console.log(\"subscribe failure \", e);\n      });\n    });\n\n    this.Client.on(\"stream-removed\", (stream) => {\n      console.log(\"stream-removed \", stream);\n      const { allStream = [] } = this.state;\n      let arr = this.filterStream(allStream, stream.sid);\n\n      this.setState(\n        {\n          allStream: arr,\n        },\n        () => {\n          this.getLayoutStream(arr);\n        }\n      );\n    });\n\n    this.Client.on(\"volume-indicator\", (e) => {\n      this.setState({\n        remoteVolumeData: e,\n        allStream,\n      });\n    });\n\n    this.Client.on(\"mute-audio\", (stream) => {\n      let { allStream } = this.state;\n      let newRemote = allStream.map((e) => {\n        if (e.sid == stream.sid) {\n          return stream;\n        } else {\n          return e;\n        }\n      });\n\n      this.setState(\n        {\n          allStream: newRemote,\n        },\n        () => {\n          this.getLayoutStream(newRemote, false);\n        }\n      );\n    });\n\n    this.Client.on(\"mute-video\", (stream) => {\n      let { allStream } = this.state;\n      let newRemote = allStream.map((e) => {\n        if (e.sid == stream.sid) {\n          return stream;\n        } else {\n          return e;\n        }\n      });\n\n      this.setState(\n        {\n          allStream: newRemote,\n        },\n        () => {\n          this.getLayoutStream(newRemote, false);\n        }\n      );\n    });\n\n    this.Client.on(\"unmute-video\", (stream) => {\n      let { allStream } = this.state;\n      let newRemote = allStream.map((e) => {\n        if (e.sid == stream.sid) {\n          return stream;\n        } else {\n          return e;\n        }\n      });\n\n      this.setState(\n        {\n          allStream: newRemote,\n        },\n        () => {\n          this.getLayoutStream(newRemote, false);\n        }\n      );\n    });\n\n    this.Client.on(\"unmute-audio\", (stream) => {\n      let { allStream } = this.state;\n      let newRemote = allStream.map((e) => {\n        if (e.sid == stream.sid) {\n          return stream;\n        } else {\n          return e;\n        }\n      });\n\n      this.setState(\n        {\n          allStream: newRemote,\n        },\n        () => {\n          this.getLayoutStream(newRemote, false);\n        }\n      );\n    });\n  }\n\n  startRelay = (flag) => {\n    this.setState({\n      relayShow: flag,\n    });\n  };\n\n  publish = () => {\n    const storeData = this.props.store.settings;\n    this.Client.publish(\n      {\n        audio: true,\n        video: true,\n        cameraId: storeData.videoInput,\n      },\n      function () {\n        Message.message(<div>没有推流权限</div>, undefined, () =>\n          console.log(\"onClose\")\n        );\n      }\n    );\n  }\n\n  //下麦操作\n  unPublish = () => {\n    let { lineFlag } = this.state;\n    if (lineFlag) {\n      this.Client.unpublish((stream) => {\n        Message.success(\"下麦成功\");\n        let { allStream, localStream } = this.state;\n        const idx = allStream.findIndex((item) => localStream.sid === item.sid)\n        if (idx !== -1) {\n          allStream.splice(idx, 1);\n          console.log('>>>>下', allStream)\n          this.setState({\n            localStream: null,\n            allStream: allStream,\n            lineFlag: false,\n          }, () => {\n            this.props.store.common.setAudioMuteStats(false);\n            this.props.store.common.setVideoMuteStats(false);\n            this.getLayoutStream(allStream);\n          });\n        }\n      });\n    } else {\n      this.publish()\n      this.setState({\n        lineFlag: true,\n      });\n    }\n  };\n\n  videoChange(e) {\n    this.setState(\n      {\n        mainSid: e.sid,\n      },\n      () => {\n        this.stopStreams();\n        this.getLayoutStream(this.state.allStream);\n      }\n    );\n  }\n\n  // arr 为最新全部流数组, refreshFlag 为是否stop or play全部视频\n  getLayoutStream = (arr = [], refreshFlag = true) => {\n    console.log('res', arr)\n    if (refreshFlag) {\n      this.stopStreams();\n    }\n    const { mainSid } = this.state;\n    let mainArr = [];\n    let remoteArr = [];\n\n    arr.map((e) => {\n      if (e.sid === mainSid) {\n        mainArr.push(e);\n      } else {\n        remoteArr.push(e);\n      }\n    });\n\n    //主屏幕没流\n    if (mainArr.length == 0 && remoteArr.length >= 1) {\n      mainArr.push(remoteArr[0]);\n      remoteArr.splice(0, 1)\n    }\n    this.setState(\n      {\n        mainStream: mainArr,\n        remoteStreams: remoteArr,\n      },\n      () => {\n        if (refreshFlag) {\n          this.playStreams();\n        }\n      }\n    );\n\n  };\n\n  stopStreams = () => {\n    let { allStream = [] } = this.state;\n    let arr = allStream.map((stream) => {\n      return new Promise((resolve, reject) => {\n        this.Client.stop(stream.sid, (err) => {\n          if (!err) {\n            resolve();\n          } else {\n            reject(err);\n          }\n        });\n      });\n    });\n    return Promise.all(arr);\n  };\n\n  playStreams = () => {\n    let { allStream = [] } = this.state;\n    for (let index = 0; index < allStream.length; index++) {\n      const id = allStream[index].sid;\n      if (allStream[index].mediaType === \"screen\") {\n        this.Client.play(\n          { streamId: id, container: id, fit: \"cover\" },\n          (err) => {\n            if (!err) {\n              reject(console.log(\"播放失败\", err, prevId));\n            }\n          }\n        );\n      } else {\n        this.Client.play(\n          { streamId: id, container: id, fit: \"contain\" },\n          (err) => {\n            if (!err) {\n              reject(console.log(\"播放失败\", err, prevId));\n            }\n          }\n        );\n      }\n\n    }\n  };\n\n  filterStream = (arr, sid) => {\n    const idx = arr.findIndex((item) => sid === item.sid);\n    if (idx !== -1) {\n      arr.splice(idx, 1);\n      return arr;\n    }\n  };\n\n  render() {\n    const {\n      localStream = { sid: 0 },\n      paramsData,\n      mainStream,\n      remoteStreams,\n      localCameraSid,\n      lineFlag,\n    } = this.state;\n    return (\n      <div className=\"room_main\">\n        <ClassHeader\n          client={this.Client}\n          sid={localStream && localStream.sid}\n        />\n\n        <div className=\"video-wrapper\">\n          <div className=\"video-cur\">\n            {mainStream.map((stream, index) => {\n              return (\n                <div\n                  className=\"video-current\"\n                  style={{\n                    height: \"100%\",\n                    width: \"100%\",\n                  }}\n                  key={index}\n                >\n                  {stream.sid == localCameraSid ? (\n                    <ClassVideoWrapper\n                      stream={Object.assign({\n                        ...stream,\n                        muteVideo: this.props.store.common.localMuteVideo,\n                        muteAudio: this.props.store.common.localMuteAudio,\n                      })}\n                    />\n                  ) : (\n                      <ClassVideoWrapper stream={stream} />\n                    )}\n                </div>\n              );\n            })}\n          </div>\n          <ul className=\"video-list\">\n            {remoteStreams.map((stream, key) => (\n              <li key={key}>\n                <div className={`video-item`}>\n                  {/* {stream.mediaType === \"screen\" ? null : ( */}\n                  <span\n                    className=\"icon__maximize video-change\"\n                    title=\"切换到大屏\"\n                    onClick={() => this.videoChange(stream)}\n                  ></span>\n                  {/* )} */}\n\n                  {stream.sid == localCameraSid ? (\n                    <ClassVideoWrapper\n                      stream={Object.assign({\n                        ...stream,\n                        muteVideo: this.props.store.common.localMuteVideo,\n                        muteAudio: this.props.store.common.localMuteAudio,\n                      })}\n                    />\n                  ) : (\n                      <ClassVideoWrapper stream={stream} />\n                    )}\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <ClassFooter\n          client={this.Client}\n          paramsData={paramsData}\n          sid={localStream && localStream.sid}\n\n          unPublish={this.unPublish}\n          lineFlag={lineFlag}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ClassRoom;\n"]},"metadata":{},"sourceType":"module"}