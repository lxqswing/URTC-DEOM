{"ast":null,"code":"import _Message from \"@ucloud-fe/react-components/lib/components/Message\";\n\nvar _dec,\n    _class,\n    _class2,\n    _temp,\n    _jsxFileName = \"/Users/lixiqing/work/URTC-DEOM/src/container/videoWrapper/index.jsx\";\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { observer, inject } from \"mobx-react\";\nimport ReactPlayer from \"react-player\";\nconst Wrapper = styled.div`\n  position: relative;\n  height: 160px;\n  padding: 10px 0 0 0;\n`;\n/**\n * @param index\n * @param id\n */\n\nlet VideoWrapper = (_dec = inject(\"store\"), _dec(_class = observer(_class = (_temp = _class2 = class VideoWrapper extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      stream: null,\n      previewId: null\n    };\n\n    this.createStream = id => {\n      this.store = this.props.store.testingStore;\n      this.store.sdkClient.createStream({\n        previewId: id,\n        audio: true,\n        video: true,\n        cameraId: id\n      }, (error, stream) => {\n        if (!error) {\n          this.setState({\n            stream,\n            previewId: `${id}`\n          });\n          console.log(\"create video stream success:\", stream);\n        } else {\n          _Message.error(`create video stream failed:${error}`);\n        }\n      });\n    };\n\n    this.destroy = id => {\n      if (id) {\n        this.store = this.props.store.testingStore;\n        this.store.sdkClient.destroyStream(id, error => {\n          if (error) {\n            console.log(`销毁流失败>>>:`, error);\n          } else {\n            console.log(`销毁流成功`);\n          }\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.createStream(this.props.id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.id !== nextProps.id) {\n      if (this.state.previewId) {\n        this.destroy(this.props.id);\n      }\n\n      this.createStream(nextProps.id);\n    }\n  }\n\n  render() {\n    let {\n      stream,\n      previewId\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ReactPlayer, {\n      key: previewId,\n      width: \"100%\",\n      height: \"100%\",\n      url: stream && stream.mediaStream,\n      muted: true,\n      playing: true,\n      playsinline: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}, _class2.defaultProps = {\n  index: 0,\n  id: null\n}, _temp)) || _class) || _class);\nexport default VideoWrapper;","map":{"version":3,"sources":["/Users/lixiqing/work/URTC-DEOM/src/container/videoWrapper/index.jsx"],"names":["React","styled","observer","inject","ReactPlayer","Wrapper","div","VideoWrapper","Component","state","stream","previewId","createStream","id","store","props","testingStore","sdkClient","audio","video","cameraId","error","setState","console","log","destroy","destroyStream","componentDidMount","componentWillReceiveProps","nextProps","render","mediaStream","defaultProps","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Message } from \"@ucloud-fe/react-components\";\nimport { observer, inject } from \"mobx-react\";\nimport ReactPlayer from \"react-player\";\n\nconst Wrapper = styled.div`\n  position: relative;\n  height: 160px;\n  padding: 10px 0 0 0;\n`;\n\n/**\n * @param index\n * @param id\n */\n\n@inject(\"store\")\n@observer\nclass VideoWrapper extends React.Component {\n  static defaultProps = {\n    index: 0,\n    id: null,\n  };\n\n  state = {\n    stream: null,\n    previewId: null,\n  };\n\n  componentDidMount() {\n    this.createStream(this.props.id);\n  }\n\n  createStream = (id) => {\n    this.store = this.props.store.testingStore;\n    this.store.sdkClient.createStream(\n      {\n        previewId: id,\n        audio: true,\n        video: true,\n        cameraId: id,\n      },\n      (error, stream) => {\n        if (!error) {\n          this.setState({\n            stream,\n            previewId: `${id}`,\n          });\n          console.log(\"create video stream success:\", stream);\n        } else {\n          Message.error(`create video stream failed:${error}`);\n        }\n      }\n    );\n  };\n\n  destroy = (id) => {\n    if (id) {\n      this.store = this.props.store.testingStore;\n      this.store.sdkClient.destroyStream(id, (error) => {\n        if (error) {\n          console.log(`销毁流失败>>>:`, error);\n        } else {\n          console.log(`销毁流成功`);\n        }\n      });\n    }\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.id !== nextProps.id) {\n      if (this.state.previewId) {\n        this.destroy(this.props.id);\n      }\n      this.createStream(nextProps.id);\n    }\n  }\n\n  render() {\n    let { stream, previewId } = this.state;\n    return (\n      <Wrapper>\n        <ReactPlayer\n          key={previewId}\n          width=\"100%\"\n          height=\"100%\"\n          url={stream && stream.mediaStream}\n          muted={true}\n          playing\n          playsinline\n        />\n      </Wrapper>\n    );\n  }\n}\n\nexport default VideoWrapper;\n"]},"metadata":{},"sourceType":"module"}