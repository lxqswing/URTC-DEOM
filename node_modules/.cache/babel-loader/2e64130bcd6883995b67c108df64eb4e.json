{"ast":null,"code":"import _Icon from \"@ucloud-fe/react-components/lib/components/Icon\";\nvar _jsxFileName = \"/Users/lixiqing/work/URTC-DEOM/src/components/header/new.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { observer, useLocalStore } from \"mobx-react\";\nimport { settings } from \"../../store/index\";\nimport { Network, Header } from './new.styles.jsx'; //样式组件\n\nconst statusMap = {\n  0: {\n    status: \"未知\",\n    color: \"#fff\"\n  },\n  1: {\n    status: \"优秀\",\n    color: \"rgb(129 234 134)\"\n  },\n  2: {\n    status: \"良好\",\n    color: \"rgb(129 234 134)\"\n  },\n  3: {\n    status: \"一般\",\n    color: \"rgb(82 148 85)\"\n  },\n  4: {\n    status: \"较差\",\n    color: \"rgb(224 191 92)\"\n  },\n  5: {\n    status: \"糟糕\",\n    color: \"rgb(244 67 54)\"\n  },\n  6: {\n    status: \"rgb(177 175 175)\",\n    color: \"\"\n  },\n  default: {\n    status: \"未知\",\n    color: \"#fff\"\n  }\n};\n/**\n * @param client sdk实例\n */\n\nconst ClassHeader = observer(props => {\n  const localStore = useLocalStore(() => settings);\n  const [uplink, setUplink] = useState(\"\");\n  const [linkColor, setLinkColor] = useState(\"#fff\");\n  const [rtt, setRtt] = useState(0);\n  useEffect(() => {\n    if (props.client == null || !props.sid) return;\n\n    function getNetwork() {\n      props.client.on(\"network-quality\", Stats => {\n        if (Stats.uplink) {\n          setUplink(statusMap[Stats.uplink].status);\n          setLinkColor(statusMap[Stats.uplink].color);\n        } else {\n          setUplink(statusMap[Stats.default].status);\n          setLinkColor(statusMap[Stats.default].color);\n        }\n      });\n      let timer = setInterval(() => {\n        props.client.getNetworkStats(stats => {\n          setRtt(stats.rtt);\n        }, error => {\n          clearInterval(timer);\n          console.log(error);\n        });\n      }, 200);\n    }\n\n    getNetwork();\n  });\n  return /*#__PURE__*/React.createElement(Header, {\n    className: \"video-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"room-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"roomId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"\\u623F\\u95F4\\u53F7\\uFF1A\", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, localStore.roomId)), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"userName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, \" \", \"\\u7528\\u6237\\u540D\\uFF1A\", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, \" \", localStore.userId))), /*#__PURE__*/React.createElement(Network, {\n    className: \"network\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Icon, {\n    style: {\n      color: linkColor\n    },\n    title: `网络状态：${uplink}`,\n    type: \"bar-graph\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, `${rtt}ms`)));\n});\nexport default ClassHeader;","map":{"version":3,"sources":["/Users/lixiqing/work/URTC-DEOM/src/components/header/new.jsx"],"names":["React","useState","useEffect","observer","useLocalStore","settings","Network","Header","statusMap","status","color","default","ClassHeader","props","localStore","uplink","setUplink","linkColor","setLinkColor","rtt","setRtt","client","sid","getNetwork","on","Stats","timer","setInterval","getNetworkStats","stats","error","clearInterval","console","log","roomId","userId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Icon } from \"@ucloud-fe/react-components\";\nimport { observer, useLocalStore } from \"mobx-react\";\nimport { settings } from \"../../store/index\"\nimport { Network, Header } from './new.styles.jsx' //样式组件\nconst statusMap = {\n    0: {\n        status: \"未知\",\n        color: \"#fff\",\n    },\n    1: {\n        status: \"优秀\",\n        color: \"rgb(129 234 134)\",\n    },\n    2: {\n        status: \"良好\",\n        color: \"rgb(129 234 134)\",\n    },\n    3: {\n        status: \"一般\",\n        color: \"rgb(82 148 85)\",\n    },\n    4: {\n        status: \"较差\",\n        color: \"rgb(224 191 92)\",\n    },\n    5: {\n        status: \"糟糕\",\n        color: \"rgb(244 67 54)\",\n    },\n    6: {\n        status: \"rgb(177 175 175)\",\n        color: \"\",\n    },\n    default: {\n        status: \"未知\",\n        color: \"#fff\",\n    },\n};\n/**\n * @param client sdk实例\n */\n\nconst ClassHeader = observer((props) => {\n    const localStore = useLocalStore(() => settings)\n    const [uplink, setUplink] = useState(\"\");\n    const [linkColor, setLinkColor] = useState(\"#fff\");\n    const [rtt, setRtt] = useState(0);\n    useEffect(() => {\n        if (props.client == null || !props.sid) return\n        function getNetwork() {\n            props.client.on(\"network-quality\", (Stats) => {\n\n                if (Stats.uplink) {\n                    setUplink(statusMap[Stats.uplink].status)\n                    setLinkColor(statusMap[Stats.uplink].color)\n                } else {\n                    setUplink(statusMap[Stats.default].status)\n                    setLinkColor(statusMap[Stats.default].color)\n                }\n            });\n            let timer = setInterval(() => {\n                props.client.getNetworkStats(\n                    (stats) => {\n                        setRtt(stats.rtt)\n                    },\n                    (error) => {\n                        clearInterval(timer);\n                        console.log(error);\n                    }\n                );\n            }, 200);\n        }\n        getNetwork();\n    });\n    return (\n        <Header className=\"video-header\">\n            <div className=\"room-info\">\n                <span className=\"roomId\">\n                    房间号：<b>{localStore.roomId}</b>\n                </span>\n                <span className=\"userName\">\n                    {\" \"}\n                    用户名：<b> {localStore.userId}</b>\n                </span>\n            </div>\n\n            <Network className=\"network\">\n                <Icon\n                    style={{ color: linkColor }}\n                    title={`网络状态：${uplink}`}\n                    type=\"bar-graph\"\n                />\n                <span className=\"text\">{`${rtt}ms`}</span>\n            </Network>\n        </Header>\n    );\n})\nexport default ClassHeader;"]},"metadata":{},"sourceType":"module"}