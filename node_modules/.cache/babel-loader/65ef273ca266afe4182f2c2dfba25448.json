{"ast":null,"code":"import _Loading from \"@ucloud-fe/react-components/lib/components/Loading\";\nimport _Progress from \"@ucloud-fe/react-components/lib/components/Progress\";\n\nvar _dec,\n    _class,\n    _class2,\n    _temp,\n    _jsxFileName = \"/Users/lixiqing/work/URTC-DEOM/src/container/volumeProgress/index.jsx\";\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { deviceDetection } from \"urtc-sdk\";\nimport { observer, inject } from \"mobx-react\";\n/**\n * @param index\n * @param id\n * @param type  input or output,默认 input\n */\n// 样式\n\nconst LoadingText = styled.span`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  line-height: 50px;\n  text-align: left;\n  box-sizing: \"border-box\";\n  padding-left: 80px;\n  display: inline-block;\n`;\nconst ErrorWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  line-height: 60px;\n  text-align: left;\n  box-sizing: \"border-box\";\n  color: #f44336;\n`;\nlet VolumeProgress = (_dec = inject(\"store\"), _dec(_class = observer(_class = (_temp = _class2 = class VolumeProgress extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      volume: 0,\n      show: true,\n      errorInfo: null,\n      loading: true,\n      previewId: null\n    };\n\n    this.destroy = id => {\n      if (id) {\n        console.log(\"开始销毁流>>>\");\n        this.store = this.props.store.testingStore;\n        this.store.sdkClient.destroyStream(id, error => {\n          if (error) {\n            console.log(`销毁流失败>>>:`, error);\n          } else {\n            console.log(`销毁流成功`);\n          }\n        });\n      }\n    };\n\n    this.testDevice = callback => {\n      const {\n        id\n      } = this.props;\n      deviceDetection({\n        audio: true,\n        video: false,\n        microphoneId: id\n      }, Result => {\n        if (Result.audio && Result.video) {\n          // 麦克风和摄像头都可有和，发布或预览时可启用麦克风和摄像头\n          this.setState({\n            show: true\n          });\n        } else if (Result.audio) {// 麦克风可用，发布或预览时能启用麦克风\n        } else if (Result.video) {\n          // 摄像头可用，发布或预览时能启用摄像头\n          this.setState({\n            show: false,\n            errorInfo: Result.audioError\n          });\n        } else {\n          this.setState({\n            show: false,\n            errorInfo: Result.audioError\n          });\n        }\n\n        callback && callback();\n      });\n    };\n\n    this.createStream = id => {\n      console.log('createStream id', id);\n      this.store = this.props.store.testingStore;\n      this.store.sdkClient.createStream({\n        previewId: id,\n        audio: true,\n        video: false,\n        microphoneId: id\n      }, (error, stream) => {\n        if (!error) {\n          console.log(\"create audio stream success:\", stream);\n          this.timer = setInterval(() => {\n            if (!this.state.show) {\n              clearInterval(this.timer);\n            }\n\n            this.setState({\n              volume: this.store.sdkClient.getAudioVolume(stream.sid),\n              loading: false,\n              previewId: `${id}`\n            });\n          }, 200);\n        } else {\n          this.setState({\n            loading: false,\n            errorInfo: error.name\n          });\n          clearInterval(this.timer);\n          console.log(\"获取音量失败\", error.name);\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.testDevice(this.createStream(this.props.id));\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.id !== this.props.id && !this.isWatching) {\n      this.Client = nextProps.client;\n      this.destroy(this.props.id);\n      this.testDevice(this.createStream(nextProps.id));\n    }\n  }\n\n  render() {\n    const {\n      show,\n      errorInfo,\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(_Loading, {\n      loading: loading,\n      tip: /*#__PURE__*/React.createElement(LoadingText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 14\n        }\n      }, \"\\u68C0\\u6D4B\\u4E2D...\"),\n      indicator: null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }\n    }, show ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"90%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(_Progress, {\n      percent: this.state.volume,\n      format: null,\n      style: {\n        width: \"247px\",\n        paddingTop: \"25px\",\n        paddingLeft: \"47px\",\n        display: \"inline-block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        display: \"inline-block\",\n        paddingLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    })) : /*#__PURE__*/React.createElement(ErrorWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }, errorInfo));\n  }\n\n}, _class2.defaultProps = {\n  index: 0,\n  id: null,\n  type: \"input\"\n}, _temp)) || _class) || _class);\nexport default VolumeProgress;","map":{"version":3,"sources":["/Users/lixiqing/work/URTC-DEOM/src/container/volumeProgress/index.jsx"],"names":["React","styled","deviceDetection","observer","inject","LoadingText","span","ErrorWrapper","div","VolumeProgress","Component","state","volume","show","errorInfo","loading","previewId","destroy","id","console","log","store","props","testingStore","sdkClient","destroyStream","error","testDevice","callback","audio","video","microphoneId","Result","setState","audioError","createStream","stream","timer","setInterval","clearInterval","getAudioVolume","sid","name","componentDidMount","componentWillReceiveProps","nextProps","isWatching","Client","client","render","width","paddingTop","paddingLeft","display","defaultProps","index","type"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Progress, Loading } from \"@ucloud-fe/react-components\";\nimport { deviceDetection } from \"urtc-sdk\";\nimport { observer, inject } from \"mobx-react\";\n\n/**\n * @param index\n * @param id\n * @param type  input or output,默认 input\n */\n\n// 样式\nconst LoadingText = styled.span`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  line-height: 50px;\n  text-align: left;\n  box-sizing: \"border-box\";\n  padding-left: 80px;\n  display: inline-block;\n`;\n\nconst ErrorWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  line-height: 60px;\n  text-align: left;\n  box-sizing: \"border-box\";\n  color: #f44336;\n`;\n\n@inject(\"store\")\n@observer\nclass VolumeProgress extends React.Component {\n  static defaultProps = {\n    index: 0,\n    id: null,\n    type: \"input\",\n  };\n\n  state = {\n    volume: 0,\n    show: true,\n    errorInfo: null,\n    loading: true,\n    previewId: null,\n  };\n\n  componentDidMount() {\n    this.testDevice(this.createStream(this.props.id));\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.id !== this.props.id && !this.isWatching) {\n      this.Client = nextProps.client;\n      this.destroy(this.props.id);\n      this.testDevice(this.createStream(nextProps.id));\n    }\n  }\n\n  destroy = (id) => {\n    if (id) {\n      console.log(\"开始销毁流>>>\");\n      this.store = this.props.store.testingStore;\n      this.store.sdkClient.destroyStream(id, (error) => {\n        if (error) {\n          console.log(`销毁流失败>>>:`, error);\n        } else {\n          console.log(`销毁流成功`);\n        }\n      });\n    }\n  };\n\n  testDevice = (callback) => {\n    const { id } = this.props;\n    deviceDetection(\n      {\n        audio: true,\n        video: false,\n        microphoneId: id,\n      },\n      (Result) => {\n        if (Result.audio && Result.video) {\n          // 麦克风和摄像头都可有和，发布或预览时可启用麦克风和摄像头\n          this.setState({\n            show: true,\n          });\n        } else if (Result.audio) {\n          // 麦克风可用，发布或预览时能启用麦克风\n        } else if (Result.video) {\n          // 摄像头可用，发布或预览时能启用摄像头\n          this.setState({\n            show: false,\n            errorInfo: Result.audioError,\n          });\n        } else {\n          this.setState({\n            show: false,\n            errorInfo: Result.audioError,\n          });\n        }\n        callback && callback();\n      }\n    );\n  };\n\n  createStream = (id) => {\n    console.log('createStream id', id)\n    this.store = this.props.store.testingStore;\n    this.store.sdkClient.createStream(\n      {\n        previewId: id,\n        audio: true,\n        video: false,\n        microphoneId: id,\n      },\n      (error, stream) => {\n        if (!error) {\n          console.log(\"create audio stream success:\", stream);\n          this.timer = setInterval(() => {\n            if (!this.state.show) {\n              clearInterval(this.timer);\n            }\n            this.setState({\n              volume: this.store.sdkClient.getAudioVolume(stream.sid),\n              loading: false,\n              previewId: `${id}`,\n            });\n          }, 200);\n        } else {\n          this.setState({\n            loading: false,\n            errorInfo: error.name,\n          });\n          clearInterval(this.timer)\n          console.log(\"获取音量失败\", error.name);\n        }\n      }\n    );\n  };\n  render() {\n    const { show, errorInfo, loading } = this.state;\n    return (\n      <Loading\n        loading={loading}\n        tip={<LoadingText>检测中...</LoadingText>}\n        indicator={null}\n      >\n        {show ? (\n          <div style={{ width: \"90%\" }}>\n            <Progress\n              percent={this.state.volume}\n              format={null}\n              style={{\n                width: \"247px\",\n                paddingTop: \"25px\",\n                paddingLeft: \"47px\",\n                display: \"inline-block\",\n              }}\n            />\n            <span\n              style={{\n                display: \"inline-block\",\n                paddingLeft: \"10px\",\n              }}\n            >\n              {/* {this.state.volume} */}\n            </span>\n          </div>\n        ) : (\n            <ErrorWrapper>{errorInfo}</ErrorWrapper>\n          )}\n      </Loading>\n    );\n  }\n}\n\nexport default VolumeProgress;\n"]},"metadata":{},"sourceType":"module"}