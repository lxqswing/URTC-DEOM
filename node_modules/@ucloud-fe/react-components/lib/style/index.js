'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.spinMixin = exports.calculateSize = exports.inlineBlockWithVerticalMixin = exports.clearFixMixin = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _styledComponents = require('styled-components');

var clearFixMixin = exports.clearFixMixin = (0, _styledComponents.css)(['&:before,&:after{content:\' \';display:table;}&:after{clear:both;}']);

var inlineBlockWithVerticalMixin = exports.inlineBlockWithVerticalMixin = (0, _styledComponents.css)(['display:inline-block;vertical-align:middle;']);

var calculateSize = exports.calculateSize = function calculateSize(size, offset) {
    var _$exec = /^(\d+)(\S+)$/.exec(size),
        _$exec2 = _slicedToArray(_$exec, 3),
        number = _$exec2[1],
        unit = _$exec2[2];

    return +number + +offset + unit;
};

var spinKeyframes = (0, _styledComponents.keyframes)(['from{transform:rotate(0deg);}to{transform:rotate(360deg);}']);

var spinMixin = exports.spinMixin = (0, _styledComponents.css)(['animation:', ' 1.2s infinite linear;'], spinKeyframes);