'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Select = require('../Select');

var _Select2 = _interopRequireDefault(_Select);

var _Button = require('../Button');

var _Button2 = _interopRequireDefault(_Button);

var _KeyCode = require('../../interfaces/KeyCode');

var _KeyCode2 = _interopRequireDefault(_KeyCode);

var _NumberInput = require('../NumberInput');

var _NumberInput2 = _interopRequireDefault(_NumberInput);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Options = (_temp = _class = function (_React$Component) {
    _inherits(Options, _React$Component);

    function Options(props) {
        _classCallCheck(this, Options);

        var _this = _possibleConstructorReturn(this, (Options.__proto__ || Object.getPrototypeOf(Options)).call(this, props));

        _this.buildOptionText = function (value) {
            return value + ' ' + _this.props.locale.itemsPerPage;
        };

        _this.changeSize = function (value) {
            _this.props.changeSize(Number(value));
        };

        _this.handleChange = function (v) {
            _this.setState({
                goInputText: v
            });
        };

        _this.go = function (e) {
            var val = _this.state.goInputText;
            if (val === '') {
                return;
            }
            val = isNaN(val) ? _this.props.current : Number(val);
            if (e.keyCode === _KeyCode2.default.ENTER || e.type === 'click') {
                _this.setState({
                    goInputText: ''
                });
                _this.props.quickGo(val);
            }
        };

        _this.state = {
            goInputText: ''
        };
        return _this;
    }

    _createClass(Options, [{
        key: 'render',
        value: function render() {
            var props = this.props;
            var state = this.state;
            var locale = props.locale;
            var size = props.size,
                allPages = props.allPages,
                select = props.select;

            var prefixCls = props.rootPrefixCls + '-options';
            var changeSize = props.changeSize;
            var quickGo = props.quickGo;
            var goButton = props.goButton;
            var buildOptionText = props.buildOptionText || this.buildOptionText;
            var changeSelect = null;
            var goInput = null;
            var gotoButton = null;

            if (!(changeSize || quickGo)) {
                return null;
            }

            if (changeSize && _Select2.default) {
                var Option = _Select2.default.Option;
                var pageSize = props.pageSize || props.pageSizeOptions[0];
                var options = props.pageSizeOptions.map(function (opt, i) {
                    return _react2.default.createElement(
                        Option,
                        { key: i, value: opt },
                        buildOptionText(opt)
                    );
                });

                changeSelect = _react2.default.createElement(
                    _Select2.default,
                    _extends({
                        className: prefixCls + '-size-changer',
                        value: pageSize.toString(),
                        onChange: this.changeSize,
                        size: size
                    }, select),
                    options
                );
            }

            if (quickGo) {
                if (goButton) {
                    if (typeof goButton === 'boolean') {
                        gotoButton = _react2.default.createElement(
                            _Button2.default,
                            {
                                onClick: this.go,
                                styleType: 'primary',
                                className: prefixCls + '-gobutton',
                                onKeyUp: this.go,
                                size: size
                            },
                            locale.jumpToConfirm
                        );
                    } else {
                        gotoButton = _react2.default.createElement(
                            'span',
                            { className: prefixCls + '-gobutton', onClick: this.go, onKeyUp: this.go },
                            goButton
                        );
                    }
                }
                goInput = _react2.default.createElement(
                    'div',
                    { className: prefixCls + '-quick-jumper' },
                    _react2.default.createElement(_NumberInput2.default, {
                        size: size,
                        min: 1,
                        max: allPages,
                        value: state.goInputText,
                        onChange: this.handleChange,
                        parser: function parser(input) {
                            return input.replace(/[^\d]+/g, '');
                        },
                        onKeyUp: this.go,
                        hideHandler: true,
                        styleType: 'pagination',
                        suffix: _react2.default.createElement(
                            'span',
                            { className: prefixCls + '-quick-jumper-text' },
                            '/' + allPages
                        )
                    }),
                    gotoButton
                );
            }

            return _react2.default.createElement(
                'li',
                { className: '' + prefixCls },
                changeSelect,
                goInput
            );
        }
    }]);

    return Options;
}(_react2.default.Component), _class.propTypes = {
    changeSize: _propTypes2.default.func,
    quickGo: _propTypes2.default.func,
    current: _propTypes2.default.number,
    pageSizeOptions: _propTypes2.default.arrayOf(_propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])),
    pageSize: _propTypes2.default.number,
    buildOptionText: _propTypes2.default.func,
    locale: _propTypes2.default.object,
    size: _propTypes2.default.string,
    allPages: _propTypes2.default.number,
    select: _propTypes2.default.object
}, _class.defaultProps = {
    pageSizeOptions: ['10', '20', '30', '40']
}, _temp);
exports.default = Options;