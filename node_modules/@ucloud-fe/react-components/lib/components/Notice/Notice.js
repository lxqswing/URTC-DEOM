'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _isString2 = require('lodash/isString');

var _isString3 = _interopRequireDefault(_isString2);

var _once2 = require('lodash/once');

var _once3 = _interopRequireDefault(_once2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp2;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _deprecatedLog = require('../../utils/deprecatedLog');

var _deprecatedLog2 = _interopRequireDefault(_deprecatedLog);

var _style = require('./style');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var deprecatedLogForStyleTypeInfo = (0, _once3.default)(function () {
    return (0, _deprecatedLog2.default)('Notice styleType "info"', '"success"');
});

var StyleType = ['default', 'success', 'warning', 'error', 'disabled'];

var Notice = (_temp2 = _class = function (_Component) {
    _inherits(Notice, _Component);

    function Notice() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, Notice);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Notice.__proto__ || Object.getPrototypeOf(Notice)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
            closed: false
        }, _this.onClose = function (e) {
            var onClose = _this.props.onClose;

            _this.setState({
                closed: true
            });
            onClose(e);
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Notice, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
            var styleType = this.props.styleType;

            if (styleType === 'info') {
                deprecatedLogForStyleTypeInfo();
            }
        }
    }, {
        key: 'render',
        value: function render() {
            // eslint-disable-next-line no-unused-vars
            var _props = this.props,
                closable = _props.closable,
                _icon = _props.icon,
                children = _props.children,
                onClose = _props.onClose,
                styleType = _props.styleType,
                action = _props.action,
                rest = _objectWithoutProperties(_props, ['closable', 'icon', 'children', 'onClose', 'styleType', 'action']);

            var closed = this.state.closed;

            var icon = void 0;
            if (_icon === null || _icon === false) {
                icon = null;
            } else if ((0, _isString3.default)(_icon)) {
                icon = _react2.default.createElement(_style.NoticeIcon, { type: _icon, styleType: styleType });
            } else if (_react2.default.isValidElement(_icon)) {
                icon = _icon;
            } else {
                icon = _react2.default.createElement(_style.NoticeIcon, { type: 'circle-mark2', styleType: styleType });
            }
            return closed ? null : _react2.default.createElement(
                _style.NoticeWrap,
                _extends({}, rest, { styleType: styleType }),
                icon && _react2.default.createElement(
                    _style.NoticeIconWrap,
                    null,
                    icon
                ),
                _react2.default.createElement(
                    _style.ContentWrap,
                    null,
                    children
                ),
                action && _react2.default.createElement(
                    _style.ActionWrap,
                    null,
                    action
                ),
                closable && _react2.default.createElement(
                    _style.CloseWrap,
                    null,
                    _react2.default.createElement(_style.CloseIcon, { type: 'cross', onClick: this.onClose })
                )
            );
        }
    }]);

    return Notice;
}(_react.Component), _class.propTypes = {
    /** @ignore */
    className: _propTypes2.default.string,
    /** 是否显示关闭按钮 */
    closable: _propTypes2.default.bool,
    /** 自定义前置icon，可传入Icon type或者自定义Icon，传入null、false隐藏，默认显示感叹号icon */
    icon: _propTypes2.default.oneOfType([_propTypes2.default.oneOf([null, false]), _propTypes2.default.string, _propTypes2.default.node]),
    /** @ignore */
    children: _propTypes2.default.node,
    /** 关闭的回调 */
    onClose: _propTypes2.default.func,
    /** 样式类型 */
    styleType: _propTypes2.default.oneOf(StyleType),
    /** 自定义操作 */
    action: _propTypes2.default.node
}, _class.defaultProps = {
    closable: true,
    styleType: StyleType[0],
    onClose: function onClose() {}
}, _temp2);


Notice.StyleType = StyleType;
exports.default = Notice;