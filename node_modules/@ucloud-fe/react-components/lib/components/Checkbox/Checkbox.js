'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CheckboxContext = exports.StoreContext = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _dec2, _class, _class2, _temp2;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _createReactContext = require('create-react-context');

var _createReactContext2 = _interopRequireDefault(_createReactContext);

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

var _item = require('../../decorators/selectableWithStore/item');

var _item2 = _interopRequireDefault(_item);

var _uncontrolled = require('../../decorators/uncontrolled');

var _uncontrolled2 = _interopRequireDefault(_uncontrolled);

var _SvgIcon = require('../../components/SvgIcon');

var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

var _style = require('./style');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Size = ['sm', 'md', 'lg'];
var StyleType = ['default', 'card'];

var StoreContext = exports.StoreContext = (0, _createReactContext2.default)();
var CheckboxContext = exports.CheckboxContext = (0, _createReactContext2.default)();

var Checkbox = (_dec = (0, _uncontrolled2.default)({ valueName: 'checked' }), _dec2 = (0, _item2.default)({ StoreContext: StoreContext }), _dec(_class = _dec2(_class = (_temp2 = _class2 = function (_Component) {
    _inherits(Checkbox, _Component);

    function Checkbox() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, Checkbox);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Checkbox.__proto__ || Object.getPrototypeOf(Checkbox)).call.apply(_ref, [this].concat(args))), _this), _this.onClick = function (props, e) {
            var onChange = props.onChange,
                onClick = props.onClick,
                checked = props.checked,
                disabled = props.disabled;


            if (disabled) return;
            onClick(e);
            onChange(!checked);
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Checkbox, [{
        key: 'renderCheckbox',
        value: function renderCheckbox(props) {
            var _classnames,
                _this2 = this;

            /* eslint-disable no-unused-vars */
            var checked = props.checked,
                disabled = props.disabled,
                children = props.children,
                title = props.title,
                disabledLabel = props.disabledLabel,
                onChange = props.onChange,
                className = props.className,
                indeterminate = props.indeterminate,
                rest = _objectWithoutProperties(props, ['checked', 'disabled', 'children', 'title', 'disabledLabel', 'onChange', 'className', 'indeterminate']);
            /* eslint-enable no-unused-vars */

            return _react2.default.createElement(
                _style.CheckboxWrap,
                _extends({
                    checked: checked,
                    disabled: disabled
                }, rest, {
                    className: (0, _classnames3.default)((_classnames = {}, _defineProperty(_classnames, className, className), _defineProperty(_classnames, _style.prefixCls, true), _defineProperty(_classnames, _style.checkedCls, checked), _defineProperty(_classnames, _style.disabledCls, disabled), _defineProperty(_classnames, _style.indeterminateCls, indeterminate), _classnames)),
                    onClick: function onClick() {
                        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
                            args[_key2] = arguments[_key2];
                        }

                        return _this2.onClick.apply(_this2, [props].concat(args));
                    }
                }),
                _react2.default.createElement(
                    'span',
                    { className: _style.iconWrapCls },
                    indeterminate ? _react2.default.createElement(_SvgIcon2.default, { className: _style.iconCls, type: 'horz', size: '14px' }) : _react2.default.createElement(_SvgIcon2.default, { className: _style.iconCls, type: 'smallTick', size: '14px' })
                ),
                children != null && _react2.default.createElement(
                    'span',
                    { className: _style.contentCls },
                    children
                )
            );
        }
    }, {
        key: 'renderCheckboxCard',
        value: function renderCheckboxCard(props) {
            var _this3 = this;

            /* eslint-disable no-unused-vars */
            var onChange = props.onChange,
                rest = _objectWithoutProperties(props, ['onChange']);
            /* eslint-enable no-unused-vars */


            return _react2.default.createElement(_style.CheckboxCardWrap, _extends({}, rest, { onClick: function onClick() {
                    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
                        args[_key3] = arguments[_key3];
                    }

                    return _this3.onClick.apply(_this3, [props].concat(args));
                }, multiple: true }));
        }
    }, {
        key: 'render',
        value: function render() {
            var _this4 = this;

            return _react2.default.createElement(
                CheckboxContext.Consumer,
                null,
                function (context) {
                    /* eslint-disable no-unused-vars */
                    var _props = _this4.props,
                        defaultChecked = _props.defaultChecked,
                        value = _props.value,
                        multiple = _props.multiple,
                        restProps = _objectWithoutProperties(_props, ['defaultChecked', 'value', 'multiple']);
                    /* eslint-enable no-unused-vars */


                    var props = Object.assign({
                        size: 'md'
                    }, context, restProps);

                    var styleType = props.styleType,
                        rest = _objectWithoutProperties(props, ['styleType']);

                    switch (styleType) {
                        case 'card':
                            return _this4.renderCheckboxCard(rest);
                        default:
                            return _this4.renderCheckbox(rest);
                    }
                }
            );
        }
    }]);

    return Checkbox;
}(_react.Component), _class2.propTypes = {
    /** @ignore */
    children: _propTypes2.default.node,
    /** @ignore */
    className: _propTypes2.default.string,
    /** 是否选中 */
    checked: _propTypes2.default.bool,
    /** 默认是否选中 */
    defaultChecked: _propTypes2.default.bool,
    /** 是否禁用 */
    disabled: _propTypes2.default.bool,
    /** 点选时的回调 */
    onChange: _propTypes2.default.func,
    /** 一般用于全选，部分选中的状态 */
    indeterminate: _propTypes2.default.bool,
    /** @ignore */
    onClick: _propTypes2.default.func,
    /** checkbox的值 */
    value: _propTypes2.default.any,
    /** 尺寸，styleType为card时无效 */
    size: _propTypes2.default.oneOf(Size),
    /** 样式风格 */
    styleType: _propTypes2.default.oneOf(StyleType),
    /** 标题，styleType为card时使用 */
    title: _propTypes2.default.node,
    /** 禁用标识，styleType为card时使用 */
    disabledLabel: _propTypes2.default.node,
    /** @ignore */
    multiple: _propTypes2.default.bool
}, _class2.defaultProps = {
    onChange: function onChange() {},
    onClick: function onClick() {}
}, _temp2)) || _class) || _class);

Checkbox.Size = Size;
Checkbox.StyleType = StyleType;
exports.default = Checkbox;