'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CheckboxGroupWrap = exports.CheckboxCardWrap = exports.CheckboxWrap = exports.indeterminateCls = exports.checkedCls = exports.disabledCls = exports.contentCls = exports.iconWrapCls = exports.iconCls = exports.prefixCls = undefined;

var _styledComponents = require('styled-components');

var _styledComponents2 = _interopRequireDefault(_styledComponents);

var _Card = require('../../../components/Radio/Card');

var _Card2 = _interopRequireDefault(_Card);

var _style = require('../../../style');

var _addDefaultThemeProps = require('../../../components/ThemeProvider/addDefaultThemeProps');

var _addDefaultThemeProps2 = _interopRequireDefault(_addDefaultThemeProps);

var _config = require('../../../config');

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _prefixCls = _config2.default.prefixCls;
var prefixCls = exports.prefixCls = _prefixCls + '-checkbox';
var iconCls = exports.iconCls = prefixCls + '-icon';
var iconWrapCls = exports.iconWrapCls = prefixCls + '-icon-wrap';
var contentCls = exports.contentCls = prefixCls + '-content';
var disabledCls = exports.disabledCls = prefixCls + '-disabled';
var checkedCls = exports.checkedCls = prefixCls + '-checked';
var indeterminateCls = exports.indeterminateCls = prefixCls + '-indeterminate';

var CheckboxWrap = exports.CheckboxWrap = _styledComponents2.default.span.withConfig({
    displayName: 'style__CheckboxWrap',
    componentId: 'sc-19o5x2n-0'
})(function (_ref) {
    var _ref$theme = _ref.theme,
        DT = _ref$theme.designTokens,
        Height = _ref$theme.Height,
        size = _ref.size;
    return (0, _styledComponents.css)(['cursor:pointer;position:relative;white-space:nowrap;min-height:', ';line-height:', ';', ';font-size:0;color:', ';> *{font-size:', ';}.', '{display:inline-block;box-sizing:border-box;overflow:hidden;position:relative;width:14px;height:14px;border:1px solid ', ';border-radius:2px;vertical-align:middle;.', '{visibility:hidden;opacity:0;position:absolute;top:-1px;left:-1px;}}.', '{display:inline-block;vertical-align:middle;max-height:100%;margin-left:8px;}:hover{.', '{border-color:', ';}}&.', ',&.', '{.', '{border-color:', ';background:', ';}.', '{visibility:visible;opacity:1;fill:', ';}}&.', '{cursor:not-allowed;color:', ';.', '{border-color:', ';background:', ';}}&.', '.', ',&.', '.', '{.', '{fill:', ';}.', '{background:none;}}'], Height[size], Height[size], _style.inlineBlockWithVerticalMixin, DT.T_COLOR_TEXT_DEFAULT_DARK, DT.T_TYPO_FONT_SIZE_1, iconWrapCls, DT.T_COLOR_LINE_DEFAULT_DARK, iconCls, contentCls, iconWrapCls, DT.T_COLOR_LINE_PRIMARY_DEFAULT, checkedCls, indeterminateCls, iconWrapCls, DT.T_COLOR_BG_PRIMARY_1, DT.T_COLOR_BG_PRIMARY_1, iconCls, DT.T_COLOR_TEXT_DEFAULT_NORMAL, disabledCls, DT.T_COLOR_TEXT_DISABLED, iconWrapCls, DT.T_COLOR_LINE_DISABLED_LIGHT, DT.T_COLOR_BG_DISABLED_LIGHT, disabledCls, checkedCls, disabledCls, indeterminateCls, iconCls, DT.T_COLOR_TEXT_DISABLED, iconWrapCls);
});

var CheckboxCardWrap = exports.CheckboxCardWrap = (0, _styledComponents2.default)(_Card2.default).withConfig({
    displayName: 'style__CheckboxCardWrap',
    componentId: 'sc-19o5x2n-1'
})(['']);
var CheckboxGroupWrap = exports.CheckboxGroupWrap = _styledComponents2.default.div.attrs({
    className: prefixCls + '-group'
}).withConfig({
    displayName: 'style__CheckboxGroupWrap',
    componentId: 'sc-19o5x2n-2'
})(['', ',', '{margin-right:8px;&:last-child{margin-right:0;}}'], CheckboxWrap, CheckboxCardWrap);

(0, _addDefaultThemeProps2.default)(CheckboxWrap);