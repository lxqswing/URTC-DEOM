'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.RadioGroupWrap = exports.RadioTextWrap = exports.RadioCardWrap = exports.RadioCardDisabledLabelWrap = exports.RadioCardIcon = exports.RadioCardContent = exports.RadioCardHeader = exports.RadioTagWrap = exports.RadioButtonWrap = exports.RadioWrap = exports.checkedCls = exports.disabledCls = exports.contentCls = exports.iconCls = exports.iconWrapCls = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _styledComponents = require('styled-components');

var _styledComponents2 = _interopRequireDefault(_styledComponents);

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

var _config = require('../../../config');

var _config2 = _interopRequireDefault(_config);

var _style = require('../../../style');

var _Icon = require('../../../components/Icon');

var _Icon2 = _interopRequireDefault(_Icon);

var _Button = require('../../../components/Button');

var _Button2 = _interopRequireDefault(_Button);

var _addDefaultThemeProps = require('../../../components/ThemeProvider/addDefaultThemeProps');

var _addDefaultThemeProps2 = _interopRequireDefault(_addDefaultThemeProps);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var _prefixCls = _config2.default.prefixCls;

var prefixCls = _prefixCls + '-radio';

var iconWrapCls = exports.iconWrapCls = prefixCls + '-icon-wrap';
var iconCls = exports.iconCls = prefixCls + '-icon';
var contentCls = exports.contentCls = prefixCls + '-content';
var disabledCls = exports.disabledCls = prefixCls + '-disabled';
var checkedCls = exports.checkedCls = prefixCls + '-checked';

var radioCommonStyleMixin = function radioCommonStyleMixin(_ref) {
    var _ref$theme = _ref.theme,
        DT = _ref$theme.designTokens,
        fontSize = _ref$theme.fontSize;
    return (0, _styledComponents.css)(['color:', ';font-size:', ';position:relative;cursor:pointer;'], DT.T_COLOR_TEXT_DEFAULT_LIGHT, fontSize);
};

var sizeMixin = function sizeMixin(_ref2) {
    var Height = _ref2.theme.Height,
        size = _ref2.size;
    return (0, _styledComponents.css)(['min-height:', ';line-height:', ';'], Height[size], Height[size]);
};

var sharedClassName = function sharedClassName(_ref3) {
    var _classnames;

    var disabled = _ref3.disabled,
        checked = _ref3.checked,
        size = _ref3.size,
        styleType = _ref3.styleType;
    return (0, _classnames3.default)((_classnames = {}, _defineProperty(_classnames, prefixCls, true), _defineProperty(_classnames, disabledCls, disabled), _defineProperty(_classnames, checkedCls, checked), _defineProperty(_classnames, prefixCls + '-size-' + size, true), _defineProperty(_classnames, prefixCls + '-styletype-' + styleType, true), _classnames));
};

/* stylelint-disable no-duplicate-selectors */
var RadioWrap = exports.RadioWrap = _styledComponents2.default.span.attrs({
    className: sharedClassName
})(function (_ref4) {
    var DT = _ref4.theme.designTokens;
    return (0, _styledComponents.css)(['', ';', ';', ';font-size:0;color:', ';> *{font-size:12px;}.', '{display:inline-block;box-sizing:border-box;overflow:hidden;position:relative;width:14px;height:14px;border:1px solid ', ';border-radius:8px;vertical-align:middle;.', '{visibility:hidden;opacity:0;position:absolute;top:-1px;left:-1px;}}.', '{display:inline-block;vertical-align:middle;max-height:100%;margin-left:8px;}:hover,&.', '{.', '{border-color:', ';}}&.', '{.', '{visibility:visible;opacity:1;fill:', ';}}&.', '{cursor:not-allowed;color:', ';.', '{border-color:', ';background:', ';}}&.', '.', '{.', '{fill:', ';}.', '{background:none;}}'], radioCommonStyleMixin, _style.inlineBlockWithVerticalMixin, sizeMixin, DT.T_COLOR_TEXT_DEFAULT_DARK, iconWrapCls, DT.T_COLOR_LINE_DEFAULT_DARK, iconCls, contentCls, checkedCls, iconWrapCls, DT.T_COLOR_LINE_PRIMARY_DEFAULT, checkedCls, iconCls, DT.T_COLOR_TEXT_PRIMARY_DEFAULT, disabledCls, DT.T_COLOR_TEXT_DISABLED, iconWrapCls, DT.T_COLOR_LINE_DISABLED_LIGHT, DT.T_COLOR_BG_DISABLED_LIGHT, disabledCls, checkedCls, iconCls, DT.T_COLOR_TEXT_DISABLED, iconWrapCls);
});

// eslint-disable-next-line no-unused-vars
var FilterStyleTypeButton = function FilterStyleTypeButton(_ref5) {
    var styleType = _ref5.styleType,
        rest = _objectWithoutProperties(_ref5, ['styleType']);

    return _react2.default.createElement(_Button2.default, _extends({ styleType: 'border-gray', checkAble: true }, rest));
};
FilterStyleTypeButton.propTypes = {
    styleType: _propTypes2.default.string
};

var RadioButtonWrap = exports.RadioButtonWrap = (0, _styledComponents2.default)(FilterStyleTypeButton).attrs({
    className: sharedClassName
}).withConfig({
    displayName: 'style__RadioButtonWrap',
    componentId: 'sc-25j3mq-0'
})(['&&{', ';text-align:center;border-radius:0;', ';position:relative;', ';', ';&:hover{z-index:3;}}'], function (_ref6) {
    var size = _ref6.size;
    return (0, _styledComponents.css)(['min-width:', 'px;'], { lg: 80, md: 68, sm: 56 }[size]);
}, function (_ref7) {
    var fontSize = _ref7.theme.fontSize;
    return (0, _styledComponents.css)(['font-size:', ';'], fontSize);
}, function (_ref8) {
    var disabled = _ref8.disabled;
    return disabled && (0, _styledComponents.css)(['z-index:1;']);
}, function (_ref9) {
    var checked = _ref9.checked;
    return checked && (0, _styledComponents.css)(['z-index:2;']);
});

var RadioTagWrap = exports.RadioTagWrap = _styledComponents2.default.div.attrs({
    className: sharedClassName
})(function (_ref10) {
    var DT = _ref10.theme.designTokens,
        checked = _ref10.checked,
        disabled = _ref10.disabled;
    return (0, _styledComponents.css)(['padding:0 8px;cursor:pointer;border-radius:2px;', ';', ';', ';', ';', ';', ';', ';'], radioCommonStyleMixin, _style.inlineBlockWithVerticalMixin, sizeMixin, checked && (0, _styledComponents.css)(['background:', ';color:', ';'], DT.T_COLOR_BG_PRIMARY_5, DT.T_COLOR_TEXT_PRIMARY_DEFAULT), disabled && (0, _styledComponents.css)(['color:', ';cursor:not-allowed;'], DT.T_COLOR_TEXT_DISABLED), disabled && checked && (0, _styledComponents.css)(['background:', ';'], DT.T_COLOR_BG_DISABLED_LIGHT), !checked && !disabled && (0, _styledComponents.css)([':hover{color:', ';}'], DT.T_COLOR_TEXT_PRIMARY_DEFAULT));
});

var RadioCardHeader = exports.RadioCardHeader = _styledComponents2.default.div.withConfig({
    displayName: 'style__RadioCardHeader',
    componentId: 'sc-25j3mq-1'
})(['position:relative;padding:8px 16px;line-height:22px;min-height:22px;font-weight:bold;']);
var RadioCardContent = exports.RadioCardContent = _styledComponents2.default.div.withConfig({
    displayName: 'style__RadioCardContent',
    componentId: 'sc-25j3mq-2'
})(['padding:16px;min-height:20px;']);
var RadioCardTipPosition = (0, _styledComponents.css)(['position:absolute;right:12px;top:10px;']);
var RadioCardIcon = exports.RadioCardIcon = (0, _styledComponents2.default)(_Icon2.default).withConfig({
    displayName: 'style__RadioCardIcon',
    componentId: 'sc-25j3mq-3'
})(['font-size:16px;', ';'], RadioCardTipPosition);
var RadioCardDisabledLabelWrap = exports.RadioCardDisabledLabelWrap = _styledComponents2.default.span.withConfig({
    displayName: 'style__RadioCardDisabledLabelWrap',
    componentId: 'sc-25j3mq-4'
})(['font-weight:bold;line-height:16px;', ';'], RadioCardTipPosition);
var cardPropsMixin = function cardPropsMixin(_ref11) {
    var _ref11$theme = _ref11.theme,
        DT = _ref11$theme.designTokens,
        titleFontSize = _ref11$theme.titleFontSize,
        disabled = _ref11.disabled,
        checked = _ref11.checked;
    return (0, _styledComponents.css)(['border:1px solid ', ';background:', ';', '{color:', ';}', '{color:', ';font-size:', ';border-bottom:1px solid ', ';}', ';', ';', ';', ';', ';'], DT.T_COLOR_LINE_DEFAULT_LIGHT, DT.T_BUTTON_SECONDARY_COLOR_BG_DEFAULT, RadioCardIcon, DT.T_COLOR_LINE_DEFAULT_DARK, RadioCardHeader, DT.T_COLOR_TEXT_DEFAULT_DARK, titleFontSize, DT.T_COLOR_LINE_DEFAULT_DARK, checked && (0, _styledComponents.css)(['border-color:', ';box-shadow:', ';', '{border-color:', ';}', '{color:', ';}'], DT.T_COLOR_LINE_PRIMARY_DEFAULT, DT.T_SHADOW_BUTTON_DEFAULT, RadioCardHeader, DT.T_COLOR_LINE_PRIMARY_DEFAULT, RadioCardIcon, DT.T_COLOR_TEXT_PRIMARY_DEFAULT), disabled && (0, _styledComponents.css)(['cursor:not-allowed;']), disabled && !checked && (0, _styledComponents.css)(['border-color:', ';', '{background:', ';color:', ';}', '{background:', ';color:', ';}'], DT.T_COLOR_LINE_DISABLED_DARK, RadioCardHeader, DT.T_COLOR_BG_DISABLED_DARK, DT.T_COLOR_TEXT_DEFAULT_NORMAL, RadioCardContent, DT.T_COLOR_BG_DISABLED_LIGHT, DT.T_COLOR_TEXT_DISABLED), disabled && checked && (0, _styledComponents.css)(['', '{color:', ';}'], RadioCardIcon, DT.T_COLOR_LINE_DISABLED_DARK), !checked && !disabled && (0, _styledComponents.css)([':hover{box-shadow:', ';border-color:transparent;', '{color:', ';}}'], DT.T_SHADOW_BUTTON_HOVER, RadioCardIcon, DT.T_COLOR_LINE_PRIMARY_HOVER));
};
var RadioCardWrap = exports.RadioCardWrap = _styledComponents2.default.div.attrs({
    className: sharedClassName
}).withConfig({
    displayName: 'style__RadioCardWrap',
    componentId: 'sc-25j3mq-5'
})(['border-radius:4px;overflow:hidden;display:inline-block;cursor:pointer;', ';'], cardPropsMixin);
var RadioTextWrap = exports.RadioTextWrap = _styledComponents2.default.div.attrs({
    className: sharedClassName
})(function (_ref12) {
    var DT = _ref12.theme.designTokens,
        checked = _ref12.checked,
        disabled = _ref12.disabled;
    return (0, _styledComponents.css)(['padding:2px 0;box-sizing:border-box;cursor:pointer;> span{display:table;height:100%;> span{padding:0 12px;border-color:', ';border-style:solid;border-width:0 1px;height:100%;display:table-cell;vertical-align:middle;}}', ';', ';', ';line-height:normal;color:', ';', ';', ';', ';'], DT.T_COLOR_LINE_DEFAULT_LIGHT, radioCommonStyleMixin, _style.inlineBlockWithVerticalMixin, sizeMixin, DT.T_COLOR_TEXT_DEFAULT_DARK, !checked && !disabled && (0, _styledComponents.css)([':hover{color:', ';}'], DT.T_COLOR_TEXT_PRIMARY_DEFAULT), checked && (0, _styledComponents.css)(['color:', ';'], DT.T_COLOR_TEXT_PRIMARY_DEFAULT), disabled && (0, _styledComponents.css)(['&&{color:', ';cursor:not-allowed;}'], DT.T_COLOR_TEXT_DISABLED));
});

var RadioGroupWrap = exports.RadioGroupWrap = _styledComponents2.default.div.withConfig({
    displayName: 'style__RadioGroupWrap',
    componentId: 'sc-25j3mq-6'
})(['position:relative;margin-bottom:-8px;', ',', '{margin-right:8px;margin-bottom:8px;&:last-child{margin-right:0;}}', '{margin-right:12px;margin-bottom:8px;&:last-child{margin-right:0;}}', '+', '{margin-left:-1px;}', '{margin-right:-1px;margin-bottom:8px;&:first-child{border-radius:2px 0 0 2px;}&:last-child{border-radius:0 2px 2px 0;margin-right:0;}}'], RadioWrap, /* sc-sel */RadioTagWrap, RadioCardWrap, RadioTextWrap, RadioTextWrap, RadioButtonWrap);

(0, _addDefaultThemeProps2.default)(RadioWrap, RadioButtonWrap, RadioTagWrap, RadioCardWrap, RadioTextWrap);