'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _pick2 = require('lodash/pick');

var _pick3 = _interopRequireDefault(_pick2);

var _find2 = require('lodash/find');

var _find3 = _interopRequireDefault(_find2);

var _isNumber2 = require('lodash/isNumber');

var _isNumber3 = _interopRequireDefault(_isNumber2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _dec2, _class, _class2, _temp, _initialiseProps;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _Popover = require('../../components/Popover');

var _Popover2 = _interopRequireDefault(_Popover);

var _uncontrolled = require('../../decorators/uncontrolled');

var _uncontrolled2 = _interopRequireDefault(_uncontrolled);

var _localeConsumerDecorator = require('../../components/LocaleProvider/localeConsumerDecorator');

var _localeConsumerDecorator2 = _interopRequireDefault(_localeConsumerDecorator);

var _DatePicker = require('./DatePicker');

var _DatePicker2 = _interopRequireDefault(_DatePicker);

var _Month = require('./Month');

var _Month2 = _interopRequireDefault(_Month);

var _zh_CN = require('./locale/zh_CN');

var _zh_CN2 = _interopRequireDefault(_zh_CN);

var _utils = require('./utils');

var _style = require('./style');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var formatString = { date: 'YYYY-MM-DD HH:mm:ss', month: 'YYYY-MM' };

var getDateFromOption = function getDateFromOption(option) {
    if (_moment2.default.isDate(option) || _moment2.default.isMoment(option) || (0, _isNumber3.default)(option)) {
        return (0, _moment2.default)(option);
    } else {
        return (0, _moment2.default)().add(option);
    }
};

var cloneDateRange = function cloneDateRange() {
    var range = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

    return range.map(function (v) {
        return (0, _moment2.default)(v);
    });
};

var Range = (_dec = (0, _localeConsumerDecorator2.default)({ defaultLocale: _zh_CN2.default, localeName: 'DatePicker' }), _dec2 = (0, _uncontrolled2.default)({ onChangeName: ['onChange', 'onInitialChange'] }, { valueName: 'option', onChangeName: 'onOptionChange' }), _dec(_class = _dec2(_class = (_temp = _class2 = function (_Component) {
    _inherits(Range, _Component);

    function Range(props) {
        _classCallCheck(this, Range);

        var _this = _possibleConstructorReturn(this, (Range.__proto__ || Object.getPrototypeOf(Range)).call(this, props));

        _initialiseProps.call(_this);

        _this.now = +(0, _moment2.default)();
        _this.defaultValue = cloneDateRange([_this.now, _this.now]);
        var _props$value = props.value,
            value = _props$value === undefined ? cloneDateRange(_this.defaultValue) : _props$value;

        _this.state = {
            visible: false,
            cache: value
        };
        return _this;
    }

    _createClass(Range, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            var visible = this.state.visible;

            if (!visible) {
                this.updateCacheFromProps(nextProps);
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _state = this.state,
                visible = _state.visible,
                cache = _state.cache;
            /* eslint-disable no-unused-vars */

            var _props = this.props,
                _options = _props.options,
                option = _props.option,
                defaultOption = _props.defaultOption,
                onOptionChange = _props.onOptionChange,
                hideOptions = _props.hideOptions,
                _props$value2 = _props.value,
                value = _props$value2 === undefined ? cloneDateRange(this.defaultValue) : _props$value2,
                defaultValue = _props.defaultValue,
                onChange = _props.onChange,
                onInitialChange = _props.onInitialChange,
                size = _props.size,
                _props$display = _props.display,
                display = _props$display === undefined ? {} : _props$display,
                _props$rules = _props.rules,
                rules = _props$rules === undefined ? {} : _props$rules,
                type = _props.type,
                disabled = _props.disabled,
                zIndex = _props.zIndex,
                locale = _props.locale,
                selectProps = _props.selectProps,
                datePickerProps = _props.datePickerProps,
                popoverProps = _props.popoverProps,
                rangeTip = _props.rangeTip,
                rest = _objectWithoutProperties(_props, ['options', 'option', 'defaultOption', 'onOptionChange', 'hideOptions', 'value', 'defaultValue', 'onChange', 'onInitialChange', 'size', 'display', 'rules', 'type', 'disabled', 'zIndex', 'locale', 'selectProps', 'datePickerProps', 'popoverProps', 'rangeTip']);
            /* eslint-enable no-unused-vars */


            var options = _options.concat({
                label: locale.custom,
                value: 'custom'
            });
            var range = rules.range,
                _c = rules.custom;

            var readonly = option !== 'custom';

            var _value = _slicedToArray(value, 2),
                start = _value[0],
                end = _value[1];

            start = (0, _moment2.default)(+start);
            end = (0, _moment2.default)(+end);

            var _cache = _slicedToArray(cache, 2),
                cStart = _cache[0],
                cEnd = _cache[1];

            cStart = (0, _moment2.default)(+cStart);
            cEnd = (0, _moment2.default)(+cEnd);

            var Picker = type === 'month' ? _Month2.default : _DatePicker2.default;
            var precision = type === 'month' ? 'month' : null;

            var _display$range = display.range,
                rangeDisplay = _display$range === undefined ? {} : _display$range,
                pickerDisplay = _objectWithoutProperties(display, ['range']);

            var rangeFormat = rangeDisplay.format;


            var rangeDateValidResult = (0, _utils.isRangeDateValid)(cStart, cEnd, rules, precision);
            var isValid = rangeDateValidResult === true;
            var errorTip = isValid === true ? null : locale[rangeDateValidResult + 'Tip'];

            return _react2.default.createElement(
                _style.RangeContainer,
                _extends({}, rest, { disabled: disabled }),
                !hideOptions && _react2.default.createElement(_style.RangeSelect, {
                    options: options.map(function (option) {
                        return (0, _pick3.default)(option, ['label', 'value', 'disabled']);
                    }),
                    size: size,
                    value: option,
                    disabled: disabled,
                    onChange: this.handleOptionChange,
                    popoverProps: Object.assign({ zIndex: zIndex }, selectProps.popoverProps)
                }),
                _react2.default.createElement(
                    _Popover2.default,
                    _extends({
                        visible: visible,
                        forwardPopupContainer: function forwardPopupContainer(triggerNode) {
                            return triggerNode.parentNode;
                        },
                        zIndex: zIndex,
                        popup: _react2.default.createElement(
                            _style.RangePopup,
                            null,
                            _react2.default.createElement(
                                _style.RangePopupPickerContainer,
                                null,
                                _react2.default.createElement(
                                    'span',
                                    null,
                                    locale.start
                                ),
                                _react2.default.createElement(Picker, {
                                    value: cStart,
                                    rules: {
                                        range: range,
                                        custom: function custom(date, value) {
                                            return _c && _c(date, value, cStart, cEnd, 'start');
                                        }
                                    },
                                    display: pickerDisplay,
                                    onChange: function onChange(v) {
                                        return _this2.handleChange('start', v);
                                    }
                                })
                            ),
                            _react2.default.createElement(
                                _style.RangePopupPickerContainer,
                                null,
                                _react2.default.createElement(
                                    'span',
                                    null,
                                    locale.end
                                ),
                                _react2.default.createElement(Picker, {
                                    value: cEnd,
                                    rules: {
                                        range: range,
                                        custom: function custom(date, value) {
                                            return _c && _c(date, value, cStart, cEnd, 'end');
                                        }
                                    },
                                    display: pickerDisplay,
                                    onChange: function onChange(v) {
                                        return _this2.handleChange('end', v);
                                    }
                                })
                            ),
                            _react2.default.createElement(
                                _style.RangePopupFooter,
                                null,
                                _react2.default.createElement(
                                    'div',
                                    null,
                                    isValid ? _react2.default.createElement(
                                        _style.RangePopupTip,
                                        null,
                                        rangeTip
                                    ) : _react2.default.createElement(
                                        _style.RangePopupError,
                                        null,
                                        errorTip
                                    ),
                                    _react2.default.createElement(
                                        _style.RangePopupConfirmButton,
                                        {
                                            styleType: 'primary',
                                            onClick: this.confirmChange,
                                            disabled: !isValid
                                        },
                                        locale.rangeConfirm
                                    )
                                )
                            )
                        ),
                        onVisibleChange: this.handleVisibleChange,
                        trigger: ['click']
                    }, (0, _pick3.default)(popoverProps, ['getPopupContainer'])),
                    _react2.default.createElement(
                        _style.RangeDateWrap,
                        { size: size, readonly: readonly, disabled: disabled },
                        _react2.default.createElement(
                            'span',
                            null,
                            start.format(rangeFormat || formatString[type])
                        ),
                        _react2.default.createElement(_style.RangeDateSeparator, null),
                        _react2.default.createElement(
                            'span',
                            null,
                            end.format(rangeFormat || formatString[type])
                        ),
                        _react2.default.createElement(_style.PickerIcon, { type: 'calendar', color: 'blue' })
                    )
                )
            );
        }
    }]);

    return Range;
}(_react.Component), _class2.propTypes = {
    /** 当前值，受控 */
    value: _propTypes2.default.array,
    /** 默认值，非受控 */
    defaultValue: _propTypes2.default.array,
    /** 修改回调，返回moment对象数组 */
    onChange: _propTypes2.default.func,
    /** 初始化回调函数，传入option的情况下会输出option对应的值，配合option或者defaultOption使用 */
    onInitialChange: _propTypes2.default.func,
    /** 选项 */
    options: _propTypes2.default.array,
    /** 当前选项，受控 */
    option: _propTypes2.default.string,
    /** 默认选项，非受控 */
    defaultOption: _propTypes2.default.string,
    /** 选项变化回调 */
    onOptionChange: _propTypes2.default.func,
    /** 隐藏快捷选项 */
    hideOptions: _propTypes2.default.bool,
    /** 展示格式，除了range以外的属性会传入DatePicker和Month中（按照type） */
    display: _propTypes2.default.object,
    /** 自定义规则 */
    rules: _propTypes2.default.shape({
        /** 可选值范围 */
        range: _propTypes2.default.array
    }),
    type: _propTypes2.default.oneOf(['date', 'month']),
    /** 控件尺寸 */
    size: _propTypes2.default.oneOf(_DatePicker.Size),
    /** 是否禁用 */
    disabled: _propTypes2.default.bool,
    /** 弹出层的z-index */
    zIndex: _propTypes2.default.number,
    /** 自定义默认选项props */
    selectProps: _propTypes2.default.object,
    /** 自定义时间选择框弹出层props */
    popoverProps: _propTypes2.default.object,
    /** 自定义datepicker的props */
    datePickerProps: _propTypes2.default.object,
    /** @ignore */
    locale: _propTypes2.default.object,
    /** 提示信息,展示在时间选择弹窗中 */
    rangeTip: _propTypes2.default.node
}, _class2.defaultProps = {
    onChange: function onChange() {},
    onInitialChange: function onInitialChange() {},
    type: 'date',
    options: [],
    defaultOption: 'custom',
    onOptionChange: function onOptionChange() {},
    selectProps: {},
    popoverProps: {},
    datePickerProps: {},
    size: 'md',
    zIndex: 100
}, _initialiseProps = function _initialiseProps() {
    var _this3 = this;

    this.componentDidMount = function () {
        var _props2 = _this3.props,
            option = _props2.option,
            options = _props2.options,
            onInitialChange = _props2.onInitialChange,
            _props2$value = _props2.value,
            value = _props2$value === undefined ? cloneDateRange(_this3.defaultValue) : _props2$value;

        if (option !== 'custom') {
            var optionInfo = (0, _find3.default)(options, function (_option) {
                return _option.value === option;
            });
            if (optionInfo && optionInfo.range) {
                var range = optionInfo.range;
                onInitialChange([getDateFromOption(range.start), getDateFromOption(range.end)]);
            }
        } else {
            onInitialChange(value);
        }
    };

    this.updateCacheFromProps = function (props) {
        var _ref = props || _this3.props,
            _ref$value = _ref.value,
            value = _ref$value === undefined ? cloneDateRange(_this3.defaultValue) : _ref$value;

        _this3.setState({
            cache: value
        });
    };

    this.handleChange = function (tag, value) {
        var cache = _this3.state.cache;

        var _cache2 = _slicedToArray(cache, 2),
            start = _cache2[0],
            end = _cache2[1];

        if (tag === 'start') {
            var s = value,
                e = end;
            _this3.setState({
                cache: [(0, _moment2.default)(s), (0, _moment2.default)(e)]
            });
        } else if (tag === 'end') {
            var _s = start,
                _e = value;
            _this3.setState({
                cache: [(0, _moment2.default)(_s), (0, _moment2.default)(_e)]
            });
        }
    };

    this.handleOptionChange = function (option) {
        var _props3 = _this3.props,
            onOptionChange = _props3.onOptionChange,
            options = _props3.options,
            onChange = _props3.onChange;

        onOptionChange(option);

        if (option !== 'custom') {
            var optionInfo = (0, _find3.default)(options, function (_option) {
                return _option.value === option;
            });
            if (optionInfo && optionInfo.range) {
                var range = optionInfo.range;
                onChange([getDateFromOption(range.start), getDateFromOption(range.end)]);
            }
        }
    };

    this.confirmChange = function () {
        var onChange = _this3.props.onChange;
        var cache = _this3.state.cache;

        onChange([].concat(_toConsumableArray(cache)));
        _this3.setState({
            visible: false
        });
    };

    this.handleVisibleChange = function (visible) {
        _this3.setState({
            visible: visible
        });
        if (!visible) {
            _this3.updateCacheFromProps();
        }
    };
}, _temp)) || _class) || _class);


Range.Type = ['date', 'month'];

exports.default = Range;