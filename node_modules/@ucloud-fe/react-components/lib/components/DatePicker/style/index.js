'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.RangePopupError = exports.RangePopupTip = exports.RangePopupFooter = exports.RangePopupConfirmButton = exports.RangePopupPickerContainer = exports.RangeDateSeparator = exports.RangeDateWrap = exports.RangeSelect = exports.RangePopup = exports.RangeContainer = exports.PickerContainer = exports.TimeSeparator = exports.TimeWrap = exports.PickerIcon = exports.DateSpan = exports.DateWrap = exports.PickerWrap = exports.monthPickerPrefixCls = exports.pickerPrefixCls = exports.prefixCls = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _styledComponents = require('styled-components');

var _styledComponents2 = _interopRequireDefault(_styledComponents);

var _Picker = require('rc-calendar/lib/Picker');

var _Picker2 = _interopRequireDefault(_Picker);

var _Icon = require('../../../components/Icon');

var _Icon2 = _interopRequireDefault(_Icon);

var _Select = require('../../../components/Select');

var _Select2 = _interopRequireDefault(_Select);

var _Button = require('../../../components/Button');

var _Button2 = _interopRequireDefault(_Button);

var _style = require('../../../components/Calendar/style');

var _style2 = require('../../../style');

var _addDefaultThemeProps = require('../../../components/ThemeProvider/addDefaultThemeProps');

var _addDefaultThemeProps2 = _interopRequireDefault(_addDefaultThemeProps);

var _config = require('../../../config');

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var _prefixCls = _config2.default.prefixCls;
var prefixCls = exports.prefixCls = _prefixCls + '-datepicker';
var pickerPrefixCls = exports.pickerPrefixCls = prefixCls + 'â€“picker';
var monthPickerPrefixCls = exports.monthPickerPrefixCls = prefixCls + '-month-picker';

var RcPickerWrap = function RcPickerWrap(_ref) {
    var className = _ref.className,
        dropdownClassName = _ref.dropdownClassName,
        rest = _objectWithoutProperties(_ref, ['className', 'dropdownClassName']);

    return _react2.default.createElement(_Picker2.default, _extends({ dropdownClassName: (0, _classnames2.default)(className, dropdownClassName) }, rest));
};
RcPickerWrap.propTypes = {
    className: _propTypes2.default.string.isRequired,
    dropdownClassName: _propTypes2.default.string
};

var PickerWrap = exports.PickerWrap = (0, _styledComponents2.default)(RcPickerWrap).attrs({
    className: prefixCls + '-popup-wrap'
})(function (_ref2) {
    var zIndex = _ref2.zIndex,
        isMonth = _ref2.isMonth;
    return (0, _styledComponents.css)(['user-select:none;width:285px;z-index:', ';', ';', ';'], zIndex, isMonth && (0, _styledComponents.css)(['width:240px;']), _style.calendarMixin);
});

var DateWrap = exports.DateWrap = _styledComponents2.default.div.attrs({
    className: prefixCls + '-date-wrap'
})(function (_ref3) {
    var _ref3$theme = _ref3.theme,
        Height = _ref3$theme.Height,
        HeightNumber = _ref3$theme.HeightNumber,
        DT = _ref3$theme.designTokens,
        size = _ref3.size;
    return (0, _styledComponents.css)(['height:', ';line-height:', 'px;padding:1px 8px;border-radius:2px;cursor:pointer;box-sizing:border-box;box-shadow:', ';background:', ';', ';'], Height[size], HeightNumber[size] - 2, DT.T_SHADOW_BUTTON_DEFAULT, DT.T_BUTTON_SECONDARY_COLOR_BG_DEFAULT, _style2.inlineBlockWithVerticalMixin);
});

var DateSpan = exports.DateSpan = _styledComponents2.default.span.withConfig({
    displayName: 'style__DateSpan',
    componentId: 'sc-1hu7kya-0'
})(['display:inline-block;']);

var PickerIcon = exports.PickerIcon = (0, _styledComponents2.default)(_Icon2.default).withConfig({
    displayName: 'style__PickerIcon',
    componentId: 'sc-1hu7kya-1'
})(['margin-left:5px;display:inline-block;']);

var TimeWrap = exports.TimeWrap = _styledComponents2.default.div.attrs({
    className: prefixCls + '-time-wrap'
}).withConfig({
    displayName: 'style__TimeWrap',
    componentId: 'sc-1hu7kya-2'
})(['margin-left:8px;', ';'], _style2.inlineBlockWithVerticalMixin);

var TimeSeparator = exports.TimeSeparator = _styledComponents2.default.span.withConfig({
    displayName: 'style__TimeSeparator',
    componentId: 'sc-1hu7kya-3'
})(['margin:0 4px;']);

var PickerContainer = exports.PickerContainer = _styledComponents2.default.div.attrs({
    className: function className(_ref4) {
        var disabled = _ref4.disabled,
            isMonth = _ref4.isMonth;
        return (0, _classnames2.default)(prefixCls, isMonth && prefixCls + '-month', disabled && prefixCls + '-disabled');
    }
})(function (_ref5) {
    var DT = _ref5.theme.designTokens,
        disabled = _ref5.disabled;
    return (0, _styledComponents.css)(['', ';', ';'], _style2.inlineBlockWithVerticalMixin, disabled && (0, _styledComponents.css)(['', '{pointer-events:none;color:', ';border:1px solid ', ';background:', ';box-shadow:none;}'], DateWrap, DT.T_COLOR_TEXT_DISABLED, DT.T_COLOR_LINE_DISABLED_DARK, DT.T_COLOR_BG_DISABLED_LIGHT));
});

var RangeContainer = exports.RangeContainer = _styledComponents2.default.div.attrs({
    className: function className(_ref6) {
        var disabled = _ref6.disabled;
        return (0, _classnames2.default)(prefixCls + '-range', disabled && prefixCls + '-range-disabled');
    }
})(function () {
    return (0, _styledComponents.css)(['']);
});

var RangePopup = exports.RangePopup = _styledComponents2.default.div.attrs({
    className: prefixCls + '-range-popup'
})(function (_ref7) {
    var DT = _ref7.theme.designTokens;
    return (0, _styledComponents.css)(['background:', ';display:inline-block;border-radius:2px;padding:0;box-shadow:', ';'], DT.T_COLOR_BG_MENU, DT.T_SHADOW_BLOCK_DEFAULT_LG);
});

var RangeSelect = exports.RangeSelect = (0, _styledComponents2.default)(_Select2.default).withConfig({
    displayName: 'style__RangeSelect',
    componentId: 'sc-1hu7kya-4'
})(['margin-right:8px;']);

var RangeDateWrap = exports.RangeDateWrap = _styledComponents2.default.div.attrs({
    className: function className(_ref8) {
        var readonly = _ref8.readonly,
            disabled = _ref8.disabled;
        return (0, _classnames2.default)(prefixCls + '-range-date-wrap', readonly && prefixCls + '-range-date-wrap-readonly', disabled && prefixCls + '-range-date-wrap-disabled');
    }
})(function (_ref9) {
    var _ref9$theme = _ref9.theme,
        Height = _ref9$theme.Height,
        HeightNumber = _ref9$theme.HeightNumber,
        DT = _ref9$theme.designTokens,
        size = _ref9.size,
        readonly = _ref9.readonly,
        disabled = _ref9.disabled;
    return (0, _styledComponents.css)(['padding:0 8px;border-radius:2px;cursor:pointer;box-sizing:border-box;height:', ';line-height:', 'px;color:', ';box-shadow:', ';:hover{box-shadow:', ';}', ';', ';', ';'], Height[size], HeightNumber[size] - 2, DT.T_COLOR_TEXT_DEFAULT_DARK, DT.T_SHADOW_BUTTON_DEFAULT, DT.T_SHADOW_BUTTON_HOVER, _style2.inlineBlockWithVerticalMixin, readonly && (0, _styledComponents.css)(['pointer-events:none;border-width:0;line-height:', ';box-shadow:none;', '{display:none;}'], Height[size], /* sc-sel */PickerIcon), disabled && (0, _styledComponents.css)(['pointer-events:none;background:', ';border:1px solid ', ';color:', ';box-shadow:none;', '{background:', ';}'], DT.T_COLOR_BG_DISABLED_LIGHT, DT.T_COLOR_LINE_DISABLED_DARK, DT.T_COLOR_TEXT_DISABLED, RangeDateSeparator, DT.T_COLOR_LINE_DEFAULT_DARK));
});
var RangeDateSeparator = exports.RangeDateSeparator = _styledComponents2.default.span.withConfig({
    displayName: 'style__RangeDateSeparator',
    componentId: 'sc-1hu7kya-5'
})(function (_ref10) {
    var DT = _ref10.theme.designTokens;
    return (0, _styledComponents.css)(['margin:0 4px;width:12px;height:1px;background:', ';', ';'], DT.T_COLOR_LINE_DEFAULT_DARK, _style2.inlineBlockWithVerticalMixin);
});

var RangePopupPickerContainer = exports.RangePopupPickerContainer = _styledComponents2.default.div.withConfig({
    displayName: 'style__RangePopupPickerContainer',
    componentId: 'sc-1hu7kya-6'
})(['margin:10px 10px 0 10px;', '{margin-left:10px;}'], /*sc-sel */PickerContainer);

var RangePopupConfirmButton = exports.RangePopupConfirmButton = (0, _styledComponents2.default)(_Button2.default).withConfig({
    displayName: 'style__RangePopupConfirmButton',
    componentId: 'sc-1hu7kya-7'
})(['float:right;']);

var RangePopupFooter = exports.RangePopupFooter = _styledComponents2.default.div.withConfig({
    displayName: 'style__RangePopupFooter',
    componentId: 'sc-1hu7kya-8'
})(function (_ref11) {
    var DT = _ref11.theme.designTokens;
    return (0, _styledComponents.css)(['padding:10px;margin-top:10px;border-top:1px solid ', ';', ';'], DT.T_COLOR_LINE_DEFAULT_LIGHT, _style2.clearFixMixin);
});

var RangePopupTip = exports.RangePopupTip = _styledComponents2.default.p.withConfig({
    displayName: 'style__RangePopupTip',
    componentId: 'sc-1hu7kya-9'
})(function (_ref12) {
    var DT = _ref12.theme.designTokens;
    return (0, _styledComponents.css)(['color:', ';display:inline-block;line-height:28px;'], DT.T_COLOR_TEXT_REMARK_DARK);
});

var RangePopupError = exports.RangePopupError = _styledComponents2.default.p.withConfig({
    displayName: 'style__RangePopupError',
    componentId: 'sc-1hu7kya-10'
})(function (_ref13) {
    var DT = _ref13.theme.designTokens;
    return (0, _styledComponents.css)(['color:', ';display:inline-block;line-height:28px;'], DT.T_COLOR_TEXT_ERROR);
});

(0, _addDefaultThemeProps2.default)(PickerWrap, DateWrap, PickerContainer, RangePopup, RangeDateWrap, RangeDateSeparator, RangePopupFooter, RangePopupError, RangePopupTip);