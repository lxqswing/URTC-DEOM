'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _style = require('./style');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Progress = (_temp = _class = function (_Component) {
    _inherits(Progress, _Component);

    function Progress() {
        _classCallCheck(this, Progress);

        return _possibleConstructorReturn(this, (Progress.__proto__ || Object.getPrototypeOf(Progress)).apply(this, arguments));
    }

    _createClass(Progress, [{
        key: 'render',
        value: function render() {
            var _props = this.props,
                percent = _props.percent,
                format = _props.format,
                color = _props.color,
                rest = _objectWithoutProperties(_props, ['percent', 'format', 'color']);

            percent = percent < 0 ? 0 : percent > 100 ? 100 : percent;
            return _react2.default.createElement(
                'div',
                rest,
                format !== null && _react2.default.createElement(
                    _style.TextWrap,
                    null,
                    _react2.default.createElement(
                        _style.CurrentText,
                        { percent: percent },
                        format(percent)
                    )
                ),
                _react2.default.createElement(
                    _style.Outer,
                    null,
                    _react2.default.createElement(_style.Inner, { color: color, percent: percent })
                ),
                format !== null && _react2.default.createElement(
                    _style.TextWrap,
                    null,
                    _react2.default.createElement(
                        'span',
                        null,
                        format(0)
                    ),
                    _react2.default.createElement(
                        _style.EndText,
                        null,
                        format(100)
                    )
                )
            );
        }
    }]);

    return Progress;
}(_react.Component), _class.propTypes = {
    /** 当前百分比 */
    percent: _propTypes2.default.number,
    /** 进度条颜色，内置 success、warn、error */
    color: _propTypes2.default.oneOfType([_propTypes2.default.oneOf(['success', 'warn', 'error']), _propTypes2.default.string]),
    /**
     * 展示文字的格式化，为 null 时隐藏文字
     * @argument percent - 格式化的百分比
     */
    format: _propTypes2.default.func
}, _class.defaultProps = {
    percent: 0,
    format: function format(percent) {
        return percent + '%';
    }
}, _temp);
exports.default = Progress;