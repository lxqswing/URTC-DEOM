'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _TabContent = require('rc-tabs/lib/TabContent');

var _TabContent2 = _interopRequireDefault(_TabContent);

var _ScrollableInkTabBar = require('rc-tabs/lib/ScrollableInkTabBar');

var _ScrollableInkTabBar2 = _interopRequireDefault(_ScrollableInkTabBar);

var _style = require('./style');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Position = ['left', 'right', 'top', 'bottom'];
var StyleType = ['default', 'ink', 'pure'];
var Size = ['sm', 'md', 'lg'];

var Tabs = (_temp = _class = function (_Component) {
    _inherits(Tabs, _Component);

    function Tabs() {
        _classCallCheck(this, Tabs);

        return _possibleConstructorReturn(this, (Tabs.__proto__ || Object.getPrototypeOf(Tabs)).apply(this, arguments));
    }

    _createClass(Tabs, [{
        key: 'render',
        value: function render() {
            var _props = this.props,
                styleType = _props.styleType,
                tabBarPosition = _props.tabBarPosition,
                rest = _objectWithoutProperties(_props, ['styleType', 'tabBarPosition']);

            return _react2.default.createElement(_style.TabsWrap, _extends({}, rest, {
                styleType: styleType,
                prefixCls: _style.prefixCls,
                tabBarPosition: tabBarPosition,
                renderTabBar: function renderTabBar() {
                    return _react2.default.createElement(_ScrollableInkTabBar2.default, {
                        className: _style.prefixCls + '-' + tabBarPosition + '-bar ' + _style.prefixCls + '-styletype-' + styleType + '-bar'
                    });
                },
                renderTabContent: function renderTabContent() {
                    return _react2.default.createElement(_TabContent2.default, {
                        className: _style.prefixCls + '-' + tabBarPosition + '-content ' + _style.prefixCls + '-styletype-' + styleType + '-content',
                        animated: false
                    });
                }
            }));
        }
    }]);

    return Tabs;
}(_react.Component), _class.propTypes = {
    /** 当前激活的tab key，受控 */
    activeKey: _propTypes2.default.string,
    /** 默认激活的tab key，非受控 */
    defaultActiveKey: _propTypes2.default.string,
    /** tab修改时的回调 */
    onChange: _propTypes2.default.func,
    /** bar的定位 */
    tabBarPosition: _propTypes2.default.oneOf(Position),
    /** 样式风格 */
    styleType: _propTypes2.default.oneOf(StyleType),
    /** Tab 尺寸 */
    size: _propTypes2.default.oneOf(Size),
    /** 是否销毁不展示的tab内容 */
    destroyInactiveTabPane: _propTypes2.default.bool
}, _class.defaultProps = {
    styleType: StyleType[0],
    tabBarPosition: Position[2],
    size: Size[0]
}, _temp);
exports.default = Tabs;


Tabs.Position = Position;
Tabs.StyleType = StyleType;
Tabs.Size = Size;