'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp, _class2, _temp3;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactTransitionGroup = require('react-transition-group');

var _ContainerContext = require('../../components/Popover/ContainerContext');

var _SvgIcon = require('../../components/SvgIcon');

var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

var _style = require('./style');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Placement = ['left', 'right', 'top', 'bottom'];

var CloseHandler = (_temp = _class = function (_PureComponent) {
    _inherits(CloseHandler, _PureComponent);

    function CloseHandler() {
        _classCallCheck(this, CloseHandler);

        return _possibleConstructorReturn(this, (CloseHandler.__proto__ || Object.getPrototypeOf(CloseHandler)).apply(this, arguments));
    }

    _createClass(CloseHandler, [{
        key: 'render',
        value: function render() {
            var _props = this.props,
                visible = _props.visible,
                onClose = _props.onClose;

            return _react2.default.createElement(
                _reactTransitionGroup.CSSTransition,
                { 'in': visible, unmountOnExit: false, classNames: 'uc-fe-animation-fade', timeout: 100 },
                _react2.default.createElement(
                    _style.CloseHandlerWrapper,
                    { onClick: onClose },
                    _react2.default.createElement(_SvgIcon2.default, { type: 'cross' })
                )
            );
        }
    }]);

    return CloseHandler;
}(_react.PureComponent), _class.propTypes = {
    visible: _propTypes2.default.bool,
    onClose: _propTypes2.default.func.isRequired
}, _temp);
var Drawer = (_temp3 = _class2 = function (_Component) {
    _inherits(Drawer, _Component);

    function Drawer() {
        var _ref;

        var _temp2, _this2, _ret;

        _classCallCheck(this, Drawer);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp2 = (_this2 = _possibleConstructorReturn(this, (_ref = Drawer.__proto__ || Object.getPrototypeOf(Drawer)).call.apply(_ref, [this].concat(args))), _this2), _this2.state = {
            visible: _this2.props.visible
        }, _this2.onMaskClick = function () {
            var _this2$props = _this2.props,
                onClose = _this2$props.onClose,
                maskClosable = _this2$props.maskClosable;

            maskClosable && onClose();
        }, _this2.afterVisibleChange = function (visible) {
            _this2.setState({
                visible: visible
            });
        }, _this2.getDestory = function () {
            var _this2$props2 = _this2.props,
                destroyOnClose = _this2$props2.destroyOnClose,
                visible = _this2$props2.visible;
            var visibleState = _this2.state.visible;

            return destroyOnClose && !visible && !visibleState;
        }, _this2.getShow = function () {
            var visible = _this2.props.visible;
            var visibleState = _this2.state.visible;

            return visible || visibleState;
        }, _this2.renderCloseHandler = function (_ref2) {
            var closeHandler = _ref2.closeHandler,
                onClose = _ref2.onClose,
                show = _ref2.show,
                visible = _ref2.visible;

            if (!show) return null;
            return closeHandler === undefined ? _react2.default.createElement(CloseHandler, { visible: visible, onClose: onClose }) : closeHandler;
        }, _temp2), _possibleConstructorReturn(_this2, _ret);
    }

    _createClass(Drawer, [{
        key: 'render',
        value: function render() {
            // eslint-disable-next-line no-unused-vars
            var _props2 = this.props,
                children = _props2.children,
                visible = _props2.visible,
                mask = _props2.mask,
                maskClosable = _props2.maskClosable,
                onClose = _props2.onClose,
                destroyOnClose = _props2.destroyOnClose,
                closeHandler = _props2.closeHandler,
                rest = _objectWithoutProperties(_props2, ['children', 'visible', 'mask', 'maskClosable', 'onClose', 'destroyOnClose', 'closeHandler']);

            var destory = this.getDestory();
            var show = this.getShow();
            return !destory && _react2.default.createElement(
                _ContainerContext.Provider,
                { value: {} },
                _react2.default.createElement(
                    _style.DrawerWrap,
                    _extends({}, rest, {
                        open: visible,
                        onMaskClick: this.onMaskClick,
                        showMask: mask,
                        handler: false,
                        afterVisibleChange: this.afterVisibleChange,
                        show: show,
                        closeHandler: this.renderCloseHandler({ closeHandler: closeHandler, onClose: onClose, show: show, visible: visible })
                    }),
                    children
                )
            );
        }
    }]);

    return Drawer;
}(_react.Component), _class2.propTypes = {
    /** @ignore */
    children: _propTypes2.default.node.isRequired,
    /** 是否显示，controlled */
    visible: _propTypes2.default.bool,
    /** 是否有遮罩 */
    mask: _propTypes2.default.bool,
    /** 是否可以点击遮罩关闭 */
    maskClosable: _propTypes2.default.bool,
    /** 是否可以esc关闭 */
    keyboard: _propTypes2.default.bool,
    /** 点击关闭按钮、遮罩进行关闭时的回调 */
    onClose: _propTypes2.default.func,
    /** 关闭后是否自动销毁 */
    destroyOnClose: _propTypes2.default.bool,
    /** 弹出位置 */
    placement: _propTypes2.default.oneOf(Placement),
    /** 抽屉的宽度，left right可用 */
    width: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
    /** 抽屉的高度，top bottom可用 */
    height: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
    /** 设置抽屉容器 */
    getContainer: _propTypes2.default.func,
    /** 弹出层的z-index */
    zIndex: _propTypes2.default.number,
    /** 传入 false/null 隐藏关闭控件 */
    closeHandler: _propTypes2.default.oneOf([null, false]),
    /** @ignore */
    level: _propTypes2.default.any
}, _class2.defaultProps = {
    visible: false,
    mask: true,
    maskClosable: true,
    keyboard: false,
    onClose: function onClose() {},
    level: null,
    placement: 'right',
    zIndex: 1010
}, _temp3);

Drawer.Placement = Placement;
exports.default = Drawer;