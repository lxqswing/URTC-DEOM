'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _styledComponents = require('styled-components');

var _Popover = require('../../components/Popover');

var _Popover2 = _interopRequireDefault(_Popover);

var _placements = require('../../components/Popover/placements');

var _ThemeGetter = require('../../components/ThemeProvider/ThemeGetter');

var _ThemeGetter2 = _interopRequireDefault(_ThemeGetter);

var _style = require('./style');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Animation = _Popover2.default.Animation,
    Trigger = _Popover2.default.Trigger,
    Placement = _Popover2.default.Placement;

var arrowPlacements = (0, _placements.getPlacements)(10);
var placements = (0, _placements.getPlacements)();
var Theme = ['light', 'dark'];

var Tooltip = (_temp = _class = function (_Component) {
    _inherits(Tooltip, _Component);

    function Tooltip() {
        _classCallCheck(this, Tooltip);

        return _possibleConstructorReturn(this, (Tooltip.__proto__ || Object.getPrototypeOf(Tooltip)).apply(this, arguments));
    }

    _createClass(Tooltip, [{
        key: 'renderPopup',
        value: function renderPopup(theme) {
            var _props = this.props,
                popup = _props.popup,
                placement = _props.placement,
                themeType = _props.theme,
                arrow = _props.arrow,
                customStyle = _props.customStyle;
            var popupWrapperPadding = customStyle.popupWrapperPadding;

            return _react2.default.createElement(
                _styledComponents.ThemeProvider,
                { theme: theme },
                _react2.default.createElement(
                    _style.TooltipWrap,
                    { placement: placement, themeType: themeType },
                    arrow && _react2.default.createElement(
                        _style.Arrow,
                        null,
                        _react2.default.createElement(_style.ArrowInner, null)
                    ),
                    _react2.default.createElement(
                        _style.ContentWrap,
                        { themeType: themeType, popupWrapperPadding: popupWrapperPadding },
                        popup
                    )
                )
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            // eslint-disable-next-line no-unused-vars
            var _props2 = this.props,
                popup = _props2.popup,
                themeType = _props2.theme,
                _props2$popupClassNam = _props2.popupClassName,
                popupClassName = _props2$popupClassNam === undefined ? '' : _props2$popupClassNam,
                customStyle = _props2.customStyle,
                arrow = _props2.arrow,
                rest = _objectWithoutProperties(_props2, ['popup', 'theme', 'popupClassName', 'customStyle', 'arrow']);

            return _react2.default.createElement(
                _ThemeGetter2.default,
                null,
                function (theme) {
                    return _react2.default.createElement(_Popover2.default, _extends({
                        getPopupContainer: function getPopupContainer(triggerNode) {
                            return triggerNode.parentNode;
                        }
                    }, rest, {
                        popupClassName: _style.tooltipPopupClassName + ' ' + popupClassName,
                        builtinPlacements: arrow ? arrowPlacements : placements,
                        popup: _this2.renderPopup(theme)
                    }));
                }
            );
        }
    }]);

    return Tooltip;
}(_react.Component), _class.propTypes = {
    /** @ignore */
    popup: _propTypes2.default.node.isRequired,
    /** @ignore */
    placement: _propTypes2.default.oneOf(Placement),
    /** @ignore */
    popupClassName: _propTypes2.default.string,
    /** 是否显示箭头 */
    arrow: _propTypes2.default.bool,
    /** 主题风格 */
    theme: _propTypes2.default.oneOfType([_propTypes2.default.oneOf(Theme), _propTypes2.default.object]),
    /** 自定义样式 */
    customStyle: _propTypes2.default.shape({
        /** 弹出层外层 padding */
        popupWrapperPadding: _propTypes2.default.string
    })
}, _class.defaultProps = {
    theme: 'light',
    arrow: true,
    placement: Placement[0],
    customStyle: {}
}, _temp);


Object.assign(Tooltip, {
    Animation: Animation,
    Trigger: Trigger,
    Placement: Placement,
    Theme: Theme
});

exports.default = Tooltip;