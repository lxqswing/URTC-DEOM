'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp2;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactResizable = require('react-resizable');

var _styledComponents = require('styled-components');

var _styledComponents2 = _interopRequireDefault(_styledComponents);

var _addDefaultThemeProps = require('../../components/ThemeProvider/addDefaultThemeProps');

var _addDefaultThemeProps2 = _interopRequireDefault(_addDefaultThemeProps);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

// eslint-disable-next-line no-unused-vars
var FilteredResizable = function FilteredResizable(_ref) {
    var resizing = _ref.resizing,
        theme = _ref.theme,
        rest = _objectWithoutProperties(_ref, ['resizing', 'theme']);

    return _react2.default.createElement(_reactResizable.Resizable, rest);
};
FilteredResizable.propTypes = { resizing: _propTypes2.default.bool, theme: _propTypes2.default.any };

var ResizableTHWrap = (0, _styledComponents2.default)(FilteredResizable)(function (_ref2) {
    var resizing = _ref2.resizing,
        DT = _ref2.theme.designTokens;
    return (0, _styledComponents.css)(['position:relative;box-sizing:border-box;.react-resizable-handle{position:absolute;width:6px;height:100%;bottom:0;right:0;cursor:col-resize;border-right:1px solid transparent;}:hover{.react-resizable-handle{border-right-color:', ';}}', ';'], DT.T_COLOR_LINE_DEFAULT_LIGHT, resizing && (0, _styledComponents.css)(['background:', ';.react-resizable-handle{border-right-color:', ';}'], DT.T_COLOR_BG_DEFAULT_LIGHT, DT.T_COLOR_LINE_DEFAULT_LIGHT));
});

(0, _addDefaultThemeProps2.default)(ResizableTHWrap);

var ResizableTH = (_temp2 = _class = function (_Component) {
    _inherits(ResizableTH, _Component);

    function ResizableTH() {
        var _ref3;

        var _temp, _this, _ret;

        _classCallCheck(this, ResizableTH);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref3 = ResizableTH.__proto__ || Object.getPrototypeOf(ResizableTH)).call.apply(_ref3, [this].concat(args))), _this), _this.state = {}, _this.onResize = function (e, _ref4) {
            var size = _ref4.size;
            var _this$props$onResize = _this.props.onResize,
                onResize = _this$props$onResize === undefined ? function () {} : _this$props$onResize;

            onResize(size.width);
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(ResizableTH, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            // eslint-disable-next-line no-unused-vars
            var _props = this.props,
                width = _props.width,
                resizeAble = _props.resizeAble,
                onResize = _props.onResize,
                _props$minWidth = _props.minWidth,
                minWidth = _props$minWidth === undefined ? 20 : _props$minWidth,
                _props$maxWidth = _props.maxWidth,
                maxWidth = _props$maxWidth === undefined ? Infinity : _props$maxWidth,
                rest = _objectWithoutProperties(_props, ['width', 'resizeAble', 'onResize', 'minWidth', 'maxWidth']);

            var resizing = this.state.resizing;


            return resizeAble ? _react2.default.createElement(
                ResizableTHWrap,
                {
                    width: width,
                    height: 0,
                    onResize: this.onResize,
                    onResizeStart: function onResizeStart() {
                        return _this2.setState({ resizing: true });
                    },
                    onResizeStop: function onResizeStop() {
                        return _this2.setState({ resizing: false });
                    },
                    minConstraints: [minWidth, 0],
                    maxConstraints: [maxWidth, 0],
                    resizing: resizing
                },
                _react2.default.createElement('th', rest)
            ) : _react2.default.createElement('th', rest);
        }
    }]);

    return ResizableTH;
}(_react.Component), _class.propTypes = {
    /** 当前宽度 */
    width: _propTypes2.default.number,
    /** 最小宽度 */
    minWidth: _propTypes2.default.number,
    /** 最大宽度 */
    maxWidth: _propTypes2.default.number,
    /** 是否可调整大小 */
    resizeAble: _propTypes2.default.bool,
    /** 调整时的回调 */
    onResize: _propTypes2.default.func
}, _temp2);
exports.default = ResizableTH;