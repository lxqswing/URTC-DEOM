'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.setColumnConfigToLocalStorage = exports.getColumnConfigFromLocalStorage = undefined;

var _mapValues2 = require('lodash/mapValues');

var _mapValues3 = _interopRequireDefault(_mapValues2);

var _merge2 = require('lodash/merge');

var _merge3 = _interopRequireDefault(_merge2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getColumnConfigFromLocalStorage = exports.getColumnConfigFromLocalStorage = function getColumnConfigFromLocalStorage(columnConfigKey, defaultConfig) {
    if (typeof localStorage === 'undefined') {
        return defaultConfig;
    }
    var localConfig = JSON.parse(localStorage.getItem(columnConfigKey));
    if (localConfig) {
        return (0, _merge3.default)({}, defaultConfig, localConfig);
    } else {
        return defaultConfig;
    }
};

var setColumnConfigToLocalStorage = exports.setColumnConfigToLocalStorage = function setColumnConfigToLocalStorage(columnConfigKey, config) {
    if (typeof localStorage === 'undefined') {
        return;
    }
    localStorage.setItem(columnConfigKey, JSON.stringify((0, _mapValues3.default)(config, function (v) {
        return {
            hidden: v.hidden
        };
    })));
};