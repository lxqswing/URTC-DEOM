'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.NumberInputWrap = exports.HandlerDown = exports.HandlerUp = exports.InputSuffix = exports.Input = exports.InputWrap = exports.prefixCls = undefined;

var _styledComponents = require('styled-components');

var _styledComponents2 = _interopRequireDefault(_styledComponents);

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

var _addDefaultThemeProps = require('../../../components/ThemeProvider/addDefaultThemeProps');

var _addDefaultThemeProps2 = _interopRequireDefault(_addDefaultThemeProps);

var _style = require('../../../style');

var _config = require('../../../config');

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var _prefixCls = _config2.default.prefixCls;
var prefixCls = exports.prefixCls = _prefixCls + '-numberinput';

/* stylelint-disable no-duplicate-selectors, selector-type-no-unknown, no-descending-specificity */

var InputWrap = exports.InputWrap = _styledComponents2.default.div.attrs({
    className: prefixCls + '-input-wrap'
}).withConfig({
    displayName: 'style__InputWrap',
    componentId: 'mnip3j-0'
})(['position:relative;']);

var Input = exports.Input = _styledComponents2.default.input.attrs({
    className: prefixCls + '-input'
}).withConfig({
    displayName: 'style__Input',
    componentId: 'mnip3j-1'
})(['border:none;outline:none;padding:0;margin:0;color:inherit;']);

var InputSuffix = exports.InputSuffix = _styledComponents2.default.span.attrs({
    className: prefixCls + '-suffix'
})(function (_ref) {
    var DT = _ref.theme.designTokens;
    return (0, _styledComponents.css)(['color:', ';margin:0 4px;', ';'], DT.T_COLOR_TEXT_REMARK_DARK, _style.inlineBlockWithVerticalMixin);
});

var Handler = _styledComponents2.default.span.attrs({
    className: function className(_ref2) {
        var _classnames;

        var disabled = _ref2.disabled;
        return (0, _classnames3.default)((_classnames = {}, _defineProperty(_classnames, prefixCls + '-handler', true), _defineProperty(_classnames, prefixCls + '-handler-disabled', disabled), _classnames));
    }
})(function (_ref3) {
    var disabled = _ref3.disabled,
        DT = _ref3.theme.designTokens;
    return (0, _styledComponents.css)(['position:absolute;box-sizing:border-box;text-align:center;border-radius:', ';border-style:solid;cursor:pointer;color:', ';border-color:', ';box-shadow:', ';background:', ';', ';:hover{color:', ';box-shadow:', ';}', ';'], DT.T_CORNER_SM, DT.T_COLOR_TEXT_DEFAULT_DARK, DT.T_COLOR_LINE_DEFAULT_LIGHT, DT.T_SHADOW_BUTTON_DEFAULT, DT.T_BUTTON_SECONDARY_COLOR_BG_DEFAULT, _style.inlineBlockWithVerticalMixin, DT.T_COLOR_TEXT_PRIMARY_DEFAULT, DT.T_SHADOW_BUTTON_HOVER, disabled && (0, _styledComponents.css)(['cursor:not-allowed;pointer-events:none;color:', ';border-color:', ';'], DT.T_COLOR_TEXT_DISABLED, DT.T_COLOR_LINE_DEFAULT_DARK));
});

var HandlerUp = exports.HandlerUp = (0, _styledComponents2.default)(Handler).attrs({
    className: prefixCls + '-handler-up'
}).withConfig({
    displayName: 'style__HandlerUp',
    componentId: 'mnip3j-2'
})(['']);

var HandlerDown = exports.HandlerDown = (0, _styledComponents2.default)(Handler).attrs({
    className: prefixCls + '-handler-down'
}).withConfig({
    displayName: 'style__HandlerDown',
    componentId: 'mnip3j-3'
})(['']);

var propsMixin = function propsMixin(_ref4) {
    var _ref4$theme = _ref4.theme,
        DT = _ref4$theme.designTokens,
        Height = _ref4$theme.Height,
        HeightNumber = _ref4$theme.HeightNumber,
        _ref4$theme$materialV = _ref4$theme.materialVars,
        materialVars = _ref4$theme$materialV === undefined ? {} : _ref4$theme$materialV,
        styleType = _ref4.styleType,
        focused = _ref4.focused,
        size = _ref4.size,
        hideHandler = _ref4.hideHandler,
        disabled = _ref4.disabled;
    return (0, _styledComponents.css)(['color:', ';height:', ';', ';', '{line-height:', 'px;height:', 'px;', ';', ';&::placeholder{opacity:1;color:', ';}}', ';', ';', ';'], DT.T_COLOR_TEXT_DEFAULT_DARK, Height[size], disabled && (0, _styledComponents.css)(['pointer-events:none;color:', ';-webkit-text-fill-color:currentcolor;'], DT.T_COLOR_TEXT_DISABLED), Input, HeightNumber[size] - 2, HeightNumber[size] - 2, _style.inlineBlockWithVerticalMixin, function (_ref5) {
        var disabled = _ref5.disabled;
        return disabled && (0, _styledComponents.css)(['background:', ';'], DT.T_COLOR_BG_DISABLED_LIGHT);
    }, DT.T_COLOR_TEXT_REMARK_LIGHT, styleType === 'default' && (0, _styledComponents.css)(['border:', ' solid ', ';padding-right:', 'px;border-right-width:0;transition:', ';&:hover{border-color:', ';}', '{box-shadow:', ';background:', ';:hover{background:', ';}}', ';', ';', '{padding:0 0 0 8px;text-align:left;box-shadow:none;background:transparent;width:', 'px;}', ',', '{right:0;box-sizing:content-box;border-radius:0;height:', 'px;line-height:', 'px;width:', 'px;&:hover{color:', ';}}', '{border-width:0 0 0 1px;top:-1px;padding-top:1px;}', '{border-width:1px 0 0 1px;bottom:0;border-top-color:', ';}', ';'], DT.T_LINE_WIDTH_BASE, DT.T_COLOR_LINE_DEFAULT_LIGHT, HeightNumber[size] - 6, materialVars.transitiondown, DT.T_COLOR_LINE_DEFAULT_DARK, InputWrap, DT.T_SHADOW_INSET_1, DT.T_INPUT_COLOR_BG_DEFAULT, DT.T_INPUT_COLOR_BG_ACTIVE, focused && (0, _styledComponents.css)(['&,&:hover{border-color:', ';}', '{background:', ';}'], DT.T_COLOR_LINE_PRIMARY_DEFAULT, InputWrap, DT.T_INPUT_COLOR_BG_ACTIVE), disabled && (0, _styledComponents.css)(['border-color:', ';', '{box-shadow:none;}'], DT.T_COLOR_LINE_DISABLED_DARK, InputWrap), Input, HeightNumber[size] + 6, HandlerUp, HandlerDown, (+Height[size].replace('px', '') - 2) / 2, (+Height[size].replace('px', '') - 2) / 2, HeightNumber[size] - 6, DT.T_COLOR_TEXT_PRIMARY_DEFAULT, HandlerUp, HandlerDown, DT.T_COLOR_LINE_DEFAULT_DARK, hideHandler && (0, _styledComponents.css)(['padding-right:0;border-right-width:1px;'])), styleType === 'split' && (0, _styledComponents.css)(['padding:0 ', ';', '{padding:0 8px;text-align:left;box-shadow:none;background:transparent;width:', 'px;}', '{margin:0 -1px 0 -1px;border:', ' solid ', ';box-shadow:', ';background:', ';transition:', ';margin:0;&:hover{border-color:', ';z-index:1;background:', ';}', ';', ';}', ',', '{text-align:center;top:0;height:', ';width:', ';line-height:', ';border-color:transparent;&:hover{color:', ';z-index:1;}}', '{right:0;}', '{left:0;}', ';', ';', ';'], Height[size], Input, HeightNumber[size] + 6, InputWrap, DT.T_LINE_WIDTH_BASE, DT.T_COLOR_LINE_DEFAULT_LIGHT, DT.T_SHADOW_INSET_1, DT.T_INPUT_COLOR_BG_DEFAULT, materialVars.transitionDown, DT.T_COLOR_LINE_DEFAULT_DARK, DT.T_INPUT_COLOR_BG_ACTIVE, focused && (0, _styledComponents.css)(['border-color:', ';'], DT.T_INPUT_COLOR_BG_ACTIVE), disabled && (0, _styledComponents.css)(['border-color:', ';'], DT.T_COLOR_LINE_DISABLED_DARK), HandlerUp, HandlerDown, Height[size], Height[size], Height[size], DT.T_SHADOW_BUTTON_HOVER, HandlerUp, HandlerDown, focused && (0, _styledComponents.css)(['', ',', ':hover{border-color:', ';background:', ';}'], InputWrap, InputWrap, DT.T_COLOR_LINE_PRIMARY_DEFAULT, DT.T_INPUT_COLOR_BG_ACTIVE), disabled && (0, _styledComponents.css)(['box-shadow:none;']), hideHandler && (0, _styledComponents.css)(['padding:0;'])), styleType === 'pagination' && (0, _styledComponents.css)(['padding:0 ', ';', '{text-align:center;margin:0 4px;width:', 'px;border:', ' solid ', ';box-shadow:', ';background:', ';transition:', ';&:hover{z-index:1;border-color:', ';background:', ';}', ';', ';}', ',', '{text-align:center;top:0;height:', ';width:', ';line-height:', ';border-color:transparent;&:hover{z-index:1;}}', '{right:0;}', '{left:0;}', '{margin-left:0;}', ';'], Height[size], Input, HeightNumber[size] - 2, DT.T_LINE_WIDTH_BASE, DT.T_COLOR_LINE_DEFAULT_LIGHT, DT.T_SHADOW_INSET_1, DT.T_INPUT_COLOR_BG_DEFAULT, materialVars.transitionDown, DT.T_COLOR_LINE_DEFAULT_DARK, DT.T_INPUT_COLOR_BG_ACTIVE, focused && (0, _styledComponents.css)(['&,&:hover{border-color:', ';background:', ';}'], DT.T_COLOR_LINE_PRIMARY_DEFAULT, DT.T_INPUT_COLOR_BG_ACTIVE), disabled && (0, _styledComponents.css)(['border-color:', ';box-shadow:none;background:', ';'], DT.T_COLOR_LINE_DISABLED_DARK, DT.T_COLOR_BG_DISABLED_LIGHT), HandlerUp, HandlerDown, Height[size], Height[size], Height[size], HandlerUp, HandlerDown, InputSuffix, hideHandler && (0, _styledComponents.css)(['padding:0;margin:0;', '{margin:0;}', '{margin-left:4px;margin-right:0px;}'], Input, InputSuffix)));
};

var NumberInputWrap = exports.NumberInputWrap = _styledComponents2.default.div.attrs({
    className: function className(_ref6) {
        var styleType = _ref6.styleType,
            focused = _ref6.focused,
            disabled = _ref6.disabled;
        return (0, _classnames3.default)(prefixCls, prefixCls + '-styletype-' + styleType, focused && prefixCls + '-focused', disabled && prefixCls + '-disabled');
    }
}).withConfig({
    displayName: 'style__NumberInputWrap',
    componentId: 'mnip3j-4'
})(['position:relative;box-sizing:border-box;border-radius:2px;', ';', ';'], _style.inlineBlockWithVerticalMixin, propsMixin);
(0, _addDefaultThemeProps2.default)(NumberInputWrap, Handler, InputSuffix);