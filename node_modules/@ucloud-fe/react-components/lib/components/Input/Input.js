'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _isString2 = require('lodash/isString');

var _isString3 = _interopRequireDefault(_isString2);

var _once2 = require('lodash/once');

var _once3 = _interopRequireDefault(_once2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp2, _initialiseProps;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _Icon = require('../../components/Icon');

var _Icon2 = _interopRequireDefault(_Icon);

var _deprecatedLog = require('../../utils/deprecatedLog');

var _deprecatedLog2 = _interopRequireDefault(_deprecatedLog);

var _style = require('./style');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var deprecatedLogForIcon = (0, _once3.default)(function () {
    return (0, _deprecatedLog2.default)('Input icon', 'suffix');
});

var Size = ['sm', 'md', 'lg'];
var Status = ['default', 'error'];

var noop = function noop() {};

var Input = (_temp2 = _class = function (_Component) {
    _inherits(Input, _Component);

    function Input() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, Input);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Input.__proto__ || Object.getPrototypeOf(Input)).call.apply(_ref, [this].concat(args))), _this), _initialiseProps.call(_this), _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Input, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            // eslint-disable-next-line no-unused-vars
            /* eslint-disable no-unused-vars */
            var _props = this.props,
                className = _props.className,
                style = _props.style,
                disabled = _props.disabled,
                icon = _props.icon,
                size = _props.size,
                suffix = _props.suffix,
                prefix = _props.prefix,
                onFocus = _props.onFocus,
                onBlur = _props.onBlur,
                status = _props.status,
                block = _props.block,
                rest = _objectWithoutProperties(_props, ['className', 'style', 'disabled', 'icon', 'size', 'suffix', 'prefix', 'onFocus', 'onBlur', 'status', 'block']);
            /* eslint-enable no-unused-vars */


            var focused = this.state.focused;

            return _react2.default.createElement(
                _style.InputWrap,
                _extends({
                    onClick: this.focus,
                    className: (0, _classnames2.default)(block && _style.blockCls, className)
                }, { size: size, focused: focused, style: style, disabled: disabled, status: status }),
                _react2.default.createElement(
                    _style.TableWrap,
                    null,
                    this.renderPrefix(),
                    _react2.default.createElement('input', _extends({}, rest, {
                        ref: function ref(_ref2) {
                            return _this2.input = _ref2;
                        },
                        onFocus: this.onFocus,
                        onBlur: this.onBlur,
                        disabled: disabled
                    })),
                    this.renderSuffix()
                )
            );
        }
    }]);

    return Input;
}(_react.Component), _class.propTypes = {
    /** @ignore */
    className: _propTypes2.default.string,
    /**
     * @deprecated
     * 图标，传入string时为图标类型，也可直接传入图标组件
     */
    icon: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]),
    /** 前缀 */
    prefix: _propTypes2.default.node,
    /** 后缀 */
    suffix: _propTypes2.default.node,
    /** 尺寸 */
    size: _propTypes2.default.oneOf(Size),
    /** 状态 */
    status: _propTypes2.default.oneOf(Status),
    /** 展示变更为块占位 */
    block: _propTypes2.default.bool,
    /** @ignore */
    disabled: _propTypes2.default.bool,
    /** @ignore */
    style: _propTypes2.default.object,
    /** @ignore */
    onFocus: _propTypes2.default.func,
    /** @ignore */
    onBlur: _propTypes2.default.func
}, _class.defaultProps = {
    size: 'md'
}, _initialiseProps = function _initialiseProps() {
    var _this3 = this;

    this.state = {};

    this.renderPrefix = function () {
        var prefix = _this3.props.prefix;

        return prefix && _react2.default.createElement(
            _style.PrefixWrap,
            null,
            prefix
        );
    };

    this.renderSuffix = function () {
        var _props2 = _this3.props,
            icon = _props2.icon,
            suffix = _props2.suffix;

        if ('icon' in _this3.props) {
            deprecatedLogForIcon();
        }
        if (suffix) {
            return _react2.default.createElement(
                _style.SuffixWrap,
                null,
                suffix
            );
        } else if ((0, _isString3.default)(icon)) {
            return _react2.default.createElement(
                _style.SuffixWrap,
                null,
                _react2.default.createElement(_Icon2.default, { type: icon })
            );
        } else if (_react2.default.isValidElement(icon)) {
            return _react2.default.createElement(
                _style.SuffixWrap,
                null,
                icon
            );
        }
    };

    this.onFocus = function () {
        var _props$onFocus = _this3.props.onFocus,
            onFocus = _props$onFocus === undefined ? noop : _props$onFocus;

        _this3.setState({
            focused: true
        });
        onFocus.apply(undefined, arguments);
    };

    this.onBlur = function () {
        var _props$onBlur = _this3.props.onBlur,
            onBlur = _props$onBlur === undefined ? noop : _props$onBlur;

        _this3.setState({
            focused: false
        });
        onBlur.apply(undefined, arguments);
    };

    this.focus = function () {
        _this3.input && _this3.input.focus();
    };
}, _temp2);

Input.Size = Size;
Input.Status = Status;
exports.default = Input;