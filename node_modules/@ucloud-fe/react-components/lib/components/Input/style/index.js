'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.InputWrap = exports.TableWrap = exports.SearchIcon = exports.SuffixWrap = exports.PrefixWrap = exports.FixWrap = exports.blockCls = undefined;

var _styledComponents = require('styled-components');

var _styledComponents2 = _interopRequireDefault(_styledComponents);

var _style = require('../../../style');

var _Icon = require('../../../components/Icon');

var _Icon2 = _interopRequireDefault(_Icon);

var _addDefaultThemeProps = require('../../../components/ThemeProvider/addDefaultThemeProps');

var _addDefaultThemeProps2 = _interopRequireDefault(_addDefaultThemeProps);

var _config = require('../../../config');

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _prefixCls = _config2.default.prefixCls;

var prefixCls = _prefixCls + '-input';
var blockCls = exports.blockCls = prefixCls + '-block';

/* stylelint-disable no-descending-specificity */

var FixWrap = exports.FixWrap = _styledComponents2.default.span.withConfig({
    displayName: 'style__FixWrap',
    componentId: 'sc-11j0fsv-0'
})(['vertical-align:middle;display:table-cell;width:1px;']);

var PrefixWrap = exports.PrefixWrap = (0, _styledComponents2.default)(FixWrap)((0, _styledComponents.css)(['padding-left:8px;']));

var SuffixWrap = exports.SuffixWrap = (0, _styledComponents2.default)(FixWrap)((0, _styledComponents.css)(['padding-right:8px;']));

var SearchIcon = exports.SearchIcon = (0, _styledComponents2.default)(_Icon2.default).withConfig({
    displayName: 'style__SearchIcon',
    componentId: 'sc-11j0fsv-1'
})(['cursor:pointer;']);

var themeMixin = function themeMixin(_ref) {
    var _ref$theme = _ref.theme,
        DT = _ref$theme.designTokens,
        Height = _ref$theme.Height,
        HeightNumber = _ref$theme.HeightNumber,
        materialVars = _ref$theme.materialVars,
        disabled = _ref.disabled,
        size = _ref.size,
        focused = _ref.focused,
        status = _ref.status;
    return (0, _styledComponents.css)(['border-radius:', ';height:', ';color:', ';border:', ' solid ', ';box-shadow:', ';background:', ';transition:', ';:hover{color:', ';border-color:', ';background:', ';}input{line-height:', 'px;height:', 'px;&::placeholder{opacity:1;color:', ';}}', ';', ';', ';'], DT.T_CORNER_SM, Height[size], DT.T_COLOR_TEXT_DEFAULT_LIGHT, DT.T_LINE_WIDTH_BASE, DT.T_COLOR_LINE_DEFAULT_LIGHT, DT.T_SHADOW_INSET_1, DT.T_INPUT_COLOR_BG_DEFAULT, materialVars.transitionDown, DT.T_COLOR_TEXT_DEFAULT_DARK, DT.T_COLOR_LINE_DEFAULT_DARK, DT.T_INPUT_COLOR_BG_DEFAULT, HeightNumber[size] - 2, HeightNumber[size] - 2, DT.T_COLOR_TEXT_REMARK_LIGHT, focused && !disabled && (0, _styledComponents.css)(['&&{color:', ';border-color:', ';background:', ';}'], DT.T_COLOR_TEXT_DEFAULT_DARK, DT.T_COLOR_LINE_PRIMARY_DEFAULT, DT.T_INPUT_COLOR_BG_ACTIVE), status === 'error' && (0, _styledComponents.css)(['&&&{border-color:', ';background:', ';}'], DT.T_COLOR_LINE_ERROR_DARK, DT.T_COLOR_BG_ERROR_LIGHT), disabled && (0, _styledComponents.css)(['box-shadow:none;&,&:hover{color:', ';-webkit-text-fill-color:currentcolor;border-color:', ';background:', ';}', ',', '{color:inherit;}'], DT.T_COLOR_TEXT_DISABLED, DT.T_COLOR_LINE_DISABLED_DARK, DT.T_COLOR_BG_DISABLED_LIGHT, SuffixWrap, PrefixWrap));
};

var TableWrap = exports.TableWrap = _styledComponents2.default.span.withConfig({
    displayName: 'style__TableWrap',
    componentId: 'sc-11j0fsv-2'
})(['display:table;width:100%;']);

var InputWrap = exports.InputWrap = _styledComponents2.default.span.attrs({
    className: prefixCls
}).withConfig({
    displayName: 'style__InputWrap',
    componentId: 'sc-11j0fsv-3'
})(['position:relative;', ';box-sizing:border-box;&.', '{display:block;}', ';input{vertical-align:middle;display:table-cell;box-sizing:border-box;width:100%;padding:0px 8px;margin:0;font-size:inherit;color:inherit;&,&:hover,&:focus{border:none;outline:none;background:none;}}', ';'], _style.inlineBlockWithVerticalMixin, blockCls, function (_ref2) {
    var disabled = _ref2.disabled;
    return disabled && (0, _styledComponents.css)(['&,input,', '{cursor:not-allowed;}'], SearchIcon);
}, themeMixin);

(0, _addDefaultThemeProps2.default)(InputWrap);