'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _groupBy2 = require('lodash/groupBy');

var _groupBy3 = _interopRequireDefault(_groupBy2);

var _filter2 = require('lodash/filter');

var _filter3 = _interopRequireDefault(_filter2);

var _map2 = require('lodash/map');

var _map3 = _interopRequireDefault(_map2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _dec2, _class, _class2, _temp, _initialiseProps;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _Menu = require('../../components/Menu');

var _Menu2 = _interopRequireDefault(_Menu);

var _Button = require('../../components/Button');

var _Button2 = _interopRequireDefault(_Button);

var _Notice = require('../../components/Notice');

var _Notice2 = _interopRequireDefault(_Notice);

var _Input = require('../../components/Input');

var _Input2 = _interopRequireDefault(_Input);

var _SvgIcon = require('../../components/SvgIcon');

var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

var _uncontrolled = require('../../decorators/uncontrolled');

var _uncontrolled2 = _interopRequireDefault(_uncontrolled);

var _localeConsumerDecorator = require('../../components/LocaleProvider/localeConsumerDecorator');

var _localeConsumerDecorator2 = _interopRequireDefault(_localeConsumerDecorator);

var _zh_CN = require('./locale/zh_CN');

var _zh_CN2 = _interopRequireDefault(_zh_CN);

var _style = require('./style');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var noop = function noop() {};

var Shape = {
    /**
     * 自定义顶栏文字，null 时隐藏
     */
    title: _propTypes2.default.node,
    /**
     * 自定义底栏
     */
    footer: _propTypes2.default.node,
    /**
     * 是否显示搜索栏
     */
    search: _propTypes2.default.bool,
    /**
     * 禁用
     */
    disabled: _propTypes2.default.bool
};

var defaultSearchHandle = function defaultSearchHandle(searchValue, item) {
    return (0, _map3.default)(item).join('').indexOf(searchValue) >= 0;
};

var Transfer = (_dec = (0, _uncontrolled2.default)({ valueName: 'selectedKeys' }), _dec2 = (0, _localeConsumerDecorator2.default)({ defaultLocale: _zh_CN2.default, localeName: 'Transfer' }), _dec(_class = _dec2(_class = (_temp = _class2 = function (_PureComponent) {
    _inherits(Transfer, _PureComponent);

    function Transfer(props) {
        _classCallCheck(this, Transfer);

        var _this = _possibleConstructorReturn(this, (Transfer.__proto__ || Object.getPrototypeOf(Transfer)).call(this, props));

        _initialiseProps.call(_this);

        var dataSource = props.dataSource,
            selectedKeys = props.selectedKeys;

        _this.state.dataSourceGroup = _this.groupDataSource(dataSource, selectedKeys);
        return _this;
    }

    _createClass(Transfer, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            if (nextProps.dataSource !== this.props.dataSource || nextProps.selectedKeys !== this.props.selectedKeys) {
                this.setState({
                    dataSourceGroup: this.groupDataSource(nextProps.dataSource, nextProps.selectedKeys)
                });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            /* eslint-disable no-unused-vars */
            var _props = this.props,
                className = _props.className,
                dataSource = _props.dataSource,
                source = _props.source,
                target = _props.target,
                onChange = _props.onChange,
                selectedKeys = _props.selectedKeys,
                search = _props.search,
                disabled = _props.disabled,
                rest = _objectWithoutProperties(_props, ['className', 'dataSource', 'source', 'target', 'onChange', 'selectedKeys', 'search', 'disabled']);
            /* eslint-enable no-unused-vars */


            return _react2.default.createElement(
                _style.TransferWrap,
                _extends({}, rest, { className: (0, _classnames2.default)(_style.prefixCls, className) }),
                this.renderPart('source'),
                this.renderAction(),
                this.renderPart('target')
            );
        }
    }]);

    return Transfer;
}(_react.PureComponent), _class2.propTypes = {
    /**
     * 所有的数据源
     */
    dataSource: _propTypes2.default.array.isRequired,
    /**
     * 自定义渲染列表
     */
    renderList: _propTypes2.default.func.isRequired,
    /**
     * 已选中的数据 key，受控
     */
    selectedKeys: _propTypes2.default.array,
    /**
     * 默认已选中的数据 key，非受控
     */
    defaultSelectedKeys: _propTypes2.default.array,
    /**
     * 选中回调
     */
    onChange: _propTypes2.default.func,
    /**
     * 是否禁用
     */
    disabled: _propTypes2.default.bool,
    /**
     * 搜素配置
     */
    search: _propTypes2.default.bool,
    /**
     * 源数据区域的配置
     */
    source: _propTypes2.default.shape(Shape),
    /**
     * 已选数据区域的配置
     */
    target: _propTypes2.default.shape(Shape),
    /** @ignore */
    locale: _propTypes2.default.object,
    /**
     * @ignore
     */
    className: _propTypes2.default.string
}, _class2.defaultProps = {
    source: {},
    target: {},
    search: true,
    defaultSelectedKeys: [],
    onChange: noop
}, _initialiseProps = function _initialiseProps() {
    var _this2 = this;

    this.state = {
        sourceSelectedKeys: [],
        targetSelectedKeys: [],
        dataSourceGroup: {}
    };

    this.onSelectedChange = function (type, keys) {
        _this2.setState(_defineProperty({}, type + 'SelectedKeys', keys));
    };

    this.onSourceSelectedChange = function (keys) {
        _this2.onSelectedChange('source', keys);
    };

    this.onTargetSelectedChange = function (keys) {
        _this2.onSelectedChange('target', keys);
    };

    this.transfer = function (type) {
        var _state = _this2.state,
            sourceSelectedKeys = _state.sourceSelectedKeys,
            targetSelectedKeys = _state.targetSelectedKeys;
        var _props2 = _this2.props,
            selectedKeys = _props2.selectedKeys,
            onChange = _props2.onChange;

        if (type === 'source') {
            _this2.setState({
                sourceSelectedKeys: []
            });
            onChange([].concat(_toConsumableArray(selectedKeys), _toConsumableArray(sourceSelectedKeys)));
        } else {
            _this2.setState({
                targetSelectedKeys: []
            });
            onChange((0, _filter3.default)(selectedKeys, function (key) {
                return targetSelectedKeys.find(function (_key) {
                    return key === _key;
                }) === undefined;
            }));
        }
    };

    this.handleSearch = function (type, item) {
        var _props3 = _this2.props,
            source = _props3.source,
            target = _props3.target,
            sharedSearch = _props3.search;
        var _state2 = _this2.state,
            sourceSearchValue = _state2.sourceSearchValue,
            targetSearchValue = _state2.targetSearchValue;

        var searchValue = type === 'source' ? sourceSearchValue : targetSearchValue;
        if (!searchValue) return true;
        var props = Object.assign({ search: sharedSearch }, type === 'source' ? source : target);
        var search = props.search;

        if (!search) return true;
        return defaultSearchHandle(searchValue, item);
    };

    this.handleSourceSearch = function (item) {
        return _this2.handleSearch('source', item);
    };

    this.handleTargetSearch = function (item) {
        return _this2.handleSearch('target', item);
    };

    this.onSearch = function (part, v) {
        _this2.setState(_defineProperty({}, part === 'source' ? 'sourceSearchValue' : 'targetSearchValue', v));
    };

    this.onSourceSearch = function (v) {
        _this2.onSearch('source', v);
    };

    this.onTargetSearch = function (v) {
        _this2.onSearch('target', v);
    };

    this.clearSourceSearch = function () {
        _this2.onSourceSearch('');
    };

    this.clearTargetSearch = function () {
        _this2.onTargetSearch('');
    };

    this.renderPart = function (part) {
        var _state3 = _this2.state,
            dataSourceGroup = _state3.dataSourceGroup,
            sourceSelectedKeys = _state3.sourceSelectedKeys,
            targetSelectedKeys = _state3.targetSelectedKeys;
        var _props4 = _this2.props,
            source = _props4.source,
            target = _props4.target,
            sharedSearch = _props4.search,
            sharedDisabled = _props4.disabled;

        var partDataSource = dataSourceGroup[part] || [];
        var partProps = Object.assign({
            search: sharedSearch,
            disabled: sharedDisabled
        }, part === 'source' ? source : target);
        var footer = partProps.footer,
            title = partProps.title,
            search = partProps.search,
            disabled = partProps.disabled;

        var selectedKeys = part === 'source' ? sourceSelectedKeys : targetSelectedKeys;
        var handleSearch = part === 'source' ? _this2.handleSourceSearch : _this2.handleTargetSearch;
        var onSelectedChange = part === 'source' ? _this2.onSourceSelectedChange : _this2.onTargetSelectedChange;
        var onSearch = part === 'source' ? _this2.onSourceSearch : _this2.onTargetSearch;
        return _react2.default.createElement(
            'div',
            { className: (0, _classnames2.default)(_style.partWrapCls, disabled && _style.disabledCls) },
            title === null ? null : _react2.default.createElement(
                'h3',
                { className: _style.titleCls },
                title ? title : { source: '可选', target: '已选' }[part]
            ),
            _react2.default.createElement(
                'div',
                { className: _style.partContentCls },
                search && _react2.default.createElement(
                    'div',
                    { className: _style.searchCls },
                    _react2.default.createElement(_Input2.default.Search, { block: true, onSearch: onSearch, disabled: disabled })
                ),
                _this2.renderContent({
                    part: part,
                    dataSource: partDataSource,
                    selectedKeys: selectedKeys,
                    onChange: onSelectedChange,
                    handleSearch: handleSearch,
                    disabled: disabled
                }),
                footer && _react2.default.createElement(
                    'div',
                    { className: _style.footerCls },
                    footer
                )
            )
        );
    };

    this.renderEmptySourceTip = function (disabled) {
        var locale = _this2.props.locale;

        return _react2.default.createElement(
            'div',
            { className: _style.tipWrapCls },
            _react2.default.createElement(
                _Notice2.default,
                { closable: false, styleType: disabled ? 'disabled' : 'default', icon: null },
                locale.emptySourceTip
            )
        );
    };

    this.renderEmptyTargetTip = function (disabled) {
        var locale = _this2.props.locale;

        return _react2.default.createElement(
            'div',
            { className: _style.tipWrapCls },
            _react2.default.createElement(
                _Notice2.default,
                { closable: false, styleType: disabled ? 'disabled' : 'default' },
                locale.emptyTargetTip
            )
        );
    };

    this.renderEmptySearchTip = function (part) {
        var locale = _this2.props.locale;

        return _react2.default.createElement(
            'div',
            { className: _style.tipWrapCls },
            _react2.default.createElement(
                _Notice2.default,
                { closable: false, styleType: 'warning' },
                _react2.default.createElement(
                    'span',
                    null,
                    locale.emptySearchTip
                ),
                _react2.default.createElement(
                    'span',
                    {
                        className: _style.searchClearBtnCls,
                        onClick: part === 'source' ? _this2.clearSourceSearch : _this2.clearTargetSearch
                    },
                    locale.resetSearch
                )
            )
        );
    };

    this.renderContent = function (_ref) {
        var part = _ref.part,
            dataSource = _ref.dataSource,
            selectedKeys = _ref.selectedKeys,
            onChange = _ref.onChange,
            handleSearch = _ref.handleSearch,
            disabled = _ref.disabled;

        if (!dataSource.length) {
            return part === 'source' ? _this2.renderEmptySourceTip(disabled) : _this2.renderEmptyTargetTip(disabled);
        }
        var finalDataSource = dataSource.filter(function (item) {
            return handleSearch(item);
        });
        if (!finalDataSource.length) {
            return _this2.renderEmptySearchTip(part);
        }
        var renderList = _this2.props.renderList;

        return _react2.default.createElement(
            'div',
            { className: _style.listWrapCls },
            renderList({
                dataSource: finalDataSource,
                selectedKeys: selectedKeys,
                disabled: disabled,
                onChange: onChange
            })
        );
    };

    this.renderAction = function () {
        var disabled = _this2.props.disabled;
        var _state4 = _this2.state,
            sourceSelectedKeys = _state4.sourceSelectedKeys,
            targetSelectedKeys = _state4.targetSelectedKeys;

        return _react2.default.createElement(
            'div',
            { className: _style.actionWrapCls },
            _react2.default.createElement(
                'div',
                { className: _style.actionCls },
                _react2.default.createElement(
                    _Button2.default,
                    {
                        styleType: 'primary',
                        shape: 'square',
                        disabled: disabled || !sourceSelectedKeys.length,
                        onClick: function onClick() {
                            return _this2.transfer('source');
                        }
                    },
                    _react2.default.createElement(_SvgIcon2.default, { type: 'rightArrow' })
                )
            ),
            _react2.default.createElement(
                'div',
                { className: _style.actionCls },
                _react2.default.createElement(
                    _Button2.default,
                    {
                        styleType: 'primary',
                        shape: 'square',
                        disabled: disabled || !targetSelectedKeys.length,
                        onClick: function onClick() {
                            return _this2.transfer('target');
                        }
                    },
                    _react2.default.createElement(_SvgIcon2.default, { type: 'leftArrow' })
                )
            )
        );
    };

    this.groupDataSource = function () {
        var dataSource = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var selectedKeys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

        return (0, _groupBy3.default)(dataSource, function (item) {
            var key = item.key;

            return selectedKeys.find(function (selectedKey) {
                return selectedKey === key;
            }) !== undefined ? 'target' : 'source';
        });
    };
}, _temp)) || _class) || _class);
exports.default = Transfer;