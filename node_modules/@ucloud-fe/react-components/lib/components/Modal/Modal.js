'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _isFunction2 = require('lodash/isFunction');

var _isFunction3 = _interopRequireDefault(_isFunction2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _class, _class2, _temp2;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Button = require('../../components/Button');

var _Button2 = _interopRequireDefault(_Button);

var _Icon = require('../../components/Icon');

var _Icon2 = _interopRequireDefault(_Icon);

var _globalAnimation = require('../../style/globalAnimation');

var _localeConsumerDecorator = require('../../components/LocaleProvider/localeConsumerDecorator');

var _localeConsumerDecorator2 = _interopRequireDefault(_localeConsumerDecorator);

var _ContainerContext = require('../../components/Popover/ContainerContext');

var _style = require('./style');

var _zh_CN = require('./locale/zh_CN');

var _zh_CN2 = _interopRequireDefault(_zh_CN);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Size = ['sm', 'md', 'lg'];

var Modal = (_dec = (0, _localeConsumerDecorator2.default)({ defaultLocale: _zh_CN2.default, localeName: 'Modal', requireRuntimeLocale: true }), _dec(_class = (_temp2 = _class2 = function (_Component) {
    _inherits(Modal, _Component);

    function Modal() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, Modal);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Modal.__proto__ || Object.getPrototypeOf(Modal)).call.apply(_ref, [this].concat(args))), _this), _this.getDefaultFooter = function () {
            var _this$props = _this.props,
                onOk = _this$props.onOk,
                onClose = _this$props.onClose,
                locale = _this$props.locale;

            return [_react2.default.createElement(
                _Button2.default,
                { size: 'lg', key: 'cancel', onClick: onClose, style: { marginRight: 8 } },
                locale.cancel
            ), _react2.default.createElement(
                _Button2.default,
                { size: 'lg', key: 'confirm', onClick: onOk, styleType: 'primary' },
                locale.confirm
            )];
        }, _this.savePopupContainer = function (ref) {
            _this.popupContainer = ref;
        }, _this.getPopupContainer = function () {
            return _this.popupContainer && _this.popupContainer;
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Modal, [{
        key: 'render',
        value: function render() {
            var _props = this.props,
                title = _props.title,
                _props$footer = _props.footer,
                footer = _props$footer === undefined ? this.getDefaultFooter() : _props$footer,
                maskAnimation = _props.maskAnimation,
                animation = _props.animation,
                style = _props.style,
                size = _props.size,
                closable = _props.closable,
                className = _props.className,
                onClose = _props.onClose,
                locale = _props.locale,
                children = _props.children,
                rest = _objectWithoutProperties(_props, ['title', 'footer', 'maskAnimation', 'animation', 'style', 'size', 'closable', 'className', 'onClose', 'locale', 'children']);

            var width = {
                sm: 300,
                md: 700,
                lg: 800
            }[size];
            return _react2.default.createElement(
                _ContainerContext.Provider,
                { value: {} },
                _react2.default.createElement(
                    _style.ModalWrap,
                    _extends({}, rest, {
                        trueClassName: className,
                        style: Object.assign({
                            width: width
                        }, style),
                        prefixCls: _style.prefixCls,
                        closable: false,
                        maskTransitionName: _globalAnimation.animationPrefixCls + '-' + maskAnimation,
                        transitionName: _globalAnimation.animationPrefixCls + '-' + animation,
                        onClose: onClose,
                        title: [_react2.default.createElement(
                            'div',
                            { key: 'content', className: _style.prefixCls + '-title-content' },
                            title
                        ), closable && _react2.default.createElement(_Icon2.default, { key: 'close', type: 'circle-cross', className: _style.prefixCls + '-close', onClick: onClose })],
                        footer: (0, _isFunction3.default)(footer) ? footer({ locale: locale }) : footer
                    }),
                    _react2.default.createElement('div', { ref: this.savePopupContainer }),
                    children
                )
            );
        }
    }]);

    return Modal;
}(_react.Component), _class2.propTypes = {
    /** @ignore */
    children: _propTypes2.default.node.isRequired,
    /** 头部内容 */
    title: _propTypes2.default.node,
    /** 底部内容 */
    footer: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.func]),
    /** 显示与否 */
    visible: _propTypes2.default.bool,
    /** 弹窗尺寸 */
    size: _propTypes2.default.oneOf(Size),
    /** 弹窗的z-index */
    zIndex: _propTypes2.default.number,
    /** 是否有关闭按钮 */
    closable: _propTypes2.default.bool,
    /** 是否有遮罩 */
    mask: _propTypes2.default.bool,
    /** 是否可以点击遮罩关闭 */
    maskClosable: _propTypes2.default.bool,
    /** 是否可以esc关闭 */
    keyboard: _propTypes2.default.bool,
    /** 点击关闭按钮、默认取消按钮、遮罩进行关闭时的回调 */
    onClose: _propTypes2.default.func,
    /** 点击默认的确认按钮时的回调 */
    onOk: _propTypes2.default.func,
    /** 关闭后的回调 */
    afterClose: _propTypes2.default.func,
    /** 关闭后是否自动销毁 */
    destroyOnClose: _propTypes2.default.bool,
    /** 遮罩层的动画 */
    maskAnimation: _propTypes2.default.string,
    /** 弹窗的动画 */
    animation: _propTypes2.default.string,
    /** 弹窗部分的类名 */
    className: _propTypes2.default.string,
    /** 弹窗包裹容器的类名 */
    wrapClassName: _propTypes2.default.string,
    /** 弹窗的样式 */
    style: _propTypes2.default.object,
    /** 弹窗的内容部分的样式 */
    bodyStyle: _propTypes2.default.object,
    /** 遮罩层的样式 */
    maskStyle: _propTypes2.default.object,
    /** @ignore */
    locale: _propTypes2.default.object
}, _class2.defaultProps = {
    maskAnimation: 'fade',
    animation: 'fade',
    size: 'md',
    zIndex: 1010,
    closable: true,
    mask: true
}, _temp2)) || _class);
exports.default = Modal;

Modal.Size = Size;