'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp2;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _style = require('./style');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var STATUS = ['current', 'before', 'after', 'loading', 'error'];

var StepIcon = (_temp2 = _class = function (_PureComponent) {
    _inherits(StepIcon, _PureComponent);

    function StepIcon() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, StepIcon);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = StepIcon.__proto__ || Object.getPrototypeOf(StepIcon)).call.apply(_ref, [this].concat(args))), _this), _this.renderContent = function (status, content) {
            switch (status) {
                case 'before':
                    return _react2.default.createElement(_style.Icon, { type: 'tick' });
                case 'after':
                case 'current':
                    return _react2.default.createElement(
                        _style.StepCountWrapper,
                        null,
                        content
                    );
                case 'loading':
                    return _react2.default.createElement(_style.Icon, { type: 'ringLoading', spin: true });
                case 'error':
                    return _react2.default.createElement(_style.Icon, { type: 'cross' });
            }
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(StepIcon, [{
        key: 'render',
        value: function render() {
            var _props = this.props,
                step = _props.step,
                status = _props.status,
                rest = _objectWithoutProperties(_props, ['step', 'status']);

            return _react2.default.createElement(
                _style.IconWrapper,
                _extends({ status: status }, rest),
                this.renderContent(status, step)
            );
        }
    }]);

    return StepIcon;
}(_react.PureComponent), _class.propTypes = {
    /** 指定步骤数 */
    step: _propTypes2.default.node,
    /** 状态 */
    status: _propTypes2.default.oneOf(STATUS)
}, _temp2);
exports.default = StepIcon;