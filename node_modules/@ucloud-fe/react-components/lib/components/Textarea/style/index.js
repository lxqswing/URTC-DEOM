'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TextareaWrap = undefined;

var _styledComponents = require('styled-components');

var _styledComponents2 = _interopRequireDefault(_styledComponents);

var _addDefaultThemeProps = require('../../../components/ThemeProvider/addDefaultThemeProps');

var _addDefaultThemeProps2 = _interopRequireDefault(_addDefaultThemeProps);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var themeMixin = function themeMixin(_ref) {
    var _ref$theme = _ref.theme,
        DT = _ref$theme.designTokens,
        fontSize = _ref$theme.fontSize;
    return (0, _styledComponents.css)(['font-size:', ';color:', ';border:1px solid ', ';background:', ';&:hover,&:focus{border-color:', ';}&:focus{border-color:', ';}&::placeholder{opacity:1;color:', ';}&[disabled]{color:', ';border-color:', ';background:', ';}'], fontSize, DT.T_COLOR_TEXT_DEFAULT_DARK, DT.T_COLOR_LINE_DEFAULT_DARK, DT.T_COLOR_BG_DEFAULT_NORMAL, DT.T_COLOR_LINE_PRIMARY_HOVER, DT.T_COLOR_LINE_PRIMARY_DEFAULT, DT.T_COLOR_TEXT_REMARK_LIGHT, DT.T_COLOR_TEXT_DISABLED, DT.T_COLOR_LINE_DISABLED_DARK, DT.T_COLOR_BG_DISABLED_LIGHT);
};

var TextareaWrap = exports.TextareaWrap = _styledComponents2.default.textarea.withConfig({
    displayName: 'style__TextareaWrap',
    componentId: 'sc-1qleihq-0'
})(['display:block;box-sizing:border-box;width:100%;padding:4px 8px;border-radius:2px;line-height:1.5;min-height:', 'px;resize:vertical;outline:none;', ';'], 12 * 1.5 + (4 + 1) * 2, themeMixin);
(0, _addDefaultThemeProps2.default)(TextareaWrap);