'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getValidDate = exports.isDateDisabled = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var isDateDisabled = function isDateDisabled(date, value, rules) {
    date = (0, _moment2.default)(date);
    if (!rules) {
        return false;
    }
    var range = rules.range,
        custom = rules.custom;

    if (range) {
        var _range = _slicedToArray(range, 2),
            start = _range[0],
            end = _range[1];

        if (start != null && (0, _moment2.default)(date).set({ hour: 23, minute: 59, second: 59 }) < start || end != null && (0, _moment2.default)(date).set({ hour: 0, minute: 0, second: 0 }) > end) {
            return true;
        }
    }
    if (custom) {
        return custom(date, value);
    }
};

var getValidDate = function getValidDate(date, rules) {
    date = (0, _moment2.default)(date);
    if (!rules) {
        return date;
    }
    var range = rules.range;

    if (range) {
        var _range2 = _slicedToArray(range, 2),
            start = _range2[0],
            end = _range2[1];

        if (start != null && date < start) {
            return (0, _moment2.default)(start);
        }
        if (end != null && date > end) {
            return (0, _moment2.default)(end);
        }
    }
    return date;
};

exports.isDateDisabled = isDateDisabled;
exports.getValidDate = getValidDate;