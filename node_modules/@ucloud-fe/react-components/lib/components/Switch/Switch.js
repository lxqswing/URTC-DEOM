'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _class, _class2, _temp2;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _style = require('./style');

var _uncontrolled = require('../../decorators/uncontrolled');

var _uncontrolled2 = _interopRequireDefault(_uncontrolled);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Size = ['sm', 'md', 'lg'];

var Switch = (_dec = (0, _uncontrolled2.default)({ valueName: 'checked' }), _dec(_class = (_temp2 = _class2 = function (_Component) {
    _inherits(Switch, _Component);

    function Switch() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, Switch);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Switch.__proto__ || Object.getPrototypeOf(Switch)).call.apply(_ref, [this].concat(args))), _this), _this.onClick = function () {
            var _this$props = _this.props,
                checked = _this$props.checked,
                disabled = _this$props.disabled,
                onChange = _this$props.onChange;

            if (disabled) return;
            onChange(!checked);
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Switch, [{
        key: 'render',
        value: function render() {
            // eslint-disable-next-line no-unused-vars
            var _props = this.props,
                checked = _props.checked,
                disabled = _props.disabled,
                defaultChecked = _props.defaultChecked,
                onChange = _props.onChange,
                size = _props.size,
                onText = _props.onText,
                offText = _props.offText,
                rest = _objectWithoutProperties(_props, ['checked', 'disabled', 'defaultChecked', 'onChange', 'size', 'onText', 'offText']);

            return _react2.default.createElement(
                _style.SwitchWrap,
                _extends({}, rest, { checked: checked, disabled: disabled, size: size, onClick: this.onClick }),
                _react2.default.createElement(
                    _style.Inner,
                    null,
                    _react2.default.createElement(
                        _style.OnText,
                        null,
                        onText
                    ),
                    _react2.default.createElement(
                        _style.OffText,
                        null,
                        offText
                    ),
                    _react2.default.createElement(
                        _style.ButtonWrap,
                        null,
                        _react2.default.createElement(_style.Line, null)
                    )
                )
            );
        }
    }]);

    return Switch;
}(_react.Component), _class2.propTypes = {
    /** 是否选中 */
    checked: _propTypes2.default.bool,
    /** 默认选中状态 */
    defaultChecked: _propTypes2.default.bool,
    /** 选中状态改变时的回调 */
    onChange: _propTypes2.default.func,
    /** 是否禁用 */
    disabled: _propTypes2.default.bool,
    /** 尺寸 */
    size: _propTypes2.default.oneOf(Size),
    /** 打开的文字 */
    onText: _propTypes2.default.node,
    /** 关闭的文字 */
    offText: _propTypes2.default.node
}, _class2.defaultProps = {
    onChange: function onChange() {},
    size: 'md',
    onText: 'ON',
    offText: 'OFF'
}, _temp2)) || _class);

Switch.Size = Size;
exports.default = Switch;