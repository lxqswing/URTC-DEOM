'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.animationName = exports.animationDuration = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactTransitionGroup = require('react-transition-group');

var _style = require('./style');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var animationDuration = exports.animationDuration = 500;
var animationName = exports.animationName = 'uc-fe-animation-fade';

var Loading = (_temp = _class = function (_Component) {
    _inherits(Loading, _Component);

    function Loading() {
        _classCallCheck(this, Loading);

        return _possibleConstructorReturn(this, (Loading.__proto__ || Object.getPrototypeOf(Loading)).apply(this, arguments));
    }

    _createClass(Loading, [{
        key: 'render',
        value: function render() {
            var _props = this.props,
                loading = _props.loading,
                children = _props.children,
                indicator = _props.indicator,
                tip = _props.tip,
                maskStyle = _props.maskStyle,
                maskClassName = _props.maskClassName,
                rest = _objectWithoutProperties(_props, ['loading', 'children', 'indicator', 'tip', 'maskStyle', 'maskClassName']);

            return _react2.default.createElement(
                _style.LoadingWrap,
                rest,
                children,
                _react2.default.createElement(
                    _reactTransitionGroup.CSSTransition,
                    { 'in': loading, unmountOnExit: true, classNames: animationName, timeout: animationDuration },
                    _react2.default.createElement(
                        _style.Mask,
                        { style: maskStyle, maskClassName: maskClassName },
                        _react2.default.createElement(
                            _style.IndicatorWrap,
                            null,
                            _react2.default.createElement(
                                'div',
                                null,
                                indicator,
                                tip && _react2.default.createElement(
                                    _style.TipWrap,
                                    null,
                                    tip
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);

    return Loading;
}(_react.Component), _class.propTypes = {
    /** 是否加载 */
    loading: _propTypes2.default.bool,
    /** 加载指示符 */
    indicator: _propTypes2.default.node,
    /** 文字提示 */
    tip: _propTypes2.default.node,
    /** 遮罩层样式 */
    maskStyle: _propTypes2.default.object,
    /** 遮罩层类名 */
    maskClassName: _propTypes2.default.string,
    /** @ignore */
    children: _propTypes2.default.node
}, _class.defaultProps = {
    loading: false,
    indicator: _react2.default.createElement(_style.LoadingIcon, { type: 'loading', spin: true })
}, _temp);
exports.default = Loading;