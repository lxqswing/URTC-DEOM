'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TagGroupWrapper = exports.IconTagWrapper = exports.IconTag = exports.ContentWrapper = exports.TagWrapper = exports.PrefixIconWrapper = exports.PrefixIcon = exports.CloseIconWrapper = exports.CloseIcon = exports.styleMap = exports.prefixCls = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _styledComponents = require('styled-components');

var _styledComponents2 = _interopRequireDefault(_styledComponents);

var _config = require('../../../config');

var _config2 = _interopRequireDefault(_config);

var _SvgIcon = require('../../../components/SvgIcon');

var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

var _Icon = require('../../../components/Icon');

var _Icon2 = _interopRequireDefault(_Icon);

var _addDefaultThemeProps = require('../../../components/ThemeProvider/addDefaultThemeProps');

var _addDefaultThemeProps2 = _interopRequireDefault(_addDefaultThemeProps);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _prefixCls = _config2.default.prefixCls;
var prefixCls = exports.prefixCls = _prefixCls + '-tag';

var styleMap = exports.styleMap = {
    default: {
        color: 'T_COLOR_TEXT_DEFAULT_LIGHT',
        border: 'T_COLOR_LINE_NOTICE_LIGHT',
        bg: 'T_COLOR_BG_NOTICE_LIGHT',
        iconHoverBG: 'T_COLOR_BG_NOTICE_DARK'
    },
    green: {
        color: 'T_COLOR_TEXT_SUCCESS',
        border: 'T_COLOR_LINE_SUCCESS_LIGHT',
        bg: 'T_COLOR_BG_SUCCESS_LIGHT',
        iconHoverBG: 'T_COLOR_BG_SUCCESS_DARK'
    },
    yellow: {
        color: 'T_COLOR_TEXT_WARNING',
        border: 'T_COLOR_LINE_WARNING_LIGHT',
        bg: 'T_COLOR_BG_WARNING_LIGHT',
        iconHoverBG: 'T_COLOR_BG_WARNING_DARK'
    },
    red: {
        color: 'T_COLOR_TEXT_ERROR',
        border: 'T_COLOR_LINE_ERROR_LIGHT',
        bg: 'T_COLOR_BG_ERROR_LIGHT',
        iconHoverBG: 'T_COLOR_BG_ERROR_DARK'
    },
    primary: {
        color: 'T_COLOR_TEXT_SYSTEM_WHITE',
        border: 'T_COLOR_LINE_PRIMARY_DEFAULT',
        bg: 'T_COLOR_BG_PRIMARY_1',
        iconHoverBG: 'T_COLOR_BG_PRIMARY_2'
    },
    purple: {
        color: 'T_COLOR_LEGEND_PURPLE_5',
        border: 'T_COLOR_LEGEND_PURPLE_2',
        bg: 'T_COLOR_LEGEND_PURPLE_1',
        iconHoverBG: 'T_COLOR_LEGEND_PURPLE_5'
    },
    lightblue: {
        color: 'T_COLOR_LEGEND_LIGHTBLUE_5',
        border: 'T_COLOR_LEGEND_LIGHTBLUE_2',
        bg: 'T_COLOR_LEGEND_LIGHTBLUE_1',
        iconHoverBG: 'T_COLOR_LEGEND_LIGHTBLUE_5'
    },
    blue: {
        color: 'T_COLOR_LEGEND_BLUE_5',
        border: 'T_COLOR_LEGEND_BLUE_2',
        bg: 'T_COLOR_LEGEND_BLUE_1',
        iconHoverBG: 'T_COLOR_LEGEND_BLUE_5'
    },
    orange: {
        color: 'T_COLOR_LEGEND_ORANGE_5',
        border: 'T_COLOR_LEGEND_ORANGE_2',
        bg: 'T_COLOR_LEGEND_ORANGE_1',
        iconHoverBG: 'T_COLOR_LEGEND_ORANGE_5'
    },
    cyan: {
        color: 'T_COLOR_LEGEND_CYAN_5',
        border: 'T_COLOR_LEGEND_CYAN_2',
        bg: 'T_COLOR_LEGEND_CYAN_1',
        iconHoverBG: 'T_COLOR_LEGEND_CYAN_5'
    }
};

[['success', 'green'], ['warning', 'yellow'], ['error', 'red']].map(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2),
        styleType = _ref2[0],
        color = _ref2[1];

    styleMap[styleType] = styleMap[color];
});

// eslint-disable-next-line no-unused-vars
var CloseIcon = exports.CloseIcon = (0, _styledComponents2.default)(_SvgIcon2.default).withConfig({
    displayName: 'style__CloseIcon',
    componentId: 'sc-16gjvsq-0'
})(['']);

var CloseIconWrapper = exports.CloseIconWrapper = _styledComponents2.default.span.withConfig({
    displayName: 'style__CloseIconWrapper',
    componentId: 'sc-16gjvsq-1'
})(['']);

var PrefixIcon = exports.PrefixIcon = (0, _styledComponents2.default)(_Icon2.default).withConfig({
    displayName: 'style__PrefixIcon',
    componentId: 'sc-16gjvsq-2'
})(['']);
var PrefixIconWrapper = exports.PrefixIconWrapper = _styledComponents2.default.span.withConfig({
    displayName: 'style__PrefixIconWrapper',
    componentId: 'sc-16gjvsq-3'
})(['']);

var getColorMap = function getColorMap(styleType, disabled) {
    return disabled ? {
        color: 'T_COLOR_TEXT_DISABLED',
        border: 'T_COLOR_LINE_DISABLED_LIGHT',
        bg: 'T_COLOR_BG_DISABLED_LIGHT',
        iconHoverBG: 'T_COLOR_BG_DISABLED_LIGHT'
    } : styleMap[styleType];
};

var TagWrapper = exports.TagWrapper = _styledComponents2.default.span.withConfig({
    displayName: 'style__TagWrapper',
    componentId: 'sc-16gjvsq-4'
})(function (_ref3) {
    var _ref3$styleType = _ref3.styleType,
        styleType = _ref3$styleType === undefined ? 'default' : _ref3$styleType,
        disabled = _ref3.disabled,
        DT = _ref3.theme.designTokens;

    var colorMap = getColorMap(styleType, disabled);
    return (0, _styledComponents.css)(['box-sizing:border-box;height:20px;padding-left:8px;display:inline-block;border-radius:2px;color:', ';border:1px solid ', ';background:', ';::after{background:', ';}', '{margin-right:4px;vertical-align:middle;line-height:18px;}', '{margin-right:8px;vertical-align:middle;line-height:18px;}', '{display:inline-block;width:18px;height:18px;line-height:18px;font-size:0;vertical-align:middle;text-align:center;', ';color:', ';', '{fill:', ';}', ';}'], DT[colorMap.color], DT[colorMap.border], DT[colorMap.bg], DT[colorMap.border], PrefixIconWrapper, ContentWrapper, CloseIconWrapper, !disabled && 'cursor: pointer', DT[colorMap.color], CloseIcon, DT[colorMap.color], !disabled && (0, _styledComponents.css)([':hover{background:', ';', '{fill:', ';}}'], DT[colorMap.iconHoverBG], CloseIcon, DT.T_COLOR_TEXT_SYSTEM_WHITE));
});

var ContentWrapper = exports.ContentWrapper = _styledComponents2.default.span.withConfig({
    displayName: 'style__ContentWrapper',
    componentId: 'sc-16gjvsq-5'
})(['']);

var IconTag = exports.IconTag = (0, _styledComponents2.default)(_Icon2.default).withConfig({
    displayName: 'style__IconTag',
    componentId: 'sc-16gjvsq-6'
})(['']);
var IconTagWrapper = exports.IconTagWrapper = _styledComponents2.default.span.withConfig({
    displayName: 'style__IconTagWrapper',
    componentId: 'sc-16gjvsq-7'
})(function (_ref4) {
    var _ref4$styleType = _ref4.styleType,
        styleType = _ref4$styleType === undefined ? 'default' : _ref4$styleType,
        DT = _ref4.theme.designTokens;

    var colorMap = getColorMap(styleType);
    return (0, _styledComponents.css)(['box-sizing:border-box;height:20px;width:20px;line-height:18px;text-align:center;display:inline-block;border-radius:2px;position:relative;color:', ';border:1px solid ', ';background:', ';::after{background:', ';position:absolute;right:0;}'], DT[colorMap.color], DT[colorMap.border], DT[colorMap.bg], DT[colorMap.border]);
});

var TagGroupWrapper = exports.TagGroupWrapper = _styledComponents2.default.div.withConfig({
    displayName: 'style__TagGroupWrapper',
    componentId: 'sc-16gjvsq-8'
})(function (_ref5) {
    var compact = _ref5.compact;
    return compact ? (0, _styledComponents.css)(['margin-bottom:-4px;', ',', '{border-left-style:none;border-right-style:none;border-radius:0;vertical-align:middle;margin-bottom:4px;:first-child{border-left-style:solid;border-top-left-radius:2px;border-bottom-left-radius:2px;}:last-child{border-right-style:solid;border-top-right-radius:2px;border-bottom-right-radius:2px;::after{content:none;}}::after{content:\' \';height:8px;width:1px;margin:5px 0;display:inline-block;vertical-align:middle;}}', '{padding-left:4px;:first-child{padding-left:8px;}', '{margin-right:4px;}:last-child{', '{margin-right:8px;}}}'], TagWrapper, IconTagWrapper, TagWrapper, ContentWrapper, ContentWrapper) : (0, _styledComponents.css)(['margin-bottom:-4px;', ',', '{margin-right:4px;margin-bottom:4px;vertical-align:middle;}'], TagWrapper, IconTagWrapper);
});

(0, _addDefaultThemeProps2.default)(TagWrapper, CloseIcon, IconTagWrapper);