'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.generateTheme = exports.extend = undefined;

var _omit2 = require('lodash/omit');

var _omit3 = _interopRequireDefault(_omit2);

var _keys2 = require('lodash/keys');

var _keys3 = _interopRequireDefault(_keys2);

var _mapValues2 = require('lodash/mapValues');

var _mapValues3 = _interopRequireDefault(_mapValues2);

var _pick2 = require('lodash/pick');

var _pick3 = _interopRequireDefault(_pick2);

var _isObject2 = require('lodash/isObject');

var _isObject3 = _interopRequireDefault(_isObject2);

var _each2 = require('lodash/each');

var _each3 = _interopRequireDefault(_each2);

var _color = require('./color');

var _designTokens = require('./designTokens');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultSizeTheme = {
    // default font-size
    fontSize: '12px',
    // font-size of title
    titleFontSize: '14px',
    // height of size (px)
    Height: {
        sm: '24px',
        md: '28px',
        lg: '32px'
    },
    // padding of size (px)
    Padding: {
        sm: '8px',
        md: '8px',
        lg: '12px'
    }
};

var defaultMaterialVars = {
    primaryBoxShadow: '0 1px 5px 0 rgba(21,56,195,.12), 0 2px 2px 0 rgba(8, 155, 140, 0.24), 0 3px 1px -3px rgba(58, 96, 245,.34)',
    primaryBoxShadowActive: '0 1px 10px 0 rgba(21,56,195,.12), 0 2px 4px -1px rgba(21,56,195,.2), 0 4px 5px 0 rgba(21,56,195,.14)',
    whiteBoxShadow: '0 -1px 0 0 rgba(223, 224, 241, 0.5), 0 1px 0 0 rgba(223,224,241,.3), 0 1px 1px 0 rgba(162,166,191,.5), 0 2px 4px 0 rgba(228,229,242,.6)',
    whiteBoxShadowActive: '0 1px 10px 0 rgba(162,166,191,.12), 0 2px 4px -1px rgba(162,166,191,.2), 0 4px 5px 0 rgba(162,166,191,.14)',
    innerShadow: 'inset 0 1px 3px 0 #dedeef, inset 0 0px 2px 0 #f6f6fb',
    primaryLinearGradient: 'linear-gradient(135deg,#5c8af7,#385ef5)',
    primaryLinearGradientActive: 'linear-gradient(135deg,#5e95fb,#3a72f9)',
    transitionUp: '.22s cubic-bezier(.4,0,.2,1)',
    transitionDown: '.18s cubic-bezier(.4,0,.2,1)',
    transitionFlat: '.16s cubic-bezier(.4,0,.2,1)'
};

var componentThemeGeneratorMap = {};

var extend = exports.extend = function extend(source, target) {
    var cloneSource = JSON.parse(JSON.stringify(source));
    var _extend = function _extend(source, target) {
        (0, _each3.default)(target, function (v, k) {
            if ((0, _isObject3.default)(v) && (0, _isObject3.default)(source[k])) {
                source[k] = _extend(source[k], v);
            } else {
                source[k] = v;
            }
        });
        return source;
    };
    return _extend(cloneSource, target);
};

var generateTheme = exports.generateTheme = function generateTheme() {
    var originTheme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var originDesignTokens = originTheme.designTokens;

    var _generateColorTheme = (0, _color.generateColorTheme)(originTheme.colorList),
        colorList = _generateColorTheme.colorList,
        colorMap = _generateColorTheme.colorMap;

    var sizeTheme = (0, _pick3.default)(originTheme, ['fontSize', 'titleFontSize', 'Height', 'Padding']);
    var materialVars = Object.assign({}, defaultMaterialVars, originTheme.materialVars);

    var theme = Object.assign({
        colorList: colorList,
        colorMap: colorMap,
        TColorList: _color.TColorList,
        TColorMap: _color.TColorMap
    }, defaultSizeTheme, sizeTheme, {
        materialVars: materialVars,
        designTokens: Object.assign({}, _designTokens.designTokens, originDesignTokens)
    });
    theme.HeightNumber = (0, _mapValues3.default)(theme.Height, function (v) {
        return +v.replace('px', '');
    });
    theme.PaddingNumber = (0, _mapValues3.default)(theme.Padding, function (v) {
        return +v.replace('px', '');
    });

    var componentNames = (0, _keys3.default)(componentThemeGeneratorMap);
    theme = extend(theme, (0, _omit3.default)(originTheme, componentNames));

    var componentTheme = (0, _mapValues3.default)(componentThemeGeneratorMap, function (componentThemeGenerator) {
        return componentThemeGenerator(theme);
    });

    return extend(Object.assign({}, theme, componentTheme), (0, _pick3.default)(originTheme, componentNames));
};

var defaultTheme = generateTheme({ colorList: _color.defaultColorList });

exports.default = defaultTheme;