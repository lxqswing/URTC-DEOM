'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _class, _class2, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _Popover = require('../../components/Popover');

var _Popover2 = _interopRequireDefault(_Popover);

var _placements = require('../../components/Popover/placements');

var _Collapse = require('../../components/Collapse');

var _Collapse2 = _interopRequireDefault(_Collapse);

var _localeConsumerDecorator = require('../../components/LocaleProvider/localeConsumerDecorator');

var _localeConsumerDecorator2 = _interopRequireDefault(_localeConsumerDecorator);

var _Checkbox = require('../../components/Checkbox');

var _Checkbox2 = _interopRequireDefault(_Checkbox);

var _style = require('./style');

var _zh_CN = require('./locale/zh_CN');

var _zh_CN2 = _interopRequireDefault(_zh_CN);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var placements = (0, _placements.getPlacements)(0);

var SubMenu = (_dec = (0, _localeConsumerDecorator2.default)({ defaultLocale: _zh_CN2.default, localeName: 'Menu' }), _dec(_class = (_temp = _class2 = function (_Component) {
    _inherits(SubMenu, _Component);

    function SubMenu() {
        _classCallCheck(this, SubMenu);

        return _possibleConstructorReturn(this, (SubMenu.__proto__ || Object.getPrototypeOf(SubMenu)).apply(this, arguments));
    }

    _createClass(SubMenu, [{
        key: 'render',
        value: function render() {
            var _props = this.props,
                _title = _props.title,
                styleType = _props.styleType,
                subMenuKey = _props.subMenuKey,
                uid = _props.uid,
                multiple = _props.multiple,
                allSelectedStatus = _props.allSelectedStatus,
                onMultipleSelect = _props.onMultipleSelect,
                renderChildren = _props.renderChildren,
                children = _props.children,
                locale = _props.locale,
                className = _props.className,
                disabled = _props.disabled;

            var selectAllCheckbox = multiple && _react2.default.createElement(
                'div',
                { className: (0, _classnames2.default)(_style.selectallWrapCls, disabled && _style.disabledCls) },
                _react2.default.createElement(
                    _Checkbox2.default,
                    {
                        size: 'lg',
                        className: _style.checkboxCls,
                        checked: allSelectedStatus === 'ALL',
                        indeterminate: allSelectedStatus === 'PART',
                        onChange: function onChange(checked) {
                            return onMultipleSelect(checked, uid);
                        },
                        disabled: disabled
                    },
                    locale.selectAll
                )
            );
            return styleType === 'collapse' ? _react2.default.createElement(
                _Collapse2.default.Panel,
                {
                    className: (0, _classnames2.default)(_style.collapseWrapCls, className),
                    title: function title(_ref) {
                        var open = _ref.open;
                        return _react2.default.createElement(
                            'div',
                            { className: (0, _classnames2.default)(_style.collapseTitleCls, allSelectedStatus !== 'NONE' && _style.selectedCls) },
                            _title,
                            _react2.default.createElement(_style.SubMenuIcon, { type: open ? 'up' : 'down' })
                        );
                    },
                    panelKey: subMenuKey
                },
                selectAllCheckbox,
                renderChildren(children)
            ) : _react2.default.createElement(
                _Popover2.default,
                {
                    popup: _react2.default.createElement(
                        _style.PopupMenuWrap,
                        { className: _style.popupWrapCls },
                        _react2.default.createElement(
                            'div',
                            { className: _style.popupContentCls },
                            selectAllCheckbox,
                            renderChildren(children)
                        )
                    ),
                    getPopupContainer: function getPopupContainer(triggerNode) {
                        return triggerNode.parentNode;
                    },
                    builtinPlacements: placements,
                    placement: 'rightTop'
                },
                _react2.default.createElement(
                    'div',
                    { className: className },
                    _react2.default.createElement(
                        'div',
                        { className: (0, _classnames2.default)(_style.popupTitleCls, allSelectedStatus !== 'NONE' && _style.selectedCls) },
                        _title,
                        _react2.default.createElement(_style.SubMenuIcon, { type: 'caret-right' })
                    )
                )
            );
        }
    }]);

    return SubMenu;
}(_react.Component), _class2.propTypes = {
    /** 标题内容 */
    title: _propTypes2.default.node,
    /** 为弹出菜单、或是折叠层 */
    styleType: _propTypes2.default.oneOf(['collapse', 'popover']),
    /** 子菜单的唯一key，也用作collapse的panel的key */
    subMenuKey: _propTypes2.default.any,
    /** 禁用 */
    disabled: _propTypes2.default.bool,
    /** @ignore */
    uid: _propTypes2.default.string,
    /** @ignore */
    multiple: _propTypes2.default.bool,
    /** @ignore */
    allSelectedStatus: _propTypes2.default.string,
    /** @ignore */
    onMultipleSelect: _propTypes2.default.func,
    /** @ignore */
    renderChildren: _propTypes2.default.func,
    /** @ignore */
    children: _propTypes2.default.node,
    /** @ignore */
    locale: _propTypes2.default.object,
    /** @ignore */
    className: _propTypes2.default.string
}, _class2.defaultProps = {
    styleType: 'collapse'
}, _temp)) || _class);


SubMenu.isMenuSubMenu = true;

exports.default = SubMenu;