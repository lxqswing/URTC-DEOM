'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.RowWrap = exports.ColWrap = undefined;

var _styledComponents = require('styled-components');

var _styledComponents2 = _interopRequireDefault(_styledComponents);

var _style = require('../../../style');

var _config = require('../../../config');

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _prefixCls = _config2.default.prefixCls;

var colPrefixCls = _prefixCls + '-col';
var rowPrefixCls = _prefixCls + '-row';

var maxColumns = 12;

var percentage = function percentage(v) {
    return +(v * 100).toFixed(8) + '%';
};

var flexMixin = (0, _styledComponents.css)(['display:flex;flex-flow:row wrap;']);
var spanMixin = (0, _styledComponents.css)(['float:left;flex:0 0 auto;width:', ';', ';'], function (_ref) {
    var span = _ref.span;
    return percentage(span / maxColumns);
}, function (_ref2) {
    var span = _ref2.span;
    return span === 0 && (0, _styledComponents.css)(['display:none;']);
});
var pushMixin = (0, _styledComponents.css)(['left:', ';'], function (_ref3) {
    var push = _ref3.push;
    return percentage(push / maxColumns);
});
var pullMixin = (0, _styledComponents.css)(['right:', ';'], function (_ref4) {
    var pull = _ref4.pull;
    return percentage(pull / maxColumns);
});
var offsetMixin = (0, _styledComponents.css)(['margin-left:', ';'], function (_ref5) {
    var offset = _ref5.offset;
    return percentage(offset / maxColumns);
});
var orderMixin = (0, _styledComponents.css)(['order:', ';'], function (_ref6) {
    var order = _ref6.order;
    return order;
});

var justifyMixin = (0, _styledComponents.css)(['justify-content:', ';'], function (_ref7) {
    var justify = _ref7.justify;
    return {
        start: 'flex-start',
        center: 'center',
        end: 'flex-end',
        'space-around': 'space-around',
        'space-between': 'space-between'
    }[justify];
});
var alignMixin = (0, _styledComponents.css)(['align-items:', ';'], function (_ref8) {
    var align = _ref8.align;
    return { top: 'flex-start', middle: 'center', bottom: 'flex-end' }[align];
});

var ColWrap = exports.ColWrap = _styledComponents2.default.div.attrs({
    className: colPrefixCls
}).withConfig({
    displayName: 'style__ColWrap',
    componentId: 'sc-1wk0x0x-0'
})(['position:relative;display:block;box-sizing:border-box;min-height:1px;', ';', ';', ';', ';', ';'], function (props) {
    return props.span !== undefined && spanMixin;
}, function (props) {
    return props.push && pushMixin;
}, function (props) {
    return props.pull && pullMixin;
}, function (props) {
    return props.offset && offsetMixin;
}, function (props) {
    return props.order && orderMixin;
});

var RowWrap = exports.RowWrap = _styledComponents2.default.div.attrs({
    className: rowPrefixCls
}).withConfig({
    displayName: 'style__RowWrap',
    componentId: 'sc-1wk0x0x-1'
})(['position:relative;display:block;height:auto;', ';margin-left:', ';margin-right:', ';', ';', ';> ', '{padding-left:', ';padding-right:', ';}'], function (_ref9) {
    var type = _ref9.type;
    return type === 'flex' ? flexMixin : _style.clearFixMixin;
}, function (_ref10) {
    var gutter = _ref10.gutter;
    return -(gutter / 2) + 'px';
}, function (_ref11) {
    var gutter = _ref11.gutter;
    return -(gutter / 2) + 'px';
}, justifyMixin, alignMixin, /* sc-sel */ColWrap, function (_ref12) {
    var gutter = _ref12.gutter;
    return gutter / 2 + 'px';
}, function (_ref13) {
    var gutter = _ref13.gutter;
    return gutter / 2 + 'px';
});