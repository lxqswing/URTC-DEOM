'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.deprecatedLogForStyleTypeInfo = undefined;

var _once2 = require('lodash/once');

var _once3 = _interopRequireDefault(_once2);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp2;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _SvgIcon = require('../../components/SvgIcon');

var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

var _deprecatedLog = require('../../utils/deprecatedLog');

var _deprecatedLog2 = _interopRequireDefault(_deprecatedLog);

var _style = require('./style');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var deprecatedLogForStyleTypeInfo = exports.deprecatedLogForStyleTypeInfo = (0, _once3.default)(function () {
    return (0, _deprecatedLog2.default)('Message styleType "info"', '"success"');
});

var StyleType = ['default', 'success', 'loading', 'warning', 'error'];

var IconMap = {
    success: 'tick',
    loading: 'ringLoading',
    error: 'circleExclamation',
    warning: 'circleExclamation',
    default: 'circleExclamation'
};

var Message = (_temp2 = _class = function (_Component) {
    _inherits(Message, _Component);

    function Message() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, Message);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Message.__proto__ || Object.getPrototypeOf(Message)).call.apply(_ref, [this].concat(args))), _this), _this.componentWillMount = function () {
            var styleType = _this.props.styleType;

            if (styleType === 'info') {
                deprecatedLogForStyleTypeInfo();
            }
        }, _this.close = function () {
            var _this$props$onClose = _this.props.onClose,
                onClose = _this$props$onClose === undefined ? function () {} : _this$props$onClose;

            onClose();
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Message, [{
        key: 'render',
        value: function render() {
            var _props = this.props,
                children = _props.children,
                styleType = _props.styleType,
                closable = _props.closable,
                title = _props.title,
                footer = _props.footer,
                rest = _objectWithoutProperties(_props, ['children', 'styleType', 'closable', 'title', 'footer']);

            return _react2.default.createElement(
                _style.MessageWrap,
                rest,
                _react2.default.createElement(
                    _style.IconWrap,
                    null,
                    _react2.default.createElement(_style.TipIcon, {
                        styleType: styleType,
                        spin: styleType === 'loading',
                        size: '16px',
                        type: IconMap[styleType] || 'circleExclamation'
                    })
                ),
                closable && _react2.default.createElement(
                    _style.CloseIconWrap,
                    { onClick: this.close },
                    _react2.default.createElement(_SvgIcon2.default, { size: '16px', type: 'cross' })
                ),
                title && _react2.default.createElement(
                    _style.TitleWrap,
                    null,
                    title
                ),
                children && _react2.default.createElement(
                    _style.ContentWrap,
                    null,
                    children
                ),
                footer && _react2.default.createElement(
                    _style.FooterWrap,
                    null,
                    footer
                )
            );
        }
    }]);

    return Message;
}(_react.Component), _class.propTypes = {
    /** 是否可关闭 */
    closable: _propTypes2.default.bool,
    /** 标题 */
    title: _propTypes2.default.node,
    /** 底栏 */
    footer: _propTypes2.default.node,
    /** 关闭回调 */
    onClose: _propTypes2.default.func,
    /** @ignore */
    className: _propTypes2.default.string,
    /** @ignore */
    children: _propTypes2.default.node,
    /** 样式风格，目前只影响 Icon */
    styleType: _propTypes2.default.oneOf(StyleType)
}, _class.defaultProps = {
    styleType: 'default',
    closable: true
}, _temp2);


Message.StyleType = StyleType;

exports.default = Message;