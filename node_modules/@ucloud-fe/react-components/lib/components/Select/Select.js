'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SelectContext = exports.deprecatedLogForPopover = undefined;

var _map2 = require('lodash/map');

var _map3 = _interopRequireDefault(_map2);

var _findKey2 = require('lodash/findKey');

var _findKey3 = _interopRequireDefault(_findKey2);

var _isString2 = require('lodash/isString');

var _isString3 = _interopRequireDefault(_isString2);

var _isEmpty2 = require('lodash/isEmpty');

var _isEmpty3 = _interopRequireDefault(_isEmpty2);

var _once2 = require('lodash/once');

var _once3 = _interopRequireDefault(_once2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _dec2, _class, _class2, _temp, _initialiseProps;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _createReactContext = require('create-react-context');

var _createReactContext2 = _interopRequireDefault(_createReactContext);

var _Popover = require('../../components/Popover');

var _Popover2 = _interopRequireDefault(_Popover);

var _uncontrolled = require('../../decorators/uncontrolled');

var _uncontrolled2 = _interopRequireDefault(_uncontrolled);

var _localeConsumerDecorator = require('../../components/LocaleProvider/localeConsumerDecorator');

var _localeConsumerDecorator2 = _interopRequireDefault(_localeConsumerDecorator);

var _Menu = require('../../components/Menu/Menu');

var _deprecatedLog = require('../../utils/deprecatedLog');

var _deprecatedLog2 = _interopRequireDefault(_deprecatedLog);

var _Option = require('./Option');

var _Option2 = _interopRequireDefault(_Option);

var _Extra = require('./Extra');

var _Extra2 = _interopRequireDefault(_Extra);

var _style = require('./style');

var _zh_CN = require('./locale/zh_CN');

var _zh_CN2 = _interopRequireDefault(_zh_CN);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var deprecatedLogForPopover = exports.deprecatedLogForPopover = (0, _once3.default)(function () {
    return (0, _deprecatedLog2.default)('Select popover', 'popoverProps');
});

var Size = ['sm', 'md', 'lg'];

var SelectContext = exports.SelectContext = (0, _createReactContext2.default)();

var Select = (_dec = (0, _localeConsumerDecorator2.default)({ defaultLocale: _zh_CN2.default, localeName: 'Select' }), _dec2 = (0, _uncontrolled2.default)({}), _dec(_class = _dec2(_class = (_temp = _class2 = function (_Component) {
    _inherits(Select, _Component);

    function Select(props) {
        _classCallCheck(this, Select);

        var _this = _possibleConstructorReturn(this, (Select.__proto__ || Object.getPrototypeOf(Select)).call(this, props));

        _initialiseProps.call(_this);

        var _this$props = _this.props,
            children = _this$props.children,
            options = _this$props.options;

        var itemTree = void 0;
        if ((0, _isEmpty3.default)(options)) {
            itemTree = (0, _Menu.getItemTree)(children);
        } else {
            itemTree = (0, _Menu.getItemTree)(_this.renderOptions(options));
        }
        _this.state = {
            searchValue: '',
            itemTree: itemTree
        };
        if ('popover' in props) {
            deprecatedLogForPopover();
        }
        return _this;
    }

    _createClass(Select, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            var children = nextProps.children,
                options = nextProps.options;

            if (children === this.props.children && options === this.props.options) return;
            var itemTree = void 0;
            if ((0, _isEmpty3.default)(options)) {
                itemTree = (0, _Menu.getItemTree)(children);
            } else {
                itemTree = (0, _Menu.getItemTree)(this.renderOptions(options));
            }
            this.setState({
                itemTree: itemTree
            });
        }
    }, {
        key: 'render',
        value: function render() {
            /* eslint-disable no-unused-vars */
            var _props = this.props,
                children = _props.children,
                options = _props.options,
                extra = _props.extra,
                onChange = _props.onChange,
                search = _props.search,
                value = _props.value,
                multiple = _props.multiple,
                showSelectAll = _props.showSelectAll,
                defaultValue = _props.defaultValue,
                renderContent = _props.renderContent,
                renderSelector = _props.renderSelector,
                popover = _props.popover,
                popoverProps = _props.popoverProps,
                customStyle = _props.customStyle,
                emptyContent = _props.emptyContent,
                rest = _objectWithoutProperties(_props, ['children', 'options', 'extra', 'onChange', 'search', 'value', 'multiple', 'showSelectAll', 'defaultValue', 'renderContent', 'renderSelector', 'popover', 'popoverProps', 'customStyle', 'emptyContent']);
            /* eslint-enable no-unused-vars */


            var _state = this.state,
                visible = _state.visible,
                searchValue = _state.searchValue;

            return _react2.default.createElement(
                SelectContext.Provider,
                {
                    value: {
                        searchValue: searchValue,
                        handleSearch: this.handleSearch,
                        hidePopup: this.hidePopup
                    }
                },
                _react2.default.createElement(
                    _style.SelectWrap,
                    rest,
                    _react2.default.createElement(
                        _Popover2.default,
                        _extends({
                            forceRender: true,
                            popup: this.renderPopup(),
                            onVisibleChange: this.handleVisibleChange,
                            placement: 'bottomLeft',
                            trigger: ['click'],
                            forwardPopupContainer: function forwardPopupContainer(triggerNode) {
                                return triggerNode.parentNode;
                            },
                            visible: visible,
                            zIndex: 100
                        }, popover, popoverProps),
                        _react2.default.createElement(
                            'div',
                            null,
                            this.renderSelector()
                        )
                    )
                )
            );
        }
    }]);

    return Select;
}(_react.Component), _class2.propTypes = {
    /** @ignore */
    children: _propTypes2.default.node,
    /** 当前值，controlled */
    value: _propTypes2.default.any,
    /** 默认值，uncontrolled */
    defaultValue: _propTypes2.default.any,
    /** 无选项时显示内容 */
    placeholder: _propTypes2.default.node,
    /** 修改时的回调 */
    onChange: _propTypes2.default.func,
    /** 快速设置选项 */
    options: _propTypes2.default.array,
    /** 在尾部增加附加内容，会脱离选项流容器，超高度时不会一起滚动，如需在选项中嵌入附加内容，可使用 Select.Extra */
    extra: _propTypes2.default.oneOfType([_propTypes2.default.shape({
        content: _propTypes2.default.node.isRequired
    }), _propTypes2.default.node]),
    /** @ignore */
    className: _propTypes2.default.string,
    /** 是否多选 */
    multiple: _propTypes2.default.bool,
    /** 是否显示全选 */
    showSelectAll: _propTypes2.default.bool,
    /** 是否禁用 */
    disabled: _propTypes2.default.bool,
    /**
     * 如何渲染选中项的展示
     * @param {any} value - 当前 select 的值
     */
    renderContent: _propTypes2.default.func,
    /**
     * 自定义渲染选择器
     * @param {node} content - 渲染的内容
     * @param {bool} visible - 当前的select下拉是否展示
     */
    renderSelector: _propTypes2.default.func,
    /**
     * - 是否展示搜索框，可以为true或者Object
     * - 为Object时可传入handleSearch对搜索筛选进行自定义
     * @argument searchValue - 搜索的值
     * @argument value - option的值
     * @argument item - option的引用
     */
    search: _propTypes2.default.oneOfType([_propTypes2.default.oneOf([true]), _propTypes2.default.shape({
        handleSearch: _propTypes2.default.func
    })]),
    /** 尺寸 */
    size: _propTypes2.default.oneOf(Size),
    /**
     * 弹出层的popover props
     * @deprecated 请使用popoverProps替换
     */
    popover: _propTypes2.default.object,
    /** 弹出层的popover props */
    popoverProps: _propTypes2.default.object,
    /** @ignore */
    onVisibleChange: _propTypes2.default.func,
    /** @ignore */
    locale: _propTypes2.default.object,
    /**
     * 可修改自定义样式集中营
     */
    customStyle: _propTypes2.default.shape({
        optionListMaxHeight: _propTypes2.default.number
    }),
    /**
     * 可选性为空时展示内容
     */
    emptyContent: _propTypes2.default.node
}, _class2.defaultProps = {
    onChange: function onChange() {},
    size: 'md',
    onVisibleChange: function onVisibleChange() {},
    customStyle: {}
}, _initialiseProps = function _initialiseProps() {
    var _this2 = this;

    this.handleSearch = function (value, item) {
        var search = _this2.props.search;
        var searchValue = _this2.state.searchValue;

        if (!search || !searchValue) {
            return true;
        }
        if (search.handleSearch) {
            return search.handleSearch(searchValue, value, item);
        } else {
            var children = item.props.children;

            return (value + '').indexOf(searchValue) >= 0 || children && (0, _isString3.default)(children) && children.indexOf(searchValue) >= 0;
        }
    };

    this.handleVisibleChange = function (open) {
        _this2.setState({
            visible: open
        });
        var onVisibleChange = _this2.props.onVisibleChange;

        onVisibleChange(open);
    };

    this.hidePopup = function () {
        _this2.handleVisibleChange(false);
    };

    this.renderContent = function () {
        var state = _this2.state,
            props = _this2.props;
        var renderContent = props.renderContent,
            multiple = props.multiple,
            value = props.value;
        var itemTree = state.itemTree;

        var valueChild = void 0;
        var rootItemTree = itemTree[_Menu.rootPrefix];
        var getValueChild = function getValueChild(v) {
            var itemKey = (0, _findKey3.default)(rootItemTree, function (item) {
                return item.props.value === v;
            });
            if (itemKey) {
                return rootItemTree[itemKey].props.children;
            } else {
                return v;
            }
        };

        if (!multiple) {
            valueChild = getValueChild(value);
        } else {
            valueChild = (0, _map3.default)(value, getValueChild);
        }

        if (renderContent) {
            return renderContent(value, valueChild);
        } else {
            return _this2.defaultRenderContent(value, valueChild);
        }
    };

    this.defaultRenderContent = function (value, valueChild) {
        var _props2 = _this2.props,
            multiple = _props2.multiple,
            locale = _props2.locale,
            _props2$placeholder = _props2.placeholder,
            placeholder = _props2$placeholder === undefined ? locale.placeholder : _props2$placeholder;

        if (!multiple) {
            if (value === undefined) {
                return placeholder;
            } else {
                return valueChild;
            }
        } else {
            if (value && value.length) {
                return '' + locale.selected + value.length + locale.items;
            } else {
                return placeholder;
            }
        }
    };

    this.renderEmptyContent = function () {
        var _props3 = _this2.props,
            emptyContent = _props3.emptyContent,
            locale = _props3.locale;

        return emptyContent || _react2.default.createElement(
            _style.EmptyContentWrapper,
            null,
            locale.emptyTip
        );
    };

    this.renderPopup = function () {
        var _props4 = _this2.props,
            search = _props4.search,
            children = _props4.children,
            _onChange = _props4.onChange,
            multiple = _props4.multiple,
            showSelectAll = _props4.showSelectAll,
            value = _props4.value,
            options = _props4.options,
            extra = _props4.extra,
            customStyle = _props4.customStyle;
        var _state2 = _this2.state,
            searchValue = _state2.searchValue,
            itemTree = _state2.itemTree;

        var Options = _this2.renderOptions(options);
        var Extra = _this2.renderExtra(extra);

        return _react2.default.createElement(
            _style.MenuWrap,
            null,
            search && _react2.default.createElement(_style.SelectSearchInput, {
                onChange: function onChange(e) {
                    return _this2.setState({
                        searchValue: e.target.value
                    });
                },
                value: searchValue
            }),
            _react2.default.createElement(
                _style.BlockMenu,
                {
                    onChange: function onChange(value) {
                        if (!multiple) {
                            _this2.handleVisibleChange(false);
                            _onChange(value[0]);
                        } else {
                            _onChange(value);
                        }
                    },
                    customStyle: customStyle,
                    itemTree: itemTree,
                    multiple: multiple,
                    showSelectAll: showSelectAll,
                    selectedKeys: multiple ? value : [value]
                },
                Options || children || _this2.renderEmptyContent()
            ),
            Extra
        );
    };

    this.renderOptions = function (options) {
        if (!(0, _isEmpty3.default)(options)) {
            return options.map(function (option) {
                var label = option.label,
                    value = option.value,
                    restOptionProps = _objectWithoutProperties(option, ['label', 'value']);

                return _react2.default.createElement(
                    _Option2.default,
                    _extends({ key: value, value: value }, restOptionProps),
                    label !== undefined ? label : value
                );
            });
        } else {
            return null;
        }
    };

    this.renderExtra = function (extra) {
        if (!(0, _isEmpty3.default)(extra)) {
            if (_react2.default.isValidElement(extra)) {
                return _react2.default.createElement(
                    _Extra2.default,
                    null,
                    extra
                );
            } else {
                var content = extra.content,
                    rest = _objectWithoutProperties(extra, ['content']);

                return _react2.default.createElement(
                    _Extra2.default,
                    rest,
                    content
                );
            }
        }
    };

    this.renderSelector = function () {
        var renderSelector = _this2.props.renderSelector;
        var visible = _this2.state.visible;

        if (renderSelector) {
            return renderSelector(_this2.renderContent(), visible);
        } else {
            return _this2.defaultRenderSelector();
        }
    };

    this.defaultRenderSelector = function () {
        var visible = _this2.state.visible;
        var _props5 = _this2.props,
            size = _props5.size,
            disabled = _props5.disabled;

        return _react2.default.createElement(
            _style.Selector,
            { styleType: 'border', size: size, disabled: disabled },
            _react2.default.createElement(
                'div',
                { key: 'content' },
                _this2.renderContent()
            ),
            _react2.default.createElement(_style.Arrow, { key: 'icon', type: visible ? 'up' : 'down' })
        );
    };
}, _temp)) || _class) || _class);

Select.Size = Size;
exports.default = Select;