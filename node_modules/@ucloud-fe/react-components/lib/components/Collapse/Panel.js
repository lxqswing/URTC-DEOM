'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _isFunction2 = require('lodash/isFunction');

var _isFunction3 = _interopRequireDefault(_isFunction2);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _dec2, _class, _class2, _temp2;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _item = require('../../decorators/selectableWithStore/item');

var _item2 = _interopRequireDefault(_item);

var _uncontrolled = require('../../decorators/uncontrolled');

var _uncontrolled2 = _interopRequireDefault(_uncontrolled);

var _style = require('./style');

var _Collapse = require('./Collapse');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Panel = (_dec = (0, _uncontrolled2.default)({ valueName: 'open' }), _dec2 = (0, _item2.default)({
    checkedName: 'open',
    valueName: 'panelKey',
    StoreContext: _Collapse.StoreContext
}), _dec(_class = _dec2(_class = (_temp2 = _class2 = function (_Component) {
    _inherits(Panel, _Component);

    function Panel() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, Panel);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Panel.__proto__ || Object.getPrototypeOf(Panel)).call.apply(_ref, [this].concat(args))), _this), _this.toggle = function (_open) {
            var _this$props = _this.props,
                open = _this$props.open,
                onChange = _this$props.onChange,
                disabled = _this$props.disabled;

            if (disabled) {
                return;
            }
            if (_open === undefined) {
                _open = !open;
            }
            onChange(_open);
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Panel, [{
        key: 'renderTitle',
        value: function renderTitle() {
            var _props = this.props,
                disabled = _props.disabled,
                title = _props.title,
                onChange = _props.onChange,
                open = _props.open;

            return _react2.default.createElement(
                'div',
                { onClick: function onClick() {
                        return !disabled && onChange(!open);
                    } },
                (0, _isFunction3.default)(title) ? title({ open: open, disabled: disabled, toggle: this.toggle }) : title
            );
        }
    }, {
        key: 'render',
        value: function render() {
            /* eslint-disable no-unused-vars */
            var _props2 = this.props,
                title = _props2.title,
                children = _props2.children,
                open = _props2.open,
                onChange = _props2.onChange,
                panelKey = _props2.panelKey,
                multiple = _props2.multiple,
                disabled = _props2.disabled,
                forceRender = _props2.forceRender,
                defaultOpen = _props2.defaultOpen,
                titlePosition = _props2.titlePosition,
                rest = _objectWithoutProperties(_props2, ['title', 'children', 'open', 'onChange', 'panelKey', 'multiple', 'disabled', 'forceRender', 'defaultOpen', 'titlePosition']);
            /* eslint-enable no-unused-vars */


            return _react2.default.createElement(
                'div',
                rest,
                titlePosition === 'top' && this.renderTitle(),
                forceRender || open ? _react2.default.createElement(
                    _style.PanelWrap,
                    { open: open },
                    children
                ) : null,
                titlePosition === 'bottom' && this.renderTitle()
            );
        }
    }]);

    return Panel;
}(_react.Component), _class2.propTypes = {
    /** 标题项，为函数时会传入面板当前open和disabled状态，和toggle函数 */
    title: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.func]),
    /** @ignore */
    children: _propTypes2.default.node,
    /** 修改回调 */
    onChange: _propTypes2.default.func,
    /** 是否展开，controlled */
    open: _propTypes2.default.bool,
    /** 默认展开状态，uncontrolled */
    defaultOpen: _propTypes2.default.bool,
    /** 是否强制渲染 */
    forceRender: _propTypes2.default.bool,
    /** 是否禁用 */
    disabled: _propTypes2.default.bool,
    /** 唯一键值 */
    panelKey: _propTypes2.default.any,
    /** title的位置 */
    titlePosition: _propTypes2.default.oneOf(['top', 'bottom']),
    /** @ignore */
    multiple: _propTypes2.default.bool
}, _class2.defaultProps = {
    titlePosition: 'top'
}, _temp2)) || _class) || _class);
exports.default = Panel;