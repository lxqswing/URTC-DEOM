'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = BodyTable;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _BaseTable = require('./BaseTable');

var _BaseTable2 = _interopRequireDefault(_BaseTable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function BodyTable(props, _ref) {
    var table = _ref.table;
    var _table$props = table.props,
        prefixCls = _table$props.prefixCls,
        scroll = _table$props.scroll;
    var columns = props.columns,
        tableClassName = props.tableClassName,
        getRowKey = props.getRowKey,
        handleBodyScroll = props.handleBodyScroll,
        expander = props.expander,
        tableLayout = props.tableLayout;
    var saveRef = table.saveRef;
    var useFixedHeader = table.props.useFixedHeader;

    var bodyStyle = Object.assign({}, table.props.bodyStyle);

    if (scroll.x) {
        bodyStyle.overflowX = bodyStyle.overflowX || 'scroll';
        // Fix weired webkit render bug
        // https://github.com/ant-design/ant-design/issues/7783
        bodyStyle.WebkitTransform = 'translate3d (0, 0, 0)';
    }

    if (scroll.y) {
        // maxHeight will make fixed-Table scrolling not working
        // so we only set maxHeight to body-Table here
        bodyStyle.maxHeight = bodyStyle.maxHeight || scroll.y;
        bodyStyle.overflowY = bodyStyle.overflowY || 'scroll';
        useFixedHeader = true;
    }

    var baseTable = _react2.default.createElement(_BaseTable2.default, {
        tableClassName: tableClassName,
        hasHead: !useFixedHeader,
        hasBody: true,
        columns: columns,
        expander: expander,
        getRowKey: getRowKey,
        tableLayout: tableLayout
    });

    return _react2.default.createElement(
        'div',
        {
            key: 'bodyTable',
            className: prefixCls + '-body',
            style: bodyStyle,
            ref: saveRef('bodyTable'),
            onScroll: handleBodyScroll
        },
        baseTable
    );
}

BodyTable.propTypes = {
    columns: _propTypes2.default.array.isRequired,
    tableClassName: _propTypes2.default.string.isRequired,
    handleBodyScroll: _propTypes2.default.func.isRequired,
    getRowKey: _propTypes2.default.func.isRequired,
    expander: _propTypes2.default.object.isRequired,
    tableLayout: _propTypes2.default.oneOf(['fixed', 'auto'])
};

BodyTable.contextTypes = {
    table: _propTypes2.default.any
};