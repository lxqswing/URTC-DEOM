'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _findIndex2 = require('lodash/findIndex');

var _findIndex3 = _interopRequireDefault(_findIndex2);

var _each2 = require('lodash/each');

var _each3 = _interopRequireDefault(_each2);

var _indexOf2 = require('lodash/indexOf');

var _indexOf3 = _interopRequireDefault(_indexOf2);

var _find2 = require('lodash/find');

var _find3 = _interopRequireDefault(_find2);

var _filter2 = require('lodash/filter');

var _filter3 = _interopRequireDefault(_filter2);

var _keys2 = require('lodash/keys');

var _keys3 = _interopRequireDefault(_keys2);

var _debounce2 = require('lodash/debounce');

var _debounce3 = _interopRequireDefault(_debounce2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _SimpleStore = require('../../stores/SimpleStore');

var _SimpleStore2 = _interopRequireDefault(_SimpleStore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var noop = function noop() {};

var storeDecorator = function storeDecorator(_ref) {
    var _ref$valueName = _ref.valueName,
        valueName = _ref$valueName === undefined ? 'value' : _ref$valueName,
        _ref$onChangeName = _ref.onChangeName,
        onChangeName = _ref$onChangeName === undefined ? 'onChange' : _ref$onChangeName,
        _ref$childValueName = _ref.childValueName,
        childValueName = _ref$childValueName === undefined ? 'value' : _ref$childValueName,
        StoreContext = _ref.StoreContext,
        getItemValue = _ref.getItemValue,
        _ref$getValue = _ref.getValue,
        getValue = _ref$getValue === undefined ? function (v) {
        return v;
    } : _ref$getValue,
        _ref$setValue = _ref.setValue,
        setValue = _ref$setValue === undefined ? function (v) {
        return v;
    } : _ref$setValue,
        _ref$callOnChangeBefo = _ref.callOnChangeBeforeMounted,
        callOnChangeBeforeMounted = _ref$callOnChangeBefo === undefined ? false : _ref$callOnChangeBefo;
    return function (Parent) {
        var _class, _temp;

        if (!StoreContext) {
            console.error('Must pass in StoreContext');
        }
        if (!getItemValue) {
            getItemValue = function getItemValue(item) {
                return item.props[childValueName] === undefined ? item.uid : item.props[childValueName];
            };
        }
        return _temp = _class = function (_Component) {
            _inherits(StoreWrappedComponent, _Component);

            function StoreWrappedComponent(props) {
                _classCallCheck(this, StoreWrappedComponent);

                var _this = _possibleConstructorReturn(this, (StoreWrappedComponent.__proto__ || Object.getPrototypeOf(StoreWrappedComponent)).call(this, props));

                _this.handleValueChange = function (value) {
                    var selectable = _this.props.selectable;

                    if (!selectable) {
                        return;
                    }
                    _this.handleOnChange(value);
                };

                _this.handleItemsChange = function (items) {
                    _this.store.setState({ items: items });
                    _this.onItemsChange(items);
                    _this.forceUpdate();
                };

                _this.onItemsChange = (0, _debounce3.default)(function (items) {
                    var onItemsChange = _this.props.onItemsChange;

                    onItemsChange(items);
                });
                _this.handleOnChange = noop;
                _this._handleOnChange = (0, _debounce3.default)(function (value) {
                    var multiple = _this.props.multiple;

                    var onChange = _this.props[onChangeName] || noop;
                    if (multiple) {
                        onChange(setValue(value), _this.getAllSelectedStatus());
                    } else {
                        onChange(setValue(value));
                    }
                });

                _this.getCurrentValue = function (copy) {
                    var value = getValue(_this.props[valueName]) || [];
                    return copy ? [].concat(_toConsumableArray(value)) : value;
                };

                _this.getAllSelectedStatus = function () {
                    var value = _this.getCurrentValue();

                    var _this$store$getState = _this.store.getState(),
                        items = _this$store$getState.items;

                    var itemLength = (0, _keys3.default)(items).length;
                    var valueLength = value.length;
                    return valueLength === 0 ? 'NONE' : valueLength === itemLength ? 'ALL' : 'PART';
                };

                _this.getAllSelectedStatusOfMiddle = function (middle) {
                    var value = _this.getCurrentValue();

                    var _this$store$getState2 = _this.store.getState(),
                        items = _this$store$getState2.items;

                    var middleUid = middle.uid;
                    var middleItems = (0, _filter3.default)(items, function (item) {
                        return item.parents[middleUid];
                    });
                    var middleValue = (0, _filter3.default)(value, function (v) {
                        return (0, _find3.default)(middleItems, function (item) {
                            return getItemValue(item.item) === v;
                        });
                    });
                    var itemLength = middleItems.length;
                    var valueLength = middleValue.length;

                    return valueLength === 0 ? 'NONE' : valueLength === itemLength ? 'ALL' : 'PART';
                };

                _this.appendItem = function (item) {
                    var parents = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                    var uid = item.uid;

                    if (!uid) {
                        return console.error('Must have uid for store item');
                    }

                    var _this$store$getState3 = _this.store.getState(),
                        items = _this$store$getState3.items;

                    if (uid in items) {
                        return console.error('Can\'t have same uid form diffent items: ' + uid);
                    }
                    _this.handleItemsChange(Object.assign({}, items, _defineProperty({}, uid, {
                        item: item,
                        parents: parents
                    })));
                };

                _this.removeItem = function (item) {
                    var uid = item.uid;

                    if (!uid) {
                        return console.error('Must have uid for store item');
                    }

                    var _this$store$getState4 = _this.store.getState(),
                        items = _this$store$getState4.items;

                    if (!(uid in items)) {
                        return console.error('There is no this item: ' + uid);
                    }
                    items = Object.assign({}, items);
                    delete items[uid];
                    _this.handleItemsChange(items);
                };

                _this.toggleItem = function (item, selected) {
                    var uid = item.uid;

                    if (!uid) {
                        return console.error('Must have uid for store item');
                    }
                    var itemValue = getItemValue(item);
                    var multiple = _this.props.multiple;

                    var currentSelected = _this.getItemSelected(item);
                    if (multiple) {
                        var value = _this.getCurrentValue(true);
                        var itemIndex = (0, _indexOf3.default)(value, itemValue);
                        if (currentSelected && !selected) {
                            value.splice(itemIndex, 1);
                            _this.handleValueChange(value);
                        } else if (!currentSelected && selected) {
                            value.push(itemValue);
                            _this.handleValueChange(value);
                        }
                    } else {
                        if (currentSelected && !selected) {
                            _this.handleValueChange([]);
                        } else if (!currentSelected && selected) {
                            _this.handleValueChange([itemValue]);
                        }
                    }
                };

                _this.getItemSelected = function (item) {
                    var value = _this.getCurrentValue();

                    var itemValue = getItemValue(item);
                    var multiple = _this.props.multiple;

                    if (multiple) {
                        return (0, _indexOf3.default)(value, itemValue) >= 0;
                    } else {
                        return !!value.length && value[0] === itemValue;
                    }
                };

                _this.selectAllOfMiddle = function (middle) {
                    var value = _this.getCurrentValue(true);

                    var _this$store$getState5 = _this.store.getState(),
                        items = _this$store$getState5.items;

                    var middleUid = middle.uid;
                    var middleItems = (0, _filter3.default)(items, function (item) {
                        return item.parents[middleUid];
                    });
                    (0, _each3.default)(middleItems, function (item) {
                        var itemValue = getItemValue(item.item);
                        if ((0, _indexOf3.default)(value, itemValue) === -1) {
                            value.push(itemValue);
                        }
                    });
                    _this.handleValueChange(value);
                };

                _this.unselectAllOfMiddle = function (middle) {
                    var value = _this.getCurrentValue(true);

                    var _this$store$getState6 = _this.store.getState(),
                        items = _this$store$getState6.items;

                    var middleUid = middle.uid;
                    var middleItems = (0, _filter3.default)(items, function (item) {
                        return item.parents[middleUid];
                    });
                    value = (0, _filter3.default)(value, function (v) {
                        return (0, _findIndex3.default)(middleItems, function (item) {
                            return getItemValue(item.item) === v;
                        }) === -1;
                    });
                    _this.handleValueChange(value);
                };

                _this.store = new _SimpleStore2.default({
                    items: {}
                });
                if (callOnChangeBeforeMounted) {
                    _this.handleOnChange = _this._handleOnChange;
                }
                return _this;
            }

            _createClass(StoreWrappedComponent, [{
                key: 'componentDidMount',
                value: function componentDidMount() {
                    this.handleOnChange = this._handleOnChange;
                }
            }, {
                key: 'componentWillUnmount',
                value: function componentWillUnmount() {
                    this.handleOnChange = noop;
                }
            }, {
                key: 'render',
                value: function render() {
                    /* eslint-disable-next-line no-unused-vars*/
                    var _props = this.props,
                        innerRef = _props.innerRef,
                        onItemsChange = _props.onItemsChange,
                        rest = _objectWithoutProperties(_props, ['innerRef', 'onItemsChange']);

                    return _react2.default.createElement(
                        StoreContext.Provider,
                        {
                            value: {
                                store: this.store,
                                multiple: this.props.multiple,
                                appendItem: this.appendItem,
                                removeItem: this.removeItem,
                                toggleItem: this.toggleItem,
                                getItemSelected: this.getItemSelected,
                                getAllSelectedStatusOfMiddle: this.getAllSelectedStatusOfMiddle,
                                selectAllOfMiddle: this.selectAllOfMiddle,
                                unselectAllOfMiddle: this.unselectAllOfMiddle,
                                selectable: this.props.selectable
                            }
                        },
                        _react2.default.createElement(Parent, _extends({ ref: innerRef }, rest))
                    );
                }
            }]);

            return StoreWrappedComponent;
        }(_react.Component), _class.displayName = 'StoreWrapped' + Parent.name, _class.propTypes = {
            multiple: _propTypes2.default.bool,
            selectable: _propTypes2.default.bool,
            innerRef: _propTypes2.default.any,
            onItemsChange: _propTypes2.default.func
        }, _class.defaultProps = {
            multiple: Parent.defaultProps && Parent.defaultProps.multiple,
            selectable: Parent.defaultProps && Parent.defaultProps.selectable,
            onItemsChange: noop
        }, _temp;
    };
};

exports.default = storeDecorator;