'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _uniqueId2 = require('lodash/uniqueId');

var _uniqueId3 = _interopRequireDefault(_uniqueId2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var contextProps = 'ITEM_DECORATOR_CONTEXT_PROPS';

var itemDecorator = function itemDecorator(_ref) {
    var _ref$checkedName = _ref.checkedName,
        checkedName = _ref$checkedName === undefined ? 'checked' : _ref$checkedName,
        _ref$onChangeName = _ref.onChangeName,
        onChangeName = _ref$onChangeName === undefined ? 'onChange' : _ref$onChangeName,
        StoreContext = _ref.StoreContext;
    return function (Item) {
        var _class, _temp;

        if (!StoreContext) {
            console.error('Must have StoreContext');
        }
        var ItemWrappedComponent = (_temp = _class = function (_Component) {
            _inherits(ItemWrappedComponent, _Component);

            function ItemWrappedComponent(props) {
                _classCallCheck(this, ItemWrappedComponent);

                var _this = _possibleConstructorReturn(this, (ItemWrappedComponent.__proto__ || Object.getPrototypeOf(ItemWrappedComponent)).call(this, props));

                _this.onChange = function (checked) {
                    for (var _len = arguments.length, rest = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                        rest[_key - 1] = arguments[_key];
                    }

                    var storeContext = _this.props[contextProps];
                    if (storeContext && storeContext.selectable) {
                        storeContext.toggleItem(_this, checked);
                    }
                    if (_this.props[onChangeName]) {
                        var _this$props;

                        (_this$props = _this.props)[onChangeName].apply(_this$props, [checked].concat(rest));
                    }
                };

                _this.getChecked = function () {
                    var storeContext = _this.props[contextProps];
                    if (storeContext) {
                        return storeContext.getItemSelected(_this);
                    } else {
                        return _this.props[checkedName];
                    }
                };

                _this.uid = (0, _uniqueId3.default)('uc-' + Item.name.toLowerCase() + '-');
                return _this;
            }

            _createClass(ItemWrappedComponent, [{
                key: 'componentWillMount',
                value: function componentWillMount() {
                    var storeContext = this.props[contextProps];
                    if (storeContext) {
                        storeContext.appendItem(this);
                    }
                }
            }, {
                key: 'componentWillUnmount',
                value: function componentWillUnmount() {
                    var storeContext = this.props[contextProps];
                    if (storeContext) {
                        storeContext.removeItem(this);
                    }
                }
            }, {
                key: 'render',
                value: function render() {
                    var _ref2;

                    var rest = _objectWithoutProperties(this.props, []);

                    delete rest[contextProps];
                    var storeContext = this.props[contextProps] || {};
                    return _react2.default.createElement(Item, _extends({
                        multiple: storeContext.multiple
                    }, rest, (_ref2 = {}, _defineProperty(_ref2, checkedName, this.getChecked()), _defineProperty(_ref2, onChangeName, this.onChange), _ref2)));
                }
            }]);

            return ItemWrappedComponent;
        }(_react.Component), _class.displayName = 'ItemWrapped' + Item.name, _temp);

        return function (_Component2) {
            _inherits(ItemWrappedComponentWithContext, _Component2);

            function ItemWrappedComponentWithContext() {
                _classCallCheck(this, ItemWrappedComponentWithContext);

                return _possibleConstructorReturn(this, (ItemWrappedComponentWithContext.__proto__ || Object.getPrototypeOf(ItemWrappedComponentWithContext)).apply(this, arguments));
            }

            _createClass(ItemWrappedComponentWithContext, [{
                key: 'render',
                value: function render() {
                    var _this3 = this;

                    return _react2.default.createElement(
                        StoreContext.Consumer,
                        null,
                        function (context) {
                            return _react2.default.createElement(ItemWrappedComponent, _extends({}, _defineProperty({}, contextProps, context), _this3.props));
                        }
                    );
                }
            }]);

            return ItemWrappedComponentWithContext;
        }(_react.Component);
    };
};

exports.default = itemDecorator;